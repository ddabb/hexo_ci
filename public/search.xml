<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试CI是否正常</title>
      <link href="/%E6%B5%8B%E8%AF%95CI%E6%98%AF%E5%90%A6%E6%AD%A3%E5%B8%B8/"/>
      <url>/%E6%B5%8B%E8%AF%95CI%E6%98%AF%E5%90%A6%E6%AD%A3%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>我的第一个AI应用是参考<a href="https://cloud.tencent.com/developer/article/1348205">实战：从0搭建完整 AI 开发环境写出第一个 AI 应用</a>和<a href="http://www.cnblogs.com/ms-uap/p/9123033.html">AI应用开发实战 - 从零开始配置环境</a>两篇文章进行的实施,故以该文做出相应的补充。</p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><h2 id="‘python’-不是内部或外部变量"><a href="#‘python’-不是内部或外部变量" class="headerlink" title="‘python’ 不是内部或外部变量"></a>‘python’ 不是内部或外部变量</h2><p>命令行执行<strong>python —version</strong>提示’python’ 不是内部或外部变量，在命令行中输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set PATH=&quot;C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python36_64&quot;;%PATH%</span><br></pre></td></tr></table></figure><br>之后,再输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure><br>输出版本为3.6.5<br>但是关闭命令行之后，再输入python —version时,依旧提示 <strong>‘python’ 不是内部或外部变量</strong>。<br>故在计算机→属性右键→高级系统设置→环境变量→选择<strong>PATH</strong>→点击新建→将<strong>C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python36_64</strong>添加→确定，之后再运行python —version，显示正常。</p><h2 id="saved-model-pb路径不对"><a href="#saved-model-pb路径不对" class="headerlink" title="saved_model.pb路径不对"></a>saved_model.pb路径不对</h2><p>单独参考第一篇文章进行配置时，发现没有<strong>samples-for-ai\export\saved_model.pb</strong>这个路径。<br>原因是没有启动<strong>examples\tensorflow\TensorflowExamples.sln</strong>这个解决方案，将MNIST项目设置为启动项目并运行,则会有samples-for-ai\export\saved_model.pb这个文件了。</p><h2 id="命令行无响应"><a href="#命令行无响应" class="headerlink" title="命令行无响应"></a>命令行无响应</h2><p>安装<strong>scipy-1.1.0</strong>和<strong>mxnet_cu90-1.2.0</strong>时,命令行一直无响应,解决方案是到<a href="https://pypi.org/project/scipy/1.1.0/">scipy-1.1.0</a>和<a href="https://pypi.org/project/mxnet-cu90/1.2.0/">mxnet-cu90 1.2.0</a>下载指定的文件，然后通过pip3命令来执行安装，其余问题也可以通过类似命令来解决。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install D:\scipy-1.1.0-cp36-none-win_amd64.whl</span><br><span class="line">pip3 install D:\mxnet_cu90-1.2.0-py2.py3-none-win_amd64.whl</span><br></pre></td></tr></table></figure><p>通过下载的文件可以得知，文件较大，命令行无法及时完成下载,所以<strong>需要有一定的耐心等待</strong></p><blockquote><p>注意需要将<strong>C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python36_64\Scripts</strong>添加到<strong>PATH变量</strong>中。</p></blockquote><h2 id="cudnn版本不对"><a href="#cudnn版本不对" class="headerlink" title="cudnn版本不对"></a>cudnn版本不对</h2><p>现在官网<a href="https://developer.nvidia.com/cudnn">https://developer.nvidia.com/cudnn</a>提供的cudnn版本是7.4.1,而微软示例代码中的cudnn版本是7.0.3,高版本的cudnn也会导致编译失败，需要找低版本的7.0.<em>的cudnn替换到<em>*C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin\cudnn64_7.dll</em></em>  </p><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p>解决了这部分问题之后,能正常展示winform界面，运行结果如下:<br><img src="/%E6%B5%8B%E8%AF%95CI%E6%98%AF%E5%90%A6%E6%AD%A3%E5%B8%B8/正确.png" alt="正确识别"><br><img src="/%E6%B5%8B%E8%AF%95CI%E6%98%AF%E5%90%A6%E6%AD%A3%E5%B8%B8/错误.png" alt="错误识别"><br>该部分涉及到训练模型是否足够多的问题，该文不做深入的研究。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>参考资料中提及的两篇文章都已经是做<strong>手写识别</strong>非常好的入门资料，该文仅仅是对这两篇文章做一个相应的补充，以作备忘。<br>另外我希望早日掌握以下技能</p><blockquote><p>识别<strong>开心消消乐</strong>的游戏界面，然后通过能够确定执行的最佳下一步，达到这个目的，我觉得我对人工智能的了解和我的AI编程就进入了新的层次了。</p></blockquote><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://cloud.tencent.com/developer/article/1348205">实战：从0搭建完整 AI 开发环境写出第一个 AI 应用</a></li><li><a href="http://www.cnblogs.com/ms-uap/p/9123033.html">AI应用开发实战 - 从零开始配置环境</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> IT经验 </category>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> python </tag>
            
            <tag> 手写识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试CI</title>
      <link href="/%E6%B5%8B%E8%AF%95CI/"/>
      <url>/%E6%B5%8B%E8%AF%95CI/</url>
      
        <content type="html"><![CDATA[<p>   验证下CI是否正常运作</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 熵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我回来了</title>
      <link href="/%E6%88%91%E5%9B%9E%E6%9D%A5%E4%BA%86/"/>
      <url>/%E6%88%91%E5%9B%9E%E6%9D%A5%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>   为什么什么事情都没有发生</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 熵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020年初小记</title>
      <link href="/2020%E5%B9%B4%E5%88%9D%E5%B0%8F%E8%AE%B0/"/>
      <url>/2020%E5%B9%B4%E5%88%9D%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>去年年底回来的时候，猫（好友昵称）接我回家，当时在车上有聊到一个话题，如果我们当时在万州坠江的公交车上面，事情会不会是另外一种结局。当初的结论是全车覆没。<br>今年年底回来的时候，猫依旧接我回家，在车上聊到<strong>逃离武汉</strong>,<strong>精英政治</strong>，<strong>地域歧视</strong>等话题，等下一一涉及。<br>武汉人逃离出城的事情。网上有很多人打着<strong>逃离武汉</strong>的标签告诉别人自己离开了武汉。外地人看来，这种人是又蠢又坏。  </p><blockquote><p>国家会集中医疗力量集中在武汉治疗肺炎感染者。<br>不计社交后果打着标签引发恐慌是一种自私的表现。    </p></blockquote><p>本打算在初二初三写这篇文章，后面突闻科比去世。觉得生死无常，看着他的黑白照片，意识到再也无法见到这个人衰老的样子了。因为个人并不喜欢拥挤的感觉，所以并不热衷于篮球。科比于我亦是一个传奇般的存在。不管是公交坠江还是迷雾坠机。事件本身并不因为你是无名之辈或者你是大人物而有另外的结局。嗯，薛定谔的猫是有死掉的可能的。<br>长辈们获取信息的途径比较单一，一般会以经验之谈来说事。这玩意和去年的（非洲）猪瘟一样，或者觉得和17前的非典一样。或者以<strong>你怎么这么怕死</strong>的口吻跟你说话。回家的时候，猫和我在车里面聊过<strong>精英政治</strong>这个话题，我们统一认知——国内目前阶段只适合精英政治。今天跟一个朋友聊天，其母抛夫弃女都要出去打麻将。试问：类似于这种的人还有很大的一群人存在，怎么好意思让他们选择谁来当主，自己一家人都不管不顾的还负责国家发展道路那真的是祸国殃民。<br>最近湖南，湖北，广东，河南这几个省的确诊人数都名列前茅。要说地域偏见或歧视以广东人乱吃东西为甚。更有类似于是广东人在广东乱吃东西把病毒传到湖北的说法。河南人的然并卵的阻断交通方式增加了很多正面印象分，现阶段很少有“偷井盖”的说法。有地狱偏见的人是欠缺理性思维的。现阶段恐慌或仇视武汉人是有点杯弓蛇影了。<br>2020年是全面建设小康社会之年，普遍狭隘的认知是脱贫致富，甚至揶揄自己没有达到GDP目标会被消灭掉。我们不仅要努力奋斗确保一家的一年的收成，还得注重自己及家人的精神富足。光经济富裕是没有灵魂的。</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 疫情 </tag>
            
            <tag> 概率 </tag>
            
            <tag> 自私 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回首2019</title>
      <link href="/Review_2019/"/>
      <url>/Review_2019/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>即将元旦,阳历新年并不太适合做新的计划，因为到阴历新年的时候，现在的斗志昂扬，都会受到一定的消解，但是可以在此做一些年度总结，利于更有序地清晰生活。</p><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><h3 id="大事"><a href="#大事" class="headerlink" title="大事"></a>大事</h3><blockquote><p>1、在亲朋好友的协助下，搞定首付。<br>2、搬家两次,两次时间间隔三个月。<br>3、重启了驾照相关事宜，会于阴历年前动用年假做进一步跟进。<br>4、相亲次数若干。<br>5、睡眠质量下降，与心理医生面对面沟通两次。<br>6、回家陪父母玩蜘蛛纸牌，协助通关若干次。<br>7、帮好朋友新生女儿建议名字一次。<br>8、被好朋友告知怀二胎了。</p></blockquote><h3 id="小事"><a href="#小事" class="headerlink" title="小事"></a>小事</h3><blockquote><p>1、债务金额从0到x，从x到y。其中x&gt;y。<br>2、体重从a到b，其中a&gt;b。<br>3、薪资待遇从m1到m2，其中m2&gt;m1。<br>4、年度被放鸽子一次。</p></blockquote><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><h3 id="专业"><a href="#专业" class="headerlink" title="专业"></a>专业</h3><blockquote><p>1、解决bug203个，占比21.8%(其中自己引入bug若干)<br>2、修复未将对象引用到实例(NullReferenceException)的bug若干。<br>3、打辅助位,跟同事一起实现超级牛逼的hmadatagridview控件。<br>4、对autofac的生命周期有一定的了解,并借助resharper的<strong>donet memory trace</strong>工具解决了一个在3.x版本就存在的内存泄漏问题。<br>5、对mshtml这个Com组件有所了解，可以实现C#直接执行js并获取js的运行结果。实现11秒到不到1秒的提速。<br>6、解决了去年就存在的<strong>PRD-360</strong>这个问题。<br>7、意识到去年的存储过程版本的5.6版本的Mysql的<strong>with cte</strong>语法是超级慢的,并修复。<br>8、通过Sap的api文档,实现了对sap的功能开发，让公司在中国海关的项目竞标中战胜阿里。<br>9、对发布包到nuget的整个流程有所了解。<br>10、基于依赖具体，不依赖于抽象原则，借助resharper工具的<strong>show project dependency diagram</strong>对程序进行重构。解决了一个程序集循环依赖的问题，让4.2版本的研发顺利进行。  </p></blockquote><h3 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h3><blockquote><p>1、减少沟通成本,通过SVN减少文件传递成本。通过将安装包制作以及每日的问题汇总移交给测试同事，我将更多的精力集中在解决问题和实现功能这些我能人尽其能的问题上面。<br>2、完善了日志追踪机制,任何问题都可以通过程序集信息回溯到源码的对应版本，并能够通过日志来定位问题。<br>3、熟悉了OEM版和正式版的差异,遵循DRY的原则，通过重构代码实现了1个小时以上到20分钟左右的时间缩短。  </p></blockquote><h3 id="心态"><a href="#心态" class="headerlink" title="心态"></a>心态</h3><blockquote><p>1、工作上的事情，难免会给人一种Out of Control的感觉。比如我计划10月25左右V4.0实现封板，不再基于该版本进行新的功能开发和维护。但是实际上存在延期，实施同事对新版本的不信任感，难免会让人心态消极。对10月25日的期待是因为对重复merge版本的抗拒，又因OEM版相关的工作进行，我并没有过多精力放在修复问题上，因为新测试同事的加入，经过一系列转交工作内容的骚操作，将更多的bug扼杀在发布新版本之前。意识到事情在好转，工作条理更加清晰，会更有助于一种良性循环的产生。<br>2、今年别人在工作，我在休假的时间并不多，然而却在这两次休假中同事都因sap相关的功能和我进行了沟通。一次是扩展新功能，一次是修复bug(文件迁移导致命名空间变更引入的bug。) 怎么配置配置文件,可能引发Bug的核心代码在哪一块，怎么样的操作会导致记录锁定，这些事情就像是一场考试，校验自己对整个软件的架构熟不熟悉。侥幸同事的高悟性，高耐心解决了这问题。这个问题换个角度来讲，一个系统功能点至少实现两个人的知识共享。<br>3、从内心深处会抗拒一些重复的事情,比如解释Get Attribute Value这个Attribute是指网页元素的attribute，而不是我们识别元素之后罗列出来的元素属性。这个问题解释不下三次，特意为此还登记了wiki文档。正如你没有办法避免<strong>在不告知他人密码已经变更，导致隐性地密码错误多次使得系统永久性的锁死</strong>这样的事情发生。但是你可以在以后的登陆失败的流程做预防，增强凭证的账号密码都输入正确，但是登录失败的相关逻辑控制。<br>4、从内心深处坚信事情在变好，通过文档，版本管理等手段让事情更有序，团队协作工作更有效，这就是团队协作的意义。<br>5、前不久有分享一道数学题,1*0=0，到底是因为0乘以任何数都等于0，还是1乘以任何数都是这个数原来的样子。在计算机领域 0为false，做逻辑与，结果都是false。1为true,做逻辑与，结果跟对方是0还是1有关。1在化学里面就相当于是催化剂，没有它世界正常运转，有它加快结果的发生。所以内心深处，还是希望自己能够做个1,并不力求于改变他人，而是在和他人相处的时候保持自我，且让事情朝良性的一面发展。</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>1、3月16日,蹭UR公司的团建,星溪线之旅，游后感一篇。<br>2、惠州双月湾自己公司的团建，做会议主持一次。<br>3、和前同事爬大夫山1次<br>4、重启sudoku这个开源项目，提升自己的逻辑思维。</p></blockquote><h2 id="情感"><a href="#情感" class="headerlink" title="情感"></a>情感</h2><blockquote><p>1、始于颜值的心动一次,不了了之。<br>2、有信心。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 总结 </tag>
            
            <tag> 2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>休假之我思</title>
      <link href="/Thinking_in_holiday/"/>
      <url>/Thinking_in_holiday/</url>
      
        <content type="html"><![CDATA[<p>在11月初的时候，预估了项目的进度，提出了月底休假四天的申请；为了让这次休假顺利进行，优化了跨团队的一些沟通成本，将一些自己手头上别人可以胜任的工作分配出去，结合昨日的最终产出来看，基本上做到公司有我和我没有一个样。<br>上周我休假了四天，原意是术业专攻，好好练车，没想到这件事情竟然还有了一些意外收获。这期间比较受关注的社会新闻是网易的暴力裁员和高以翔的猝死事件。基本上讲的是过劳。我这个假期中基本上都是12点前睡觉，7点多自然醒。因为不慌不忙的生活节奏，看了几本书，甚至还做了一些可能自己才能吃的面条和午饭。和十一假期比起来,因为十一要张罗搬家之后的添置物件等事项，这个假期显得更加轻松自在。<br>昨天朋友跟朋友聊天的时候，要她给我出个题，写一写命题作文。她要我针对下图做一个看图作文  </p><p><img src="/Thinking_in_holiday/暴力裁员评论.jpg" alt="暴力裁员">  </p><p>这图上，已经有各种哈姆雷特，不一一评论。里面有”是不是有必要认识一些大V，以备不时之需”这一句话，让我有些感触。以下我浅谈对这句话的理解。<br>我有一个姑姑，她无比操心我的婚事：<br>18年的大年30日，带我去相亲看了一个吴姓的妹子。那时候我是个200斤的胖子，结果可想而知。<br>19年的九月30日，吴姓妹子的奶奶给我姑姑推荐在珠海工作的一个姑娘，后来因为我个人觉得不合适，就没有了后文。<br>19年的十月30日，我姑姑给我介绍了一个在长沙的超级超级好看的姑娘，身高170，在上市公司工作，有些美好到虚幻。<br>19年的冬月30日，吴姓妹子的奶奶(请注意这是个连续剧)又给我做媒,说在深圳有个姓易的姑娘，这个还没有任何开始。<br>我姑姑估计是做过项目管理，每月的月底都给一个月度相亲计划，不成功就下一个项目计划，不允许项目延期迟迟不交付。回到正题，我姑姑就像是相亲届的大V，但是她这种热衷于相亲的事情估计也就对我如此上心，矫情一点的讲，这就是爱啊。如果不能从我这里获得一点爱的成就感，热脸贴到冷屁股上面，又何必如此上心。<br>换个角度来讲，我姑姑这个相亲大V有各种资源，比如长沙，深圳，珠海等各地的资源，甚至她还能通过资源扩展资源。奈何我自己不争气，不能好好珍惜大V提供的资源。大V再有能耐也无事于补嘛。<br>无论是工作，还是生活，如果本身的实力不允许，大V的再怎么协助也只能协助一时，寄希望于大V来协助解决问题终究有点本末倒置的感觉。喜欢和员工称兄道弟的大V刘强东在网易暴力裁员事件爆出来以后声明<strong>京东员工遭遇不幸的话 将负责子女费用到22岁</strong>。总不能为了免去子女22岁之前的费用还让自己遭遇一个不幸吧?正常作息、健康饮食、锻炼身体、枸杞人参，保证高的生活质量，提高工作效率，劳逸结合降低不幸的发生几率，让自己成为真正的大V，这才是幸福生活应该做的事情。<br>这个八天长假即将过去，不敢说我的失眠症状已经完全好了。但是很明确的是无论是工作还是生活，事情都在好转，渐渐地多了一些有条理的感觉。深化和储备在一步一步的推进，这就是生活中值得欣喜的地方。  </p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 兄弟 </tag>
            
            <tag> 能力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Things get better</title>
      <link href="/%E4%BA%8B%E6%83%85%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A5%BD/"/>
      <url>/%E4%BA%8B%E6%83%85%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A5%BD/</url>
      
        <content type="html"><![CDATA[<p>昨天晚上十点钟睡觉，今天5点多就醒来了。然后翻阅朋友圈，又是各种睡不着的人的情感宣泄。为了得到我自己内心的平静，直接重启个人网站，写下这篇文章。  驾照是17年11月份就已经考完了科目一，按理来说，只要人没有那么强烈的拖延症，自然不会搞到现在还没有去考完。去驾校呆了两天，觉得这件事情终于有了一个新的进展，这也许就是内心能够得到平和的原因。<br>这周我一共请了四天假用于练车，周一，周二，周四，周五。合计周末，一共练车8天。<br>这一周，任务分派有人做了，产品发布有人做了，项目进度汇总报告有人做了，Bug修复也有人做了，甚至一个很需要耐心和细心和体力的工作都有人做了。某种程度上，公司有我和没我一个样，差别就在于少了一个人天天喊着要吃鱼。<br>有同事觉得新产品版本不够稳定，不敢采用新版本。好像有点忘记了旧版本就基本上只有4个人进行开发维护。也能在市场上坚持那么多久,现在回首看旧版本，简直就是一个漏洞百出的存在。新版本尽管存在问题，但是哪个真正意义上影响实施的问题最终没有得到解决? 其实这种稳打稳扎的心态也很正常，谁也不想因为本身产品存在问题来面对客户对产品质疑的焦虑。都努力想把产品做得更好，多得到一些认可和肯定。<br>于我本人，有种盲目乐观的存在。原计划在10月底推出新版本，因为觉得新版本的版本控制做得更好,软件架构也更加合理，更利于维护。从需求到产品的整个流程得到精简。但是实际上时间不符合我的个人预期。产品中bug的发现个数的确会在发布初期达到了一个爆发期，给人一种产品不够稳定的错觉。实际上经过这一个多月的的维护，产品是越来越稳定。<br>于我本人，有种盲目悲观的存在。不拿我自己具体的例子做说明。我一朋友的房门的锁芯有点问题，在朋友圈说“气死我了，这破门有钥匙竟然打不开，真想一脚踹烂。”这件事情让我想起我在钟村一个人住两室一厅的时候(800块)，我一共把自己锁住了三次。一次正常锁，忘记带钥匙出门;一次风一吹，把门吹关了，然后钥匙都锁在内卧了。还有一次站在阳台吹风，随手一推玻璃门，把自己锁在阳台了，当时手机都没有，还是通过晾衣架击打三楼雨棚才把自己给救活了。回想起来这些鸡毛蒜皮的小事虽说让人看起来有些狼狈，竟然还能三次把自己锁住，还能干点啥？后来不在顺景雅苑住的时候，隔壁租房四美女一起住，也是开不开门，然后不想找开锁师傅，要我一脚踹烂。恩，踹门感觉是真爽。<br>人有负能量正常，怎么排解是一种学问。事情在一步一步地变得越来越好，这就是一个成长的过程。<br>最后来句鸡汤,结个尾——心之所向，皆是阳光。</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 乐观 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>沙漠玫瑰</title>
      <link href="/%E6%B2%99%E6%BC%A0%E7%8E%AB%E7%91%B0/"/>
      <url>/%E6%B2%99%E6%BC%A0%E7%8E%AB%E7%91%B0/</url>
      
        <content type="html"><![CDATA[<p>今天下午一点多，在地铁上遇到一个小女孩，笑魇如花，一直对着我笑，我自知她的笑的受众不是我，找了找她笑的受众，寻而不得，没人给她回应。看到她试图通过微信或者QQ联系笑的受众，也没个回应。最后，在林和西站给她腾了个位置，让她靠近他，她问他又怎么了？都坐过站了，然后男孩子准备出车门那一刻，车门又关上了，不慌不忙地退回原地站着。<br>他并没有那么爱她。<br>今天拔完牙，试图早点入睡，结果晚上10点就被痛醒来了。看到一个朋友的未接，呼了回去。他说看了我最近的朋友圈，感情生活很不平淡，我说跟家里相亲那个没有继续了。他说知道。然后觉得我可能对爱情有点灰心丧气，都没有信心去找自己的沙漠玫瑰。<br>白天发的朋友圈，是一个口腔科的女孩子为我洗牙的时候不小心第一次划伤到了手腕，今天过去的时候我看了一下，这个划伤还在，她说:”如果这个印记消不掉的话，我会记住你一辈子。”冷不防像被表白一般。倘若这印记一直都在，这起医疗事故我的确要承担比较大的责任。<br>地铁上那个女孩子对男孩子满心欢喜，却没有被男孩子觉察到。不太看好他们俩个的感情，一个敲门，一个不开门。<br>开个玩笑，当一个女人为一个男人割腕殉情留下不可磨灭的伤痕的时候，的确是这个男人太渣，不能护这女人一世周全。<br>牙疼不已的我想了想沙漠玫瑰这个词，伤害过自己的人的确不算沙漠玫瑰，而是两个人相处起来舒服，又对彼此而言是特殊的存在，然而我对生活中遇到的可能交往的异性都没有太多地倾付自己的情感，没有试图构建一种特殊的情感联系，这就是我自己为什么相亲的结果都不那么如人意的原因。<br>朋友给我的建议是好好工作，不要灰心，保持向往。<br>我认为他说的对。  </p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 沙漠玫瑰 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相亲小记</title>
      <link href="/%E7%9B%B8%E4%BA%B2%E5%B0%8F%E8%AE%B0/"/>
      <url>/%E7%9B%B8%E4%BA%B2%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>偷得浮生半日闲，于一隅写下寥寥数笔最近的相亲故事及其它。<br>作为家里的化生子没有告诉家里，我偷偷去相亲机构花了钱，甚至还面谈了三个姑娘。最终因为觉得自己没有搞清楚自己想要跟哪种姑娘一起生活，故选择了中止相亲机构的相亲相关事宜，等知道自己喜欢什么样的姑娘再继续去相亲也不迟。<br>总结一下相亲经验。<br>第一个姑娘，护士，长得还不错，面谈结束后就不再想见我第二面，给老师的反馈是我话里有话说她壮。我乃窦娥在世。<br>第二个姑娘，是个幼师，对工作保持高度敬业，试图几次约她出来吃饭，说没有空。被拒绝了几次之后，我便没了热情。<br>第三个姑娘，是个护士，人还挺自律，挺健谈，但是健谈跟沟通是两回事。因为没有确认在一起，故也没有明说我们不合适之类的。<br>后来的相亲机构老师就看不下去了，我们精挑细选给你介绍的肤白貌美的姑娘你都不要，你想闹啥样？<br>再一次做心理测评，红蓝居多，大概意思就是基本上还是个正常人，但是不知道怎么去撩妹。老师还顺便就我自身条件给我择偶给了个建议，要找在广州月薪上万的姑娘，不然下半辈子的压力会很大，换句话说就是如果遇到年轻漂亮的姑娘，你就不要花心思去追了，人家你养不活的。但是，月薪上万的姑娘，对男方的要求又不是一般的高。按老师这么一说，爱情就是一场价值投资，跟荷尔蒙没有多大关系。<br>相亲故事到此结束，以下内容就是开始说的其他。<br>最近职场身份有个转变，更加的要关注时间，进度，风险控制等维度，也有朋友建议我去考个拍马屁(pmp)。最近的心得就是不是在这个岗位就能胜任这个岗位，很多思维方式也得跟着调整。<br>更亲近的长者，朋友会建议我想清楚最近三年，最近五年的计划是怎么样的。今天跟一个姑娘聊天的时候，她说她想25岁之前结婚，还准备回老家开美甲店，靠近父母尽孝。说实在的，我对我婚姻的预期都没这个姑娘清晰。<br>我的姻缘还不明朗的可能原因是：<br>我怂，不敢告诉我喜欢的姑娘我喜欢她。<br>她怂，这个她我也不知道在哪里。  </p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相亲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红颜蓝颜</title>
      <link href="/red_color_and_blue_color/"/>
      <url>/red_color_and_blue_color/</url>
      
        <content type="html"><![CDATA[<h2 id="红颜"><a href="#红颜" class="headerlink" title="红颜"></a>红颜</h2><p>每当听到红颜这个词，我容易联想到关公，也容易想到红颜薄命。<br>红颜，某种层面上来讲就是朋友之上，恋人未满。娶了白玫瑰，红的就成了心口上的一颗朱砂痣。<br>我没有红颜，只有——我就要读研毕业了，“你来我学校陪我吃谢师宴吧”的雪姐。<br>我没有红颜，只有——我在某某地方旅游，谁需要明信片的学妹。我还厚着脸皮问人家要的那种。<br>我没有红颜，只有——大学毕业前三天才认识的倩姐，作为公务员，为人民服务，传授于我一些与人相处之道。<br>我没有红颜，只有——周末有空没，过来帮我弄个看房名额，我请你吃饭的女汉子。<br>我没有红颜，只有——你妈做的酸枣糕真好吃，带点到长沙来，来我家吃饭吧，我跟你买的徒弟。<br>我没有所谓的红颜，只有一些哪里有好吃的，好喝的，好玩的就惦记着我的异性朋友，然而我就是这样胖起来的。</p><h2 id="蓝颜"><a href="#蓝颜" class="headerlink" title="蓝颜"></a>蓝颜</h2><p>蓝颜，另一角度的朋友之上，恋人未满。<br>我不是蓝颜，只是有数学老师跟我说——出了地铁那一刻莫名其妙地想哭。<br>我不是蓝颜，只是有家庭主妇跟我说——家里突生变故，能否给予一些经济帮助。<br>我不是蓝颜，只是有敬业同事跟我说——我只是觉得别人做得都比我好，我应该做得更好。<br>我不是蓝颜，只是有相亲对象跟我说——我觉得你人挺优秀的，很绅士，幽默，但是我确实没有什么感觉和想法。  </p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>我是一个头脑简单的人，只有冰(路人)，水(朋友)，水蒸气(恋人)三种状态。如果进入冰点，或者沸点。这种状态也不会长久，换句话说就是于我而言，没有永久的红颜，或者永久的蓝颜这种状态，详情参见热力学定律。  </p><p>两个人相遇，只要三观不过于奇葩，既不易完全成为路人，也不易一下子就沸腾起来变成水蒸气。总得有个通过相处加热的过程。所谓的顺其自然，只不过是在说“你看这酒精灯里面的灯芯我还在让它燃着了，最后沸不沸腾就看造化了。”<br>红颜也好，蓝颜也罢。我即不批判也不反感，只是觉得这不是一种稳定状态。找个人好好恋爱，好好结婚就好了嘛~</p><p><strong>补充说一句：杨紫与张一山，黄晓明与赵薇，何炅与谢娜是有着革命友谊的亲人。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红颜 </tag>
            
            <tag> 蓝颜 </tag>
            
            <tag> 命题作文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲谈权游</title>
      <link href="/%E9%97%B2%E8%B0%88%E6%9D%83%E6%B8%B8/"/>
      <url>/%E9%97%B2%E8%B0%88%E6%9D%83%E6%B8%B8/</url>
      
        <content type="html"><![CDATA[<p>小恶魔、小指头、小玫瑰、小剥皮、二丫、三傻、龙母、火吻、弑君者、色后、灰虫子、猫姨、肉山、猎狗、红袍女、核桃大帝、乔大帝、托曼大帝、阿多（瓦德）、臭佬、巨人克星、大美人、闪电大王……，这部拥有超多绰号的美剧《权利的游戏》终于迎来了它的终结。<br>我就不对剧中喜欢的角色来做分析和讨论了，我就对冰与火之歌改编成权游这件事情做一点自己的分享。<br>2DB(权游的编剧)在阅读了《冰与火之歌》这个伟大的史诗魔幻巨作之后，看重了其中的无限商机，就找到还年轻的乔治马丁老爷子说想把书拍成电视剧，马丁老爷子就问他们”琼恩·雪诺”的母亲是谁，这两个被吐槽<strong>脱离原著加持，便毫无创作力可言</strong>的两编剧还真答出来了，最终确定了拍成电视剧的想法，并经过优秀的特效团队的后期，以及演员的精湛表演，才给我们奉献上了高清无码的大片（Ice And Fire又译Fxxk and Kill）。试想若是他们答不出来，就不会让剧迷们看到这么让人无奈的第八季了。<br>为什么第八季这么让人不满意？因为《冰与火之歌》这本书还停留在琼恩·雪诺被捅了四刀那一段。之后剧情中的故事全部由2DB两个编剧基于已有故事情节进行人物的重构以及剧情的再创作。<br>那为什么《冰与火之歌》最后两卷《凛冽的寒风》和《春晓的梦想》这么难产？马丁老爷子曾说过：</p><blockquote><p>“这几年我一直在努力去写，《凛冽的寒风》虽然只是小说中的第六卷，但是比一部小说还难些，简直是好多部小说，每一部都有一个主人公视角，还相应搭配着互不相同的一整套的队友、敌人、盟友、支持者，而所有这些又互相关联，关系交织在一起成了一张特别复杂的关系网络，牵一发而动全身，所以写到现在这个程度， 还要继续往下写就非常具有挑战性了。相对而言，外传《血火同源》就显得很容易写，并不是简单，这本书也花了我几年才完成，但是相对得心应手。”</p></blockquote><p>换个软件行业的角度来讲，这不就是一个写了20多年的高度耦合的软件系统越来越难以维护了么？剧迷们看到波德瑞克和詹德利都分不清，更何况剧中牵扯不清的人物关系，一个人是哥哥，又是儿子他爸。一会是阿莲.石东，一会是三傻。要从各个POV视角中厘清各个人物关系以及地图背景需要对原著通读好几遍然后才行。书中可以突然某一段冒出一个珍妮.普尔(局部变量)作为珊莎的侍女嫁个小剥皮，而电视剧不能这么拍，人物的出场必须得有一些前因后果。所以剧情会根据演员的情况，以及一些不可抗拒的因素做一些相应的调整,权力的游戏本身就很黄暴，而书更加黄暴，所以猫姨死后在水里泡了三天三夜被闪电大王复活的情节基本上从电视视觉上一开始就注定被人看不到了。既然电视剧是对书的二次创作，所以就根本不可能完完整整对书进行重现。<br>因为最终还有原著的编剧的加持，所以对前五季整个剧情的走向并不会太偏。后面随着两个编剧（策划）对整个系统的进度的把控严重失误，强行dispose多恩线和高庭线，导致这个电视剧像被人咀嚼过一遍的甘蔗，全是渣。<br>两个编剧在面对庞大的演员阵容，高昂的演出费用和特效费用，在原有系统停滞不前，孤立无援地情况下，只好自作主张拿起笔杆，自己来写，结果导致了大量剧迷对第八季的强烈不满。像是一个优秀的系统在两个完全外行的人手里瞎折腾一番之后变成了一个烂尾作品。而这两个编剧就像是耗费2个多亿，耗时2年多，连一个可用的网站或者APP都没有交付出来的某某某咨询公司。<br>其实第八季不让人那么满意的原因并不能仅仅责怪那两个编剧，如果能预见马丁老爷子写书慢，多做一些风险控制，在马丁老爷子不务正业正传都没有写完去写前传的时候多跟马丁老爷子做一些整个人物框架的构建，多做一些人物分析，少做一些out of memory 或者Out Of Character的剧情，也许整个剧集就不至于崩坏得这么一塌糊涂。<br>开篇时，我就提到我不想讨论剧情，写到这里还是讨论一下夜王的死法。其实我挺认可这种表现形式的，就像是二战纪录片诺曼底登陆那一段，一个年轻人拿着枪在岸边冲，结果一下子就躺在那里一动不动了。抑或是电影“死于明日”和“天劫余生”里面表现的死亡形式一样，死亡就像是抽烟喝酒一样平常，如果夜王不被艾丽娅·史塔克的匕首捅死，难道非得被托尼·史塔克的响指带走才合理么？难道布兰突然站起来说，我是“逆闪”然后用“震波”解决掉夜王？剧中就凡人皆有一血的二丫是最终解决夜王的人做了居多铺垫，比如二丫和大美人对打那一段。在此不赘述。也不再吐槽两编剧在第八季第三集展示出来的军事才能了。<br>闲谈一下生活中的事情，像两个编剧没有原著加持这种釜底抽薪的事情也不少见，比如高通及其他美国的芯片供应商不再向华为供货，但是任正非们在几年前就意识到要做自己的核心处理器芯片，这种强烈的危机意识才不至于成为殃及池鱼中的那条鱼。就是别人的产品我可以借鉴，但是一定得弄到其原理，才不会受制于人，才可以做到青出于蓝而胜于蓝。自己不强大，可依赖的对象失去了的时候那就是苦日子到来的时候了。  </p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 权利的游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3月16号UR远足之星溪线</title>
      <link href="/3%E6%9C%8816%E5%8F%B7UR%E8%BF%9C%E8%B6%B3%E4%B9%8B%E6%98%9F%E6%BA%AA%E7%BA%BF/"/>
      <url>/3%E6%9C%8816%E5%8F%B7UR%E8%BF%9C%E8%B6%B3%E4%B9%8B%E6%98%9F%E6%BA%AA%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p>星溪线这次远足，是因为我最近一直都在有爬山，跑步等活动，基于社交需求加入了一个老同事的徒步爬山发烧友群。12天以后参加了UR公司的星溪线的远足活动。这次活动中的很多事情都没有按照计划执行，但是收获很多。我作为UR公司的亲友身份参加这次活动，感触挺深。于我而言，旅行最重要的并不是沿途的风景，而是一起旅游的伙伴是怎么样的人。你们都分享了你们所看到的美景，我就以“观察者”的身份记录一些今天的一些人和事。<br>UR公司内部的总指挥是吴艳，虽说并没有直接一对一的交流，但是那种亲和力，组织能力确实是我不具备的。虽说有点拍马屁之嫌，但是我觉得真的就是能感受到那种集体荣誉感，身上时刻在展现着其是UR的一份子。也许正因为这种团结友善的“内在基因”会让其职业发展道路更加顺畅吧。<br>我跟领队一起走过一段时间，试着托起他的背包，有10多斤吧。背3斤重的电脑站在地铁站里面不动，20分钟都觉得挺累。背十斤重的东西走将近5个小时的山路也不是一般的累。人家是专业的，也是挺辛苦的。这十斤多重的东西包括水和药品等。几乎是从开始全程背到了终点，而且还一直走在了最前面，这种身体素质也是值得倾佩的。<br>公司内部的红衣领队，不知其名，每到分叉路口就留下来给后面的人之路。其中有其个人职责，也有一部分集体荣誉感使然。当然其也是戏精本精了，路过农户家，还得拨弄人家晾晒的梅菜叶子，假装在那里拿扫帚扫地，路过小溪也得脱鞋戏耍一番。其衣服的红也恰好是很好的引导指示色，潜意识中也是很用心了。<br>徒步途中，我也经常听到一些认识的或者不认识的人聊公司的组织架构，然后说公司的业务部门分的比较细。让我感到意外的是没有人抱怨自己的岗位或者说抱怨自己的业务部门。我虽然在服装公司的信息技术部工作过，但是我本人对UR这个品牌并不是很熟悉。个人觉得有什么样的员工就造就什么样的企业文化。也许我这个观察者的视角有点一管窥豹，但是这次徒步之旅的确让UR在我心目中留下了一个很好的印象。<br>回到我自己，我本来计划今天通过徒步好好减肥的，结果邻座美女老是分享吃的给我，然后今天运动消耗的能量通过吃又全部补回来了。当然了，生活中又多了一个朋友也是美事一件。  </p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="http://www.ur.cn/index.html">ur官网</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 远足 </tag>
            
            <tag> 星溪线 </tag>
            
            <tag> UR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重构技巧之添加参数</title>
      <link href="/Add_Parameter_in_Refactoring/"/>
      <url>/Add_Parameter_in_Refactoring/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>最近在经手一个Winform项目,里面有个需求：TreeView控件选择不同的TreeNode时，需要展示不同的右键菜单。记录一下重构过程。</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>现将公司内部需求初始需求转换如下：<br>如果TreeView选中的TreeNode是国家，则右键菜单展示”添加省”,一个选项。<br>如果TreeView选中的TreeNode是省份，则右键菜单展示”添加市”，”删除”两个选项。<br>如果TreeView选中的TreeNode是城市，则右键菜单展示”添加区”，”删除”两个选项。<br>如果TreeView选中的TreeNode是区，则右键菜单展示，”删除”一个选项。<br>这部分的伪代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">var area = TreeView.SelectedNode.Tag as Area; //</span><br><span class="line">if(area!=null)</span><br><span class="line">&#123;</span><br><span class="line">    var areaType=area.type;</span><br><span class="line">    ContextMenuStrip menuStrip = new ContextMenuStrip();</span><br><span class="line">    if(areaType==AreaType.国家)</span><br><span class="line">    &#123;</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;添加省&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">    if(areaType==AreaType.省份)</span><br><span class="line">    &#123;</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;添加市&quot;));</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;删除&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">    if(areaType==AreaType.城市)</span><br><span class="line">    &#123;</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;添加区&quot;));</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;删除&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">    if(areaType==AreaType.区)</span><br><span class="line">    &#123;</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;删除&quot;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    menuStrip.Show(e.Location);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后来业务发展了,除了AreaType.国家这个选项，右键菜单都需要添加一个”打开地图”的右键菜单，且位于右键菜单的最上方。<br>重构之后的示例代码变成了如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">var area = TreeView.SelectedNode.Tag as Area; //</span><br><span class="line">if(area!=null)</span><br><span class="line">&#123;</span><br><span class="line">    var areaType=area.type;</span><br><span class="line">    ContextMenuStrip menuStrip = new ContextMenuStrip();</span><br><span class="line">    if(areaType==AreaType.国家)</span><br><span class="line">    &#123;</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;添加省&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">    if(areaType==AreaType.省份)</span><br><span class="line">    &#123;</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;打开地图&quot;));</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;添加市&quot;));</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;删除&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">    if(areaType==AreaType.城市)</span><br><span class="line">    &#123;</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;打开地图&quot;));</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;添加区&quot;));</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;删除&quot;));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    if(areaType==AreaType.区)</span><br><span class="line">    &#123;</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;打开地图&quot;));</span><br><span class="line">        menuStrip.Items.Add(new ToolStripMenuItem(&quot;删除&quot;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    menuStrip.Show(e.Location);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这次需求变动，已经让我闻到了代码中的坏味道。增删改一个右键菜单需要修改好几处地方，删除右键菜单也是同理。<br>故需要对代码进行重构。</p><h2 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h2><p>提取函数，伪代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">private ContextMenuStrip menuStrip = new ContextMenuStrip(); //菜单转为私有属性</span><br><span class="line">private void AddToolStripMenuItem(string controlName, bool isAdd)</span><br><span class="line">&#123;</span><br><span class="line">    if (isAdd)</span><br><span class="line">    &#123;</span><br><span class="line">        this.menuStrip.Items.Add(new ToolStripMenuItem(controlName););</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>故调用处的实现代码变成了如下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var area = TreeView.SelectedNode.Tag as Area; //</span><br><span class="line">if(area!=null)</span><br><span class="line">&#123;</span><br><span class="line">    var areaType=area.type;</span><br><span class="line">    this.menuStrip.Items.Clear();</span><br><span class="line">    AddToolStripMenuItem(&quot;添加省&quot;,areaType==AreaType.国家);</span><br><span class="line">    AddToolStripMenuItem(&quot;打开地图&quot;,!areaType==AreaType.国家);</span><br><span class="line">    AddToolStripMenuItem(&quot;添加市&quot;,areaType==AreaType.省份);</span><br><span class="line">    AddToolStripMenuItem(&quot;添加区&quot;,areaType==AreaType.城市);</span><br><span class="line">    AddToolStripMenuItem(&quot;删除&quot;,!areaType==AreaType.国家);</span><br><span class="line">    menuStrip.Show(e.Location);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>若以后需求变更,<strong>打开地图</strong>需要改成<strong>打开百度地图</strong>，然后新增<strong>打开高德地图</strong>也只需要修改一行代码，并新增一行代码即可。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>该重构过程运用的是提取函数和函数添加参数。<br><strong>AddToolStripMenuItem函数</strong>只关心菜单项是否添加，而不关心菜单项添加的逻辑是什么。<br>重构之后，右键菜单的可能的菜单项也一目了然，每一个菜单项对应的添加条件也一目了然。若<strong>isAdd</strong>参数对应的表达式过长，则可以将该表达式封装成函数进行传递。<br>通过该重构提高了项目的可维护性，也算是一种成就。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 重构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 重构 </tag>
            
            <tag> TreeView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>委托在重构中的运用</title>
      <link href="/Delegate_in_Refactoring/"/>
      <url>/Delegate_in_Refactoring/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>最近在工作中的一次重构过程中运用到了委托，记录一下。</p><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>有一段示例代码如下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public class ProjectAClass</span><br><span class="line">&#123;</span><br><span class="line">    public static void CallMethod(bool isTrue)</span><br><span class="line">    &#123;</span><br><span class="line">        if (isTrue)</span><br><span class="line">        &#123;</span><br><span class="line">            ProjectB_StaticClass.DoSomething();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>后来因为业务的不断发展，需要把ProjectB从整个解决方案中移除掉。<br>ProjectB_StaticClassB.DoSomething();需要替换成 ProjectC_StaticClassC.DoSomething();<br>但是项目ProjectC需要引用ProjectA，故不能直接进行引用，否则会造成项目之间的循环依赖。  </p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>ProjectAClass添加一个委托事件,CallMethod函数添加一个<strong>Dosometing dosometing</strong>的参数。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class ProjectAClass</span><br><span class="line">&#123;</span><br><span class="line">    public delegate void Dosometing();</span><br><span class="line"></span><br><span class="line">    public static void CallMethod(bool isTrue, Dosometing dosometing)</span><br><span class="line">    &#123;</span><br><span class="line">        if (isTrue)</span><br><span class="line">        &#123;</span><br><span class="line">            dosometing?.Invoke();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>具体的调用代码处就变成了<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ProjectAClass.CallMethod(true,()=&gt;&#123;ProjectC_StaticClassC.DoSomething();&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>若ProjectAClass.CallMethod方法多地方出现，然而没有办法一下修改到位。可以通过参数默认值的方式来实现修改。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public static void CallMethod(bool isTrue, Dosometing dosometing=null)</span><br><span class="line">&#123;</span><br><span class="line">    if (isTrue)</span><br><span class="line">    &#123;</span><br><span class="line">        if(dosometing == null)</span><br><span class="line">        &#123;</span><br><span class="line">            ProjectB_StaticClass.DoSomething();</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            dosometing.Invoke(); // or dosometing()</span><br><span class="line">        &#125;         </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>该方法可以避免原来的调用方法进行大面积的修改。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>重构之后的代码ProjectAClass只需要判断条件是否满足，满足则dosometing，而不需要知道dosometing这个委托方法中具体细节。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 重构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 重构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏的乐趣</title>
      <link href="/games_fun/"/>
      <url>/games_fun/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>昨天跟朋友聊天，问他我的率土账号值多少钱了，他说应该值好几千块钱了吧。因为运气好和氪金，我招募了属性值了特别好的武将，然后因为个人时间关系一直都没有在玩，就委托给他在玩，他对这个账号爱不释手，他说他现在特别渴望来一个武将曹操，且这个游戏最有意思的就是武将搭配了。晚上闲来无事，顺便登陆了同样交给另外一个人搭理的一款游戏——英雄传奇，发现来了一个很久以前梦寐以求的英雄——李师师。<br>然而，这两个游戏却没有给我带来一种很强烈的愉悦感。</p><h1 id="游戏为什么不好玩了？"><a href="#游戏为什么不好玩了？" class="headerlink" title="游戏为什么不好玩了？"></a>游戏为什么不好玩了？</h1><h2 id="痛苦的记忆"><a href="#痛苦的记忆" class="headerlink" title="痛苦的记忆"></a>痛苦的记忆</h2><p>我表弟原本是一个王者荣耀的游戏迷，去年的时候拿我手机非得下载王者荣耀和我的网友对打，局局被虐，然后急上脸了还有再来一局，再来一局的。今天过年回家，问他怎么不玩王者荣耀了，然后他说没味，迷上了球球大作战，蛇蛇大作战之类的游戏。论游戏，王者荣耀的皮肤比蛇蛇大作战的皮肤要好看，操作也更加复杂，五连杀也更比蛇蛇大作战的五杀甚至百杀有意思得多，为啥不喜欢了？究其原因就是现在他想起这个游戏就会想起偷偷花了几千块钱买皮肤，然后被父母教育的事情。这个王者荣耀于他来讲是和一段不美好的记忆挂钩的，不玩就减少了回忆的可能性。</p><h2 id="缺乏对游戏的喜好"><a href="#缺乏对游戏的喜好" class="headerlink" title="缺乏对游戏的喜好"></a>缺乏对游戏的喜好</h2><p>我有一个同事特别喜欢玩欢乐斗地主，若一起吃饭，就能看见她拿着手机在玩欢乐斗地主。她玩这个游戏却兴趣盎然，在抢地主之后会心里默默念来个8，来个8，最终发现4个8都在上家手里，而且她只要有当地主的机会，则一定叫地主，抢地主。若是以前的话，我也喜欢玩斗地主，但是自从脑子抽风，算出斗地主有138712181744994种排列组合之后，看待斗地主这种游戏的态度就变了。若跟陌生人组成一个牌局，也就是138712181744994种斗地主组合方式中的一种而已，而且结局无外乎两种，要么赢，要么输，于我而言，因为觉得跟陌生人在网上斗地主没有多少精神上的满足，故基本上不再跟陌生人玩这种牌类游戏了。</p><h2 id="游戏的固定模式"><a href="#游戏的固定模式" class="headerlink" title="游戏的固定模式"></a>游戏的固定模式</h2><p>为什么王者荣耀会让这么多人都废寝忘食的玩个不停？个人觉得主要是加强了朋友之间的联系，然后每一局的可能性都比较多，最重要的一点，有些角色勤加练习就可以达到熟能生巧，起到了一个放松心情，减压的效果。个人并没有怎么玩过王者荣耀，技术比我表弟还要菜。我倒是玩过率土之滨和英雄传奇两种卡牌游戏，只不过现在这两个游戏都转交给我朋友去玩了。因为我运气比较好，两款游戏中比较主流的英雄武将我都拥有，故没有多少期待属性值特别特别厉害的武将，然后如果非得氪金去和别的网友比个高低，回报是远小于付出的。率土之滨相对好一点，基本上公平，充钱再多也不一定获得心仪的武将卡。而腾讯的游戏则不然，只要有钱就是大爷。VIP15基本上就是需要投资60万。充了钱的人通过使用李师师和虞姬组队在一起刷牌，然后虞姬还配上一个回春技能。基本上就是秒杀全场的节奏。玩家是希望通过游戏来减压，和放松自己的，而不是被各种氪金玩家虐待的。率土在于你充钱了，你也不是大爷。而英雄传奇就是你充的钱足够足够多，那就是大爷。光比谁砸的钱多的这种游戏对于普通玩家来讲个人放松的心理是得不到满足的。如果你们对我举例的这两款游戏不熟，那俄罗斯方块和贪吃蛇就是很好的固定模式的例子。</p><h1 id="什么样的游戏才好玩？"><a href="#什么样的游戏才好玩？" class="headerlink" title="什么样的游戏才好玩？"></a>什么样的游戏才好玩？</h1><p>千个读者有千种想法，我代表不了你们。我只表达一下我心目中的好游戏。  </p><h2 id="好游戏是有回报的"><a href="#好游戏是有回报的" class="headerlink" title="好游戏是有回报的"></a>好游戏是有回报的</h2><p>比如说我现在正在减肥，减肥是很痛苦的过程，因为它增加了个人欲望，我以前只想吃，不考虑瘦不瘦的事情。而现在，我既要想着吃，还要想着怎么吃和怎么瘦的问题。为什么要辜负长沙臭豆腐，炸鸡翅，牛肉丸，开心果，奶茶等等各种人世间的美好？如果把减肥当做一场游戏，就显得简单了许多。减肥成功的回报之一就是——再也不用担心踩在小树枝上会断，再大一点的奖励就是可以通过小树枝爬上从来没有征服过的猪头石顶部，更大的奖励就是整个人都脱胎换骨，可以去体验不一样的人生。</p><h2 id="好游戏满足社交属性"><a href="#好游戏满足社交属性" class="headerlink" title="好游戏满足社交属性"></a>好游戏满足社交属性</h2><p>球类游戏，狼人杀之类的桌游基本上都需要好几个人参加，在这些游戏中，虽然是你输我赢的结局，但是在你来我往的不同战术的交锋过程中促进了对团队之间不同人的理解。这也就是大学入校以来，宿舍第一件事情就是玩升级，从2打到A，玩到凌晨两点丝毫不困的原因。</p><h2 id="好游戏满足人的成就感"><a href="#好游戏满足人的成就感" class="headerlink" title="好游戏满足人的成就感"></a>好游戏满足人的成就感</h2><p>蚂蚁庄园的登山赛游戏在某些人眼里看起来简单弱智，但是分数越高，然后可以兑换的奖品越多，最重要的一点，其具备的公益属性会满足一个人的积少成多和做出了奉献的成就感。</p><h2 id="好游戏满足人的好奇心"><a href="#好游戏满足人的好奇心" class="headerlink" title="好游戏满足人的好奇心"></a>好游戏满足人的好奇心</h2><p>纪念碑谷或地狱边境或者机械迷城等游戏都是很好的满足人类的求知欲或者好奇心的例子。限于篇幅不对其做具体介绍。   </p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>若去问小孩子，他们一般都会觉得游戏会被读书有趣。学习并不见得一定是一件很枯燥无非的东西，如果这个读书满足了他的成就感，新鲜感，好奇心，让他交到了更多的朋友，这个学习便成为了一件有趣的事情。其余有趣的东西亦是如此。  </p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.60points.com/138712181744994/">斗地主所有牌型组合个数统计</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 乐趣 </tag>
            
            <tag> 新鲜感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>见珠江女子落水有感</title>
      <link href="/%E8%A7%81%E7%8F%A0%E6%B1%9F%E5%A5%B3%E5%AD%90%E8%90%BD%E6%B0%B4%E6%9C%89%E6%84%9F/"/>
      <url>/%E8%A7%81%E7%8F%A0%E6%B1%9F%E5%A5%B3%E5%AD%90%E8%90%BD%E6%B0%B4%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>昨日跑步，跑到珠江边，偶遇一个女子落水。该女子后经救生员救起，该事件仿佛就没有了后续了。<br>因为不知前因后果，我便无法通过桥上仅剩下的一件外套来断定她是不小心落水，还是轻生。<br>只是做个假设，假若是轻生，是谁把她逼上了轻生的绝境？</p><h1 id="事情一"><a href="#事情一" class="headerlink" title="事情一"></a>事情一</h1><p>前不久，搭乘地铁时，恰逢一夫一妻一子一女，儿子手中拿着一个可以分成两半的玩具。<br>小妹妹就想要玩，哥哥不给。妹妹追，哥哥跑。妹妹追不到就哭。<br>然后爸爸出手强制从儿子抓得很紧的手中抢了一半玩具交给了妹妹，儿子嚎啕大哭，把手中剩下的玩具狠狠一摔，结果就掉到地铁缝隙中去了。<br>后来地铁来了，女儿的哭泣早已经止住了，儿子却哭闹得很大声，妈妈抱住他，然后说打爸爸，闹腾了一会安静了下来。</p><h1 id="事情二"><a href="#事情二" class="headerlink" title="事情二"></a>事情二</h1><p>一朋友打电话给我，带着哭腔说心情不好。大概意思就是：她因为遇到渣男，恋爱发展不如预期，分手。<br>然后父母就一直念叨<strong>早就告诉过你了，对方不是好人</strong>，甚至还动手打她。<br>渣男让她不再相信爱情，父母的冷嘲热讽让她不再想跟父母说话。<br>她还说其他亲戚对她说三道四无所谓，只是接受不了父母还天天在耳朵边叨叨叨叨。<br>每天下班回家，宁愿在车里呆着，也不想进自己的家门。<br>导致自己越来越封闭，越来越不想跟人说话，甚至想过自杀。  </p><h1 id="事件三"><a href="#事件三" class="headerlink" title="事件三"></a>事件三</h1><p>一朋友从碧桂园离职，然后去开自己的蛋糕店。每天朋友圈基本上晒的都是父母对自己如何如何好，然后自己多么喜欢这份工作。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>事件一中：父母是子女的第一启蒙老师，父亲的抢夺行为是在灌输一个概念：你可以通过武力，暴力来解决你遇到的问题。<br>事件二中：为啥会有轻生的念头？简单一点地讲，就是没有了心理依靠吧，好在该朋友还试图找人哭诉，不然也有可能基于<strong>反正活着我也让你们不省心，还不如死给你们看</strong>的报复心理将轻生这种事情付诸行动。<br>事件三中：该朋友算是我比较羡慕的人之一，因为她真心真意地喜欢自己的工作。鲜见其由负面情绪。<br>为啥？父母作为强大的支撑，她想做啥事情都支持。若没有其父母的支持，估计还在做那份并不那么喜欢的房地产工作吧。  </p><p>有人说：不管在什么样的环境都可以学习，我当时想的是：若是啥环境都可以学习，那就不会有孟母三迁。<br>一个人的性格跟其所处的环境息息相关，相处模式也会受到环境的潜移默化。<br>你若以诚待人，别人则会以诚待你。<br>你若对人恶语相向，别人则会以牙还牙。  </p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>勿忘初心，保持良好的心态过好每一天，实在情绪不好，跟真正的朋友沟通一下。</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 尊重 </tag>
            
            <tag> 沟通 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不堪一击</title>
      <link href="/%E4%B8%8D%E5%A0%AA%E4%B8%80%E5%87%BB/"/>
      <url>/%E4%B8%8D%E5%A0%AA%E4%B8%80%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="不堪一击"><a href="#不堪一击" class="headerlink" title="不堪一击"></a>不堪一击</h1><p>不欲白了头<br>堪悔少年踌<br>一席君子话<br>击醒梦中人  </p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>不负良辰,岁月静好</p>]]></content>
      
      
      <categories>
          
          <category> 打油诗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 藏字 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>镜花水月</title>
      <link href="/%E9%95%9C%E8%8A%B1%E6%B0%B4%E6%9C%88/"/>
      <url>/%E9%95%9C%E8%8A%B1%E6%B0%B4%E6%9C%88/</url>
      
        <content type="html"><![CDATA[<h1 id="镜花水月"><a href="#镜花水月" class="headerlink" title="镜花水月"></a>镜花水月</h1><p>我心似明镜<br>汝面如桃花<br>两情淡若水<br>共享天涯月  </p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>生活不仅有代码，还有打油诗。</p>]]></content>
      
      
      <categories>
          
          <category> 打油诗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 藏字 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019年规划</title>
      <link href="/2019_plan/"/>
      <url>/2019_plan/</url>
      
        <content type="html"><![CDATA[<h1 id="2019年计划"><a href="#2019年计划" class="headerlink" title="2019年计划"></a>2019年计划</h1><h2 id="回顾2018"><a href="#回顾2018" class="headerlink" title="回顾2018"></a>回顾2018</h2><p>2018年算是随波追流无规划的一年，虽说在某些事情上面的执行力很强，但是年终回首，整个一年充满了不确定性，且缺少一种达成目标的成就感和没有办法对整个2018做个清晰的复盘。故2019年的计划是必须要做的，也需要在接下来的日子里面贯彻实施，否则这一些都是一场空谈而已。    </p><h2 id="执行时间"><a href="#执行时间" class="headerlink" title="执行时间"></a>执行时间</h2><p>2019-1-1 到2019-12-31日</p><h2 id="计划范围"><a href="#计划范围" class="headerlink" title="计划范围"></a>计划范围</h2><p>计划内容主要包括:健康、理财、职业、婚姻</p><h2 id="健康方面"><a href="#健康方面" class="headerlink" title="健康方面"></a>健康方面</h2><p>健康分为两部分，心理健康和身体健康相辅相成，都得重视。</p><h3 id="心理健康"><a href="#心理健康" class="headerlink" title="心理健康"></a>心理健康</h3><h4 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h4><p>2018年对社交关系这一块不够重视。花了相对多的时间和电脑打交道。2019年需要通过爬山,打球，学术交流等方式结实新朋友，待人以诚。</p><h4 id="沟通"><a href="#沟通" class="headerlink" title="沟通"></a>沟通</h4><p>1、    在工作上接受别人无伤大雅的做事风格，即求同存异。<br>2、    对不符合实际情况且不影响最终产出的评论保持平常心，无须辩解。<br>3、    注重目标导向，忽略他人的傲慢与偏见，对事不对人，描述事情的时候兼顾他人情绪上的感受。  </p><h3 id="身体健康"><a href="#身体健康" class="headerlink" title="身体健康"></a>身体健康</h3><p>1、    每月爬山两次，异常情况除外，保证一年内爬山20次。<br>2、    阴历年过来，自行下厨，多以蔬果代替肉食。吃完早餐到公司上班。<br>3、    以精神状态不受负面影响为前提得条件下，体重减到160斤以下。若精神状态不对，还不如不减。<br>4、    拒绝公司下午茶的膨化食品（低脂能提供饱腹感的除外。）<br><strong>饮食</strong><br>拒绝以下食品<br>1、    桶装袋装方便面及拌面<br>2、    手抓饼<br>3、    火腿肠<br>4、    开心果<br>5、    杏仁<br>6、    膨化食品  </p><p><strong>主要食物</strong><br>1、    麦片、胡萝卜、青菜、芹菜、香干、豆腐、瘦肉、鱼虾<br>2、    苹果、香蕉、火龙果、橘子  </p><h2 id="理财方面"><a href="#理财方面" class="headerlink" title="理财方面"></a>理财方面</h2><h3 id="储蓄"><a href="#储蓄" class="headerlink" title="储蓄"></a>储蓄</h3><p>1、每周基金定投固定金额。<br>2、公司若迁址，则迁址以后换一个相对便宜的租房地址。否则等租房合同到期换租金相对合理的租房。<br>3、每月月底复盘一次自己的经济状况。  </p><h3 id="债务"><a href="#债务" class="headerlink" title="债务"></a>债务</h3><p>2019年的债务会比过往每一年的要多。欠债还钱，天经地义。以后罗列一些相关注意事项。<br>1、    形成自己的账簿，清晰记录借款人，借款日期，约定还款日期，还款利率等相关内容。<br>2、    基本准则:所有债务在约定时间之前还清，无论是采取借呗，金条还是微粒贷等相关工具都要保证还款的正常执行。  </p><h2 id="职业方面"><a href="#职业方面" class="headerlink" title="职业方面"></a>职业方面</h2><h3 id="工作方面"><a href="#工作方面" class="headerlink" title="工作方面"></a>工作方面</h3><p>1、    自行做月工作总结，并形成下一个月的工作规划。执行时间：每月的最后一个周末。<br>2、    形成每周的工作计划，明确事项优先级 ，加强和同事之间的沟通，避免重复工作或无效工作。<br>3、    拒绝形式主义式的加班，根据项目目标合理安排每天的工作量，保证工作时间内的高效。<br>4、    调整自己的生物钟，以提前到达公司的形式错开上班早高峰期，而不是推迟到达公司的方式。 </p><h3 id="办公环境"><a href="#办公环境" class="headerlink" title="办公环境"></a>办公环境</h3><p>塑造相对舒适的办公环境，对工作环境的改进手段包括<br>1、    佩戴降噪耳机。<br>2、    浅显易懂的问题优先于在线沟通。<br>3、    上班时间拒绝惊吓式的身体接触类的干扰。  </p><h3 id="技能方面"><a href="#技能方面" class="headerlink" title="技能方面"></a>技能方面</h3><p>1、完成一个autofac(依赖注入)的示例代码。(1天)<br>2、参考freesql(orm)，完成一个微型的web系统。（4天）<br>3、掌握emit(反射发出)，完成示例代码。（1天）<br>4、完成数独图像识别(Python),发布数独1.0版本。（4天）<br>5、完成图的深度优先搜索算法。（2天）  </p><h2 id="其他方面"><a href="#其他方面" class="headerlink" title="其他方面"></a>其他方面</h2><h3 id="证件"><a href="#证件" class="headerlink" title="证件"></a>证件</h3><p>考完驾照，若个人悟性较差，保证20次练车。练车需要20天。  </p><h3 id="娱乐"><a href="#娱乐" class="headerlink" title="娱乐"></a>娱乐</h3><p>去射箭馆射箭一次。<br>花都滑雪场建成之后，去滑雪一次。  </p><h3 id="心愿"><a href="#心愿" class="headerlink" title="心愿"></a>心愿</h3><p>让父母来广州或陪其去其他地方游玩一次(看其个人意愿)</p><h2 id="计划可行性"><a href="#计划可行性" class="headerlink" title="计划可行性"></a>计划可行性</h2><h3 id="天的维度"><a href="#天的维度" class="headerlink" title="天的维度"></a>天的维度</h3><p>技能方面提升需要时间12天，爬山20次需要耗费20天，驾照需要20天。则合计需要52天，恰好每周需要抽出一天时间在执行计划上面。  </p><h3 id="作息维度"><a href="#作息维度" class="headerlink" title="作息维度"></a>作息维度</h3><h3 id="工作日"><a href="#工作日" class="headerlink" title="工作日"></a>工作日</h3><p>1、    每天06:00之前起床，准备当日早餐。<br>2、    平板撑1分钟5组，深蹲20个5组，交替进行。<br>3、    8点钟出家门，预计到公司时间8:30：花半小时规划好当日事项，9:00正式进入工作。<br>4、    中午13:00到14:00休息一个小时，手机关机。<br>5、    若公司项目紧急，则理想离开公司时间是20:00,最迟21:00，项目实在完不成，周末加班处理。<br>6、    每天23:00之前睡在床上，手机关机。  </p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>知易行难，知行合一。<br>若不切实际，及时调整！</p>]]></content>
      
      
      <categories>
          
          <category> 生活规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Dictionary替换switch case的注意事项</title>
      <link href="/Notes_On_Switch_Convert_to_Dictionary/"/>
      <url>/Notes_On_Switch_Convert_to_Dictionary/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>最近试图重构一段现做现卖的祖传代码,结果改完之后,性能急速下降,下面给出示意代码的截图,以便提醒自己工作需要更加认真和细心。  </p><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><h2 id="错误的重构"><a href="#错误的重构" class="headerlink" title="错误的重构"></a>错误的重构</h2><p><img src="/Notes_On_Switch_Convert_to_Dictionary/差异对比.png" alt="差异对比"><br>Dictionary的执行时间竟然是Switch case的四倍以上？原因是啥？我们来看一下各个动物的构造函数<br><img src="/Notes_On_Switch_Convert_to_Dictionary/构造函数.png" alt="构造函数"><br>即生成Dictionary的每一个键值对的值的时候,都实例化了一个Animal的子类,每个子类的实例化都等待了十秒钟,总实例化就耗费了40秒钟。</p><h2 id="正确的重构"><a href="#正确的重构" class="headerlink" title="正确的重构"></a>正确的重构</h2><p><img src="/Notes_On_Switch_Convert_to_Dictionary/正确重构.png" alt="正确重构"><br>先获取对象的type,然后通过Activator.CreateInstance(type)创建对象。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>switch case转换成dictionary算得上是一种重构,起到了<strong>减少代码量，提高可维护性的效果。</strong><br>这次我的失误也算是明白了一个深刻的道理,所有的重构需要建立在完整的测试机制的前提下，否则可能会造成严重的损失。<br>最后一句箴言<font color="#FF0000">如无必要，勿动祖传代码</font></p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 重构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 重构 </tag>
            
            <tag> Dictionary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重绘Panel边框线</title>
      <link href="/Paint_Panel_Border/"/>
      <url>/Paint_Panel_Border/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>最近有一个需求,是重绘panel边框的颜色成指定的颜色,参考了网上的一些示例代码和结合实际情况,形成了自己的解决方案,以下是实现过程。</p><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><h2 id="边框绘制类"><a href="#边框绘制类" class="headerlink" title="边框绘制类"></a>边框绘制类</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// panel边框绘制类</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public static class PanelBorderPainter</span><br><span class="line">&#123;</span><br><span class="line">    private static Color _colorPanelBorder = Color.FromArgb(215, 215, 215); //d7d7d7</span><br><span class="line">    private static int BorderSize = 1;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 重绘panel的边框颜色</span><br><span class="line">    /// &lt;para&gt;Padding 需要设置为1,例如:panel.Padding = new System.Windows.Forms.Padding(1);&lt;/para&gt;</span><br><span class="line">    /// &lt;para&gt;默认颜色值是d7d7d7&lt;/para&gt;</span><br><span class="line">    /// &lt;para&gt;可以通过panel.Tag=Color.FromArgb(255, 0, 0)设置颜色为红色&lt;/para&gt;</span><br><span class="line">    ///&lt;para&gt;注意:该Paint事件应置于InitializeComponent()之后实现,重新生成Designer.cs会导致代码丢失。&lt;/para&gt;</span><br><span class="line">    /// </span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;</span><br><span class="line">    public static void Paint(object sender, PaintEventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        if (sender is Control control)</span><br><span class="line">        &#123;</span><br><span class="line">            #region panel颜色信息通过Tag传递</span><br><span class="line"></span><br><span class="line">            if (control.Tag != null)</span><br><span class="line">            &#123;</span><br><span class="line">                if (control.Tag is Color color)</span><br><span class="line">                &#123;</span><br><span class="line">                    _colorPanelBorder = color;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            #endregion</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            ButtonBorderStyle style = ButtonBorderStyle.Solid;</span><br><span class="line">            ControlPaint.DrawBorder(e.Graphics, control.ClientRectangle,</span><br><span class="line">                _colorPanelBorder, BorderSize, style,</span><br><span class="line">                _colorPanelBorder, BorderSize, style,</span><br><span class="line">                _colorPanelBorder, BorderSize, style,</span><br><span class="line">                _colorPanelBorder, BorderSize, style);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="声明两个Panel"><a href="#声明两个Panel" class="headerlink" title="声明两个Panel"></a>声明两个Panel</h2><p><font color="#FF0000">容器panelOuter包含panelInner</font><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">private System.Windows.Forms.Panel panelOuter;</span><br><span class="line">private System.Windows.Forms.Panel panelInner;</span><br></pre></td></tr></table></figure></p><h2 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h2><p>panelOuter<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">this.panelOuter.Padding = new System.Windows.Forms.Padding(1); //Padding属性设置为1。</span><br><span class="line">this.panelOuter.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) </span><br><span class="line">            | System.Windows.Forms.AnchorStyles.Left) </span><br><span class="line">            | System.Windows.Forms.AnchorStyles.Right)));</span><br><span class="line"> this.panelOuter.Controls.Add(panelInner); //必须</span><br></pre></td></tr></table></figure></p><p>panelInner<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.panelInner.Dock = System.Windows.Forms.DockStyle.Fill;</span><br></pre></td></tr></table></figure><br>Form1构造函数<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public Form1()</span><br><span class="line">&#123;</span><br><span class="line">    InitializeComponent();</span><br><span class="line">    this.panelOuter.Paint += new PaintEventHandler(PanelBorderPainter.Paint);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="答疑"><a href="#答疑" class="headerlink" title="答疑"></a>答疑</h2><p><font color="#FF0000">为什么需要两个Panel?</font><br>答:因为如果注释掉以下代码,水平拖拽时会出现如下的界面效果。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.panelOuter.Controls.Add(panelInner);</span><br></pre></td></tr></table></figure><br><img src="/Paint_Panel_Border/错误重绘示例.png" alt="错误重绘示例"><br>取消该行代码注释则页面拖拽效果正常。</p><p><font color="#FF0000">是否必须需要两个Panel?</font><br>答:不是,内部是<strong>DataGridView</strong>等控件,其Dock=DockStyle.Fill,可以起到同样的效果。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://blog.csdn.net/softimite_zifeng/article/details/54237134">Winform的Panel绘制边框</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> winform </category>
          
      </categories>
      
      
        <tags>
            
            <tag> winform </tag>
            
            <tag> panel重绘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用多项式解标准数独或锯齿数独</title>
      <link href="/Solve_Soduku_With_Polynomial/"/>
      <url>/Solve_Soduku_With_Polynomial/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>最近业余时间迷上了数独求解,所以试图用计算机的方式来解答数独。<br>接下来，我用四宫的数独为例子，示例怎么利用多项式求解数独。  </p><h1 id="四宫数独"><a href="#四宫数独" class="headerlink" title="四宫数独"></a>四宫数独</h1><p>我们以四宫的每个单元格标上序号,如下图所示<br><img src="/Solve_Soduku_With_Polynomial/四宫示例.png" alt="四宫数独"><br>因为每行每列每宫都包含1,2,3,4且不重复。<br>所以第一行满足 x00+x01+x02+x03=10,x00*x01*x02*x03=24。<br>其余列的关系依次类推,其余宫的关系也是如此。<br>若数独题目如下图所示<br><img src="/Solve_Soduku_With_Polynomial/四宫样例.png" alt="四宫例子"><br>根据坐标和格子的关系可知:<br>x00=1,x01=4,x14=1,x15=2  </p><p>通过以下Python代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">from sympy import *</span><br><span class="line">x00=Symbol(&#x27;x00&#x27;)</span><br><span class="line">x01=Symbol(&#x27;x01&#x27;)</span><br><span class="line">x02=Symbol(&#x27;x02&#x27;)</span><br><span class="line">x03=Symbol(&#x27;x03&#x27;)</span><br><span class="line">x04=Symbol(&#x27;x04&#x27;)</span><br><span class="line">x05=Symbol(&#x27;x05&#x27;)</span><br><span class="line">x06=Symbol(&#x27;x06&#x27;)</span><br><span class="line">x07=Symbol(&#x27;x07&#x27;)</span><br><span class="line">x08=Symbol(&#x27;x08&#x27;)</span><br><span class="line">x09=Symbol(&#x27;x09&#x27;)</span><br><span class="line">x10=Symbol(&#x27;x10&#x27;)</span><br><span class="line">x11=Symbol(&#x27;x11&#x27;)</span><br><span class="line">x12=Symbol(&#x27;x12&#x27;)</span><br><span class="line">x13=Symbol(&#x27;x13&#x27;)</span><br><span class="line">x14=Symbol(&#x27;x14&#x27;)</span><br><span class="line">x15=Symbol(&#x27;x15&#x27;)</span><br><span class="line">print(solve([</span><br><span class="line">    # 行之和为10</span><br><span class="line">   x00+x01+x02+x03-10,</span><br><span class="line">   x04+x05+x06+x07-10,</span><br><span class="line">   x08+x09+x10+x11-10,</span><br><span class="line">   x12+x13+x14+x15-10,</span><br><span class="line"></span><br><span class="line">   # 行之积为24</span><br><span class="line">   x00*x01*x02*x03-24,</span><br><span class="line">   x04*x05*x06*x07-24,</span><br><span class="line">   x08*x09*x10*x11-24,</span><br><span class="line">   x12*x13*x14*x15-24,</span><br><span class="line"></span><br><span class="line">   #列之和为10</span><br><span class="line">   x00+x04+x08+x12-10, </span><br><span class="line">   x01+x05+x09+x13-10,</span><br><span class="line">   x02+x06+x10+x14-10,</span><br><span class="line">   x03+x07+x11+x15-10,</span><br><span class="line"></span><br><span class="line">   #列之积为24</span><br><span class="line">   x00*x04*x08*x12-24,</span><br><span class="line">   x01*x05*x09*x13-24,</span><br><span class="line">   x02*x06*x10*x14-24,</span><br><span class="line">   x03*x07*x11*x15-24,</span><br><span class="line"></span><br><span class="line">   #宫之和为10</span><br><span class="line">   x00+x01+x04+x05-10,</span><br><span class="line">   x02+x03+x06+x07-10,</span><br><span class="line">   x08+x09+x12+x13-10,</span><br><span class="line">   x10+x11+x14+x15-10,</span><br><span class="line"></span><br><span class="line">   #宫之积为24</span><br><span class="line">   x00*x01*x04*x05-24,</span><br><span class="line">   x02*x03*x06*x07-24,</span><br><span class="line">   x08*x09*x12*x13-24,</span><br><span class="line">   x10*x11*x14*x15-24,</span><br><span class="line"></span><br><span class="line">   # x00=1,x01=4,x14=1,x15=2</span><br><span class="line">   x00-1,</span><br><span class="line">   x01-4,</span><br><span class="line">   x14-1,</span><br><span class="line">   x15-2</span><br><span class="line">    ],[x00,x01,x02,x03,x04,x05,x06,x07,x08,x09,x10,x11,x12,x13,x14,x15]))</span><br></pre></td></tr></table></figure><br>我们可以快速得知结果是<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1,4,2,3,</span><br><span class="line">3,2,4,1,</span><br><span class="line">2,1,3,4,</span><br><span class="line">4,3,1,2</span><br></pre></td></tr></table></figure><br>其余标准数独(只有唯一解)的四宫数独也可以通过该种方式进行求解。</p><h1 id="九宫数独"><a href="#九宫数独" class="headerlink" title="九宫数独"></a>九宫数独</h1><p>既然4宫可以用多项式求解？那么九宫是不是也可以这样呢？<br>答案是可以，但是又有点不同。<br>∵4+4+4+9=3+4+6+8=21<br>∵4*4*4*9=3*4*6*8=576<br>∴ <strong>x1+x2+x3+x4+x5+x6+x7+x8+x9=45</strong> 和<strong>x1*x2*x3*x4*x5*x6*x7*x8*x9=362880</strong><br>存在{1,2,3,4,5,6,7,8,9}和{1,2,4,4,4,5,7,9,9}两组解。<br>若我们把8当做-1看待,9当做-2看待<br>则每行每列每宫之<strong>和</strong>变成了<strong>x1+x2+x3+x4+x5+x6+x7+x8+x9=1+2+3+4+5+6+7+(-1)+(-2)=25</strong><br>则每行每列每宫之<strong>积</strong>变成了<strong>x1*x2*x3*x4*x5*x6*x7*x8*x9=1*2*3*4*5*6*7*(-1)*(-2)=10080</strong><br>参考<strong>四宫数独中Python代码的实现</strong>,可以写出(9行+9列+9宫)*(和表达式1个+积表达式1个)共54个表达式,<br>若已知提示数为N个,则加上这个N个表达式,则可以借助Python的强大的计算能力实现求解。<br>再将-1还原成8,-2还原成9,则完成了标准数独的求解。  </p><h1 id="锯齿数独"><a href="#锯齿数独" class="headerlink" title="锯齿数独"></a>锯齿数独</h1><p>众所周知,DLX算法求解数独比回溯法要来得快很多，但是锯齿数独并不适合于用DLX算法(稀疏矩阵精准覆盖算法求解)<br>因为锯齿数独依旧满足每行每列1到9不重复,只是9个宫中9个来源的坐标有变化了。<br>若坐标序号如下图所示<br><img src="/Solve_Soduku_With_Polynomial/数独位置示例.png" alt="数独下标示意">  </p><p>以下图第一宫为例：<br><img src="/Solve_Soduku_With_Polynomial/锯齿数独示例.png" alt="锯齿数独示例"><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x00+x01+x02+x03+x09+x10+x18+x27+x28-25=0 //每宫之和为25  </span><br><span class="line">x00*x01*x02*x03*x09*x10*x18*x27*x28-10080=0 //每宫之积为10080  </span><br><span class="line">x27-4=0    //x27=4  </span><br><span class="line">x03-(-2)=0 //先用-2代替9  </span><br></pre></td></tr></table></figure><br>其他宫的逻辑表达式依次类推,这样就能快速求解锯齿数独了。</p><h1 id="推翻九宫结论"><a href="#推翻九宫结论" class="headerlink" title="推翻九宫结论"></a>推翻九宫结论</h1><p>如下图有39个提示数的标准数独<br><img src="/Solve_Soduku_With_Polynomial/39个提示数的数独.png" alt="九宫提示数"></p><p>对应的python代码如下,仅仅实现了使CPU达到了100%的效果,迟迟出不来结果<br>所以该种方式求解9宫格的数独要么需要有强悍的电脑，要么还是直接使用DanceLink算法直接求解。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line">from sympy import *</span><br><span class="line">x00= Symbol(&#x27;x00&#x27;)</span><br><span class="line">x01= Symbol(&#x27;x01&#x27;)</span><br><span class="line">x02= Symbol(&#x27;x02&#x27;)</span><br><span class="line">x03= Symbol(&#x27;x03&#x27;)</span><br><span class="line">x04= Symbol(&#x27;x04&#x27;)</span><br><span class="line">x05= Symbol(&#x27;x05&#x27;)</span><br><span class="line">x06= Symbol(&#x27;x06&#x27;)</span><br><span class="line">x07= Symbol(&#x27;x07&#x27;)</span><br><span class="line">x08= Symbol(&#x27;x08&#x27;)</span><br><span class="line">x09= Symbol(&#x27;x09&#x27;)</span><br><span class="line">x10= Symbol(&#x27;x10&#x27;)</span><br><span class="line">x11= Symbol(&#x27;x11&#x27;)</span><br><span class="line">x12= Symbol(&#x27;x12&#x27;)</span><br><span class="line">x13= Symbol(&#x27;x13&#x27;)</span><br><span class="line">x14= Symbol(&#x27;x14&#x27;)</span><br><span class="line">x15= Symbol(&#x27;x15&#x27;)</span><br><span class="line">x16= Symbol(&#x27;x16&#x27;)</span><br><span class="line">x17= Symbol(&#x27;x17&#x27;)</span><br><span class="line">x18= Symbol(&#x27;x18&#x27;)</span><br><span class="line">x19= Symbol(&#x27;x19&#x27;)</span><br><span class="line">x20= Symbol(&#x27;x20&#x27;)</span><br><span class="line">x21= Symbol(&#x27;x21&#x27;)</span><br><span class="line">x22= Symbol(&#x27;x22&#x27;)</span><br><span class="line">x23= Symbol(&#x27;x23&#x27;)</span><br><span class="line">x24= Symbol(&#x27;x24&#x27;)</span><br><span class="line">x25= Symbol(&#x27;x25&#x27;)</span><br><span class="line">x26= Symbol(&#x27;x26&#x27;)</span><br><span class="line">x27= Symbol(&#x27;x27&#x27;)</span><br><span class="line">x28= Symbol(&#x27;x28&#x27;)</span><br><span class="line">x29= Symbol(&#x27;x29&#x27;)</span><br><span class="line">x30= Symbol(&#x27;x30&#x27;)</span><br><span class="line">x31= Symbol(&#x27;x31&#x27;)</span><br><span class="line">x32= Symbol(&#x27;x32&#x27;)</span><br><span class="line">x33= Symbol(&#x27;x33&#x27;)</span><br><span class="line">x34= Symbol(&#x27;x34&#x27;)</span><br><span class="line">x35= Symbol(&#x27;x35&#x27;)</span><br><span class="line">x36= Symbol(&#x27;x36&#x27;)</span><br><span class="line">x37= Symbol(&#x27;x37&#x27;)</span><br><span class="line">x38= Symbol(&#x27;x38&#x27;)</span><br><span class="line">x39= Symbol(&#x27;x39&#x27;)</span><br><span class="line">x40= Symbol(&#x27;x40&#x27;)</span><br><span class="line">x41= Symbol(&#x27;x41&#x27;)</span><br><span class="line">x42= Symbol(&#x27;x42&#x27;)</span><br><span class="line">x43= Symbol(&#x27;x43&#x27;)</span><br><span class="line">x44= Symbol(&#x27;x44&#x27;)</span><br><span class="line">x45= Symbol(&#x27;x45&#x27;)</span><br><span class="line">x46= Symbol(&#x27;x46&#x27;)</span><br><span class="line">x47= Symbol(&#x27;x47&#x27;)</span><br><span class="line">x48= Symbol(&#x27;x48&#x27;)</span><br><span class="line">x49= Symbol(&#x27;x49&#x27;)</span><br><span class="line">x50= Symbol(&#x27;x50&#x27;)</span><br><span class="line">x51= Symbol(&#x27;x51&#x27;)</span><br><span class="line">x52= Symbol(&#x27;x52&#x27;)</span><br><span class="line">x53= Symbol(&#x27;x53&#x27;)</span><br><span class="line">x54= Symbol(&#x27;x54&#x27;)</span><br><span class="line">x55= Symbol(&#x27;x55&#x27;)</span><br><span class="line">x56= Symbol(&#x27;x56&#x27;)</span><br><span class="line">x57= Symbol(&#x27;x57&#x27;)</span><br><span class="line">x58= Symbol(&#x27;x58&#x27;)</span><br><span class="line">x59= Symbol(&#x27;x59&#x27;)</span><br><span class="line">x60= Symbol(&#x27;x60&#x27;)</span><br><span class="line">x61= Symbol(&#x27;x61&#x27;)</span><br><span class="line">x62= Symbol(&#x27;x62&#x27;)</span><br><span class="line">x63= Symbol(&#x27;x63&#x27;)</span><br><span class="line">x64= Symbol(&#x27;x64&#x27;)</span><br><span class="line">x65= Symbol(&#x27;x65&#x27;)</span><br><span class="line">x66= Symbol(&#x27;x66&#x27;)</span><br><span class="line">x67= Symbol(&#x27;x67&#x27;)</span><br><span class="line">x68= Symbol(&#x27;x68&#x27;)</span><br><span class="line">x69= Symbol(&#x27;x69&#x27;)</span><br><span class="line">x70= Symbol(&#x27;x70&#x27;)</span><br><span class="line">x71= Symbol(&#x27;x71&#x27;)</span><br><span class="line">x72= Symbol(&#x27;x72&#x27;)</span><br><span class="line">x73= Symbol(&#x27;x73&#x27;)</span><br><span class="line">x74= Symbol(&#x27;x74&#x27;)</span><br><span class="line">x75= Symbol(&#x27;x75&#x27;)</span><br><span class="line">x76= Symbol(&#x27;x76&#x27;)</span><br><span class="line">x77= Symbol(&#x27;x77&#x27;)</span><br><span class="line">x78= Symbol(&#x27;x78&#x27;)</span><br><span class="line">x79= Symbol(&#x27;x79&#x27;)</span><br><span class="line">x80= Symbol(&#x27;x80&#x27;)</span><br><span class="line">print(solve([</span><br><span class="line">    x00+x01+x02+x03+x04+x05+x06+x07+x08-25,</span><br><span class="line">    x00+x09+x18+x27+x36+x45+x54+x63+x72-25,</span><br><span class="line">    x00+x01+x02+x09+x10+x11+x18+x19+x20-25,</span><br><span class="line">    x00*x01*x02*x03*x04*x05*x06*x07*x08-10080,</span><br><span class="line">    x00*x09*x18*x27*x36*x45*x54*x63*x72-10080,</span><br><span class="line">    x00*x01*x02*x09*x10*x11*x18*x19*x20-10080,</span><br><span class="line">    x09+x10+x11+x12+x13+x14+x15+x16+x17-25,</span><br><span class="line">    x01+x10+x19+x28+x37+x46+x55+x64+x73-25,</span><br><span class="line">    x03+x04+x05+x12+x13+x14+x21+x22+x23-25,</span><br><span class="line">    x09*x10*x11*x12*x13*x14*x15*x16*x17-10080,</span><br><span class="line">    x01*x10*x19*x28*x37*x46*x55*x64*x73-10080,</span><br><span class="line">    x03*x04*x05*x12*x13*x14*x21*x22*x23-10080,</span><br><span class="line">    x18+x19+x20+x21+x22+x23+x24+x25+x26-25,</span><br><span class="line">    x02+x11+x20+x29+x38+x47+x56+x65+x74-25,</span><br><span class="line">    x06+x07+x08+x15+x16+x17+x24+x25+x26-25,</span><br><span class="line">    x18*x19*x20*x21*x22*x23*x24*x25*x26-10080,</span><br><span class="line">    x02*x11*x20*x29*x38*x47*x56*x65*x74-10080,</span><br><span class="line">    x06*x07*x08*x15*x16*x17*x24*x25*x26-10080,</span><br><span class="line">    x27+x28+x29+x30+x31+x32+x33+x34+x35-25,</span><br><span class="line">    x03+x12+x21+x30+x39+x48+x57+x66+x75-25,</span><br><span class="line">    x27+x28+x29+x36+x37+x38+x45+x46+x47-25,</span><br><span class="line">    x27*x28*x29*x30*x31*x32*x33*x34*x35-10080,</span><br><span class="line">    x03*x12*x21*x30*x39*x48*x57*x66*x75-10080,</span><br><span class="line">    x27*x28*x29*x36*x37*x38*x45*x46*x47-10080,</span><br><span class="line">    x36+x37+x38+x39+x40+x41+x42+x43+x44-25,</span><br><span class="line">    x04+x13+x22+x31+x40+x49+x58+x67+x76-25,</span><br><span class="line">    x30+x31+x32+x39+x40+x41+x48+x49+x50-25,</span><br><span class="line">    x36*x37*x38*x39*x40*x41*x42*x43*x44-10080,</span><br><span class="line">    x04*x13*x22*x31*x40*x49*x58*x67*x76-10080,</span><br><span class="line">    x30*x31*x32*x39*x40*x41*x48*x49*x50-10080,</span><br><span class="line">    x45+x46+x47+x48+x49+x50+x51+x52+x53-25,</span><br><span class="line">    x05+x14+x23+x32+x41+x50+x59+x68+x77-25,</span><br><span class="line">    x33+x34+x35+x42+x43+x44+x51+x52+x53-25,</span><br><span class="line">    x45*x46*x47*x48*x49*x50*x51*x52*x53-10080,</span><br><span class="line">    x05*x14*x23*x32*x41*x50*x59*x68*x77-10080,</span><br><span class="line">    x33*x34*x35*x42*x43*x44*x51*x52*x53-10080,</span><br><span class="line">    x54+x55+x56+x57+x58+x59+x60+x61+x62-25,</span><br><span class="line">    x06+x15+x24+x33+x42+x51+x60+x69+x78-25,</span><br><span class="line">    x54+x55+x56+x63+x64+x65+x72+x73+x74-25,</span><br><span class="line">    x54*x55*x56*x57*x58*x59*x60*x61*x62-10080,</span><br><span class="line">    x06*x15*x24*x33*x42*x51*x60*x69*x78-10080,</span><br><span class="line">    x54*x55*x56*x63*x64*x65*x72*x73*x74-10080,</span><br><span class="line">    x63+x64+x65+x66+x67+x68+x69+x70+x71-25,</span><br><span class="line">    x07+x16+x25+x34+x43+x52+x61+x70+x79-25,</span><br><span class="line">    x57+x58+x59+x66+x67+x68+x75+x76+x77-25,</span><br><span class="line">    x63*x64*x65*x66*x67*x68*x69*x70*x71-10080,</span><br><span class="line">    x07*x16*x25*x34*x43*x52*x61*x70*x79-10080,</span><br><span class="line">    x57*x58*x59*x66*x67*x68*x75*x76*x77-10080,</span><br><span class="line">    x72+x73+x74+x75+x76+x77+x78+x79+x80-25,</span><br><span class="line">    x08+x17+x26+x35+x44+x53+x62+x71+x80-25,</span><br><span class="line">    x60+x61+x62+x69+x70+x71+x78+x79+x80-25,</span><br><span class="line">    x72*x73*x74*x75*x76*x77*x78*x79*x80-10080,</span><br><span class="line">    x08*x17*x26*x35*x44*x53*x62*x71*x80-10080,</span><br><span class="line">    x60*x61*x62*x69*x70*x71*x78*x79*x80-10080,</span><br><span class="line">    x00-7,</span><br><span class="line">    x02-5,</span><br><span class="line">    x03-6,</span><br><span class="line">    x06+1,</span><br><span class="line">    x08-4,</span><br><span class="line">    x09-6,</span><br><span class="line">    x10-4,</span><br><span class="line">    x16-2,</span><br><span class="line">    x17-7,</span><br><span class="line">    x18-1,</span><br><span class="line">    x19-2,</span><br><span class="line">    x20+1,</span><br><span class="line">    x21-4,</span><br><span class="line">    x22-7,</span><br><span class="line">    x25-5,</span><br><span class="line">    x26-6,</span><br><span class="line">    x27-2,</span><br><span class="line">    x28-5,</span><br><span class="line">    x29-1,</span><br><span class="line">    x31-6,</span><br><span class="line">    x35+1,</span><br><span class="line">    x45+1,</span><br><span class="line">    x49-5,</span><br><span class="line">    x51-2,</span><br><span class="line">    x52-6,</span><br><span class="line">    x55+1,</span><br><span class="line">    x58-3,</span><br><span class="line">    x61-7,</span><br><span class="line">    x63-5,</span><br><span class="line">    x65-2,</span><br><span class="line">    x66-7,</span><br><span class="line">    x67-4,</span><br><span class="line">    x70+1,</span><br><span class="line">    x71-3,</span><br><span class="line">    x72-3,</span><br><span class="line">    x74-7,</span><br><span class="line">    x75-5,</span><br><span class="line">    x78-4,</span><br><span class="line">    x80-2,</span><br><span class="line">     1-1</span><br><span class="line">],[x00,x01,x02,x03,x04,x05,x06,x07,x08,x09,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80]))</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这是我掌握的第三种通过计算机方式求解数独的第三种方式，前面两种分别是回溯法,DLX算法。<br>这种多项式求解的方法好处在于将数字之间的逻辑用多项式进行表达,将复杂的逻辑运算交由封装好的工具去处理。<br>稍微麻烦一点的就是书写多项式的表达式，通过数独的相关信息生成py文件再运行py文件,这是后话了。<br>该部分会在C#调用Python代码中会有详细介绍了(未完成,预计在2019年1月21日之前会补充这部分内容)。  </p><h1 id="最终总结"><a href="#最终总结" class="headerlink" title="最终总结"></a>最终总结</h1><p>所有结论都需要实际验证正确之后，再形成文章，这是对自己的负责，也是对读者的负责。<br>也希望读者们能够不吝赐教,表示非常感谢！</p>]]></content>
      
      
      <categories>
          
          <category> 数独之趣 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数独 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>迟到的元旦快乐</title>
      <link href="/ComfirmedPostionSodukuClues/"/>
      <url>/ComfirmedPostionSodukuClues/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>在元旦之前，本想炫技生成漂亮的数独图案的题目然后发在朋友圈祝朋友们节日快乐。可惜是技术实在不过关。</p><h1 id="数独图形"><a href="#数独图形" class="headerlink" title="数独图形"></a>数独图形</h1><p>在资深的数独迷眼里,标准数独是指通过盘面上的所有提示数字，有且仅有唯一解。<br>以下四个图形，虽说有“元旦快乐”的四个字样，但是并不具备唯一解。  </p><div style="clear:both; width:800px"><div style="float:left;width:400px"> <img src="/ComfirmedPostionSodukuClues/元初始状态.png"></div><div style="float:right;width:400px"><img src="/ComfirmedPostionSodukuClues/旦初始状态.png"></div></div><div style="clear:both; width:800px"><div style="float:left;width:400px"> <img src="/ComfirmedPostionSodukuClues/快初始状态.png"></div><div style="float:right;width:400px"><img src="/ComfirmedPostionSodukuClues/乐初始状态.png"></div></div><p>我们可以经由DLX算法可以快速得知<br>以上“元旦快乐”四个数字的可能解的个数是分别是512,8388,66,285。</p><h1 id="标准数独的基本条件"><a href="#标准数独的基本条件" class="headerlink" title="标准数独的基本条件"></a>标准数独的基本条件</h1><blockquote><p>盘面至少<strong>17</strong>个数字。<br>每一大行中没有两个空行,即第一，二，三行必须有两行存在数字。<br>每一大列中没有两个空列,即第一，二，三列必须有两列存在数字。<br>盘面至少有<strong>8</strong>个不同的已知数字。<br>即<strong>元</strong>字的r3c8会有个<strong>2</strong>的存在是为了避免第一和第三行可以互换,不满足数独唯一性的必要条件。</p></blockquote><h1 id="求解过程"><a href="#求解过程" class="headerlink" title="求解过程"></a>求解过程</h1><p>以元字的表达式为例<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 元表达式</span><br><span class="line">var before = new DanceLink().solution_count(&quot;000000000001234500000000020134659782000308000000402000000703004009006007070001358&quot;);</span><br><span class="line">// 元的第一个已知数据和第二个已知数据交换</span><br><span class="line">var after  = new DanceLink().solution_count(&quot;000000000002134500000000020134659782000308000000402000000703004009006007070001358&quot;);</span><br></pre></td></tr></table></figure></p><p>输出的结果是<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">before = 512;</span><br><span class="line">after  = 312;</span><br></pre></td></tr></table></figure><br>所以最终解可以由after的表达式进行进一步的两两交换去生成。<br>由因为A的已知数据是30个，所以位置的交换有30*29/2=435种。<br>整个交换的执行流程如下：<br>1、建立一个尝试字典集tryDic,键是数独的表达式,值是数独的结果的可能个数。<br>2、30个位置进行组合，生成435个包含两个位置的集合。<br>3、数独表达式交换前后分别记为before,after,解的个数分别记作b,a,将before,after及其结果数存入tryDic。<br>4、对435个集合进行遍历,若a!=0,且a小于b,则before=after;<br>5、很有可能第一轮排列组合之后,a并不等于1;没有找到唯一解的数独表达式,选取tryDic的结果个数最多的字符串S出来作为下一轮循环的因子。<br>6、循环执行1~5的过程，<strong>注意步骤5中的字符串S应该是过往循环中没有使用过的，否则会陷入死循环。</strong></p><p>书上以<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">001000009000200046007080000000001000003000200000500000000030800960007000200000500</span><br></pre></td></tr></table></figure><br>这个18个提示数的数独作为例子作为讲解，我也通过以上流程生成了一个18个提示数的标准数独。</p><blockquote><p>借助书上的说法,除了聪明和运气，我们别无他法。</p></blockquote><h1 id="标准数独-元旦快乐"><a href="#标准数独-元旦快乐" class="headerlink" title="标准数独(元旦快乐)"></a>标准数独(元旦快乐)</h1><p>最终生成的结果如下，难度不大。</p><div style="clear:both; width:800px"><div style="float:left;width:400px"> <img src="/ComfirmedPostionSodukuClues/元.png"></div><div style="float:right;width:400px"><img src="/ComfirmedPostionSodukuClues/旦.png"></div></div><div style="clear:both; width:800px"><div style="float:left;width:400px"> <img src="/ComfirmedPostionSodukuClues/快.png"></div><div style="float:right;width:400px"><img src="/ComfirmedPostionSodukuClues/乐.png"></div></div><h1 id="逆向思维"><a href="#逆向思维" class="headerlink" title="逆向思维"></a>逆向思维</h1><p>由以上位置找固定数独的位置可知，如果标准数独去掉某个提示数，不在构成唯一解，但是满足构成标准数独的基本条件,则可能通过两两交换的生成一个新的标准数独。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.cnblogs.com/zhao-yi/p/8533035.html">C#实现排列、组合</a></li><li><a href="https://github.com/ddabb/soduku">C#源码</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数独之趣 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排列组合 </tag>
            
            <tag> 数独 </tag>
            
            <tag> 固定位置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SqlServer 迁移到mysql</title>
      <link href="/sqlserver-to-mysql/"/>
      <url>/sqlserver-to-mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>最近有开展Sqlserver 迁移到mysql的工作,以下经验基本上是别的博客没有提到过的，故行此文以作补充。</p><h1 id="版本差异"><a href="#版本差异" class="headerlink" title="版本差异"></a>版本差异</h1><h2 id="时间精度"><a href="#时间精度" class="headerlink" title="时间精度"></a>时间精度</h2><p>Mysql 5.5版本不支持毫秒,Mysql 5.6以上才支持。<br>时间格式为<strong>DateTime(3)</strong>,当前时间为<strong>Now(3)</strong>。在5.5版本上,这两种写法为提示错误。</p><h2 id="row-number函数"><a href="#row-number函数" class="headerlink" title="row_number函数"></a>row_number函数</h2><p>mysql 8.0才支持row_number函数，低版本都不支持该函数。<br><strong>低版本实现方式:</strong> 游标查询,或者少量数据的情况下,创建带有自增主键的临时表。</p><h2 id="mysql-proc表"><a href="#mysql-proc表" class="headerlink" title="mysql.proc表"></a>mysql.proc表</h2><p>该表在mysql 8.0版本中已经不存在了,所以 <strong><font color="#FF0000">select * from mysql.proc；</font></strong>在mysql 8.0版本中会报错;<br>需要转换成 <strong><font color="#FF0000">show procedure status where db=’sys’;</font></strong>这种写法来获取存储过程的相关信息。</p><h2 id="with-cte"><a href="#with-cte" class="headerlink" title="with cte"></a>with cte</h2><p>mysql 8.0以上才支持cte,不过<a href="https://dev.mysql.com/doc/refman/8.0/en/with.html#common-table-expressions-recursive">Mysql递归cte</a>的写法与sql server存在差异,需要添加关键字<strong>recursive</strong>,否则会提示cte不存在错误。</p><p>如下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">with recursive cte as</span><br><span class="line">(</span><br><span class="line">    select Id,Pid,DeptName,0 as lvl from Department</span><br><span class="line">    where Id = 2</span><br><span class="line">    union all</span><br><span class="line">    select d.Id,d.Pid,d.DeptName,lvl+1 from cte c inner join Department d</span><br><span class="line">    on c.Id = d.Pid</span><br><span class="line">)</span><br><span class="line">select * from cte</span><br></pre></td></tr></table></figure></p><h2 id="net-framework框架"><a href="#net-framework框架" class="headerlink" title=".net framework框架"></a>.net framework框架</h2><p>5.6 及以上的的版本使用<strong>mysql.data.dll</strong>时需要 <strong>.net framework 4.5.2</strong>以上。</p><h1 id="Mysql不具备的SQL-Server语法"><a href="#Mysql不具备的SQL-Server语法" class="headerlink" title="Mysql不具备的SQL Server语法"></a>Mysql不具备的SQL Server语法</h1><h2 id="uniqueidentifier"><a href="#uniqueidentifier" class="headerlink" title="uniqueidentifier"></a>uniqueidentifier</h2><p>SqlServer 通过WorkBench 迁移到Mysql时，该字段会自动变成varchar(36)类型。Mysql对应的生成Guid的语法是<strong>uuid()</strong>。<br>因object不支持强制转换成Guid，所以应将接口代码中的 <strong>(Guid)cmd.ExecuteScalar()</strong>替换成<strong>new Guid(cmd.ExecuteScalar())</strong></p><h2 id="deleted-Inserted"><a href="#deleted-Inserted" class="headerlink" title="deleted,Inserted"></a>deleted,Inserted</h2><p>SqlServer在执行 insert into table_a select top 10 columnname from table_b时可以通过inserted获取到新插入的十条记录的自增主键,而Mysql不可以。<br><strong>实现方式</strong>  表新增Guid辅助字段,并将Guid放在临时表,通过多表链接查询获取数据。</p><h2 id="select-top-…-percent"><a href="#select-top-…-percent" class="headerlink" title="select top … percent"></a>select top … percent</h2><p>SqlServer在执行 select top 10 percent columnname from table_a,如果table_a中有200条记录,则会返回前20条记录。<br><strong>实现方式</strong>  Mysql 需要通过获取总记录条数，然后获取总条数*百分比来获取数据。</p><h1 id="临时表编码"><a href="#临时表编码" class="headerlink" title="临时表编码"></a>临时表编码</h1><p>CREATE TEMPORARY TABLE<br>temptable1(groupname VARCHAR(50))<br> <strong><font color="#FF0000">DEFAULT CHARSET=utf8;</font></strong><br>这样可以解决临时表不能插入中文的问题。</p><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><h2 id="默认位置"><a href="#默认位置" class="headerlink" title="默认位置"></a>默认位置</h2><p>各版本的配置文件的位置如下:<br><strong>5.5：</strong> C:\<font color="#FF0000">Program Files</font>\MySQL\MySQL Server 5.5\my.ini<br><strong>5.6：</strong> C:\<font color="#FF0000">ProgramData</font>\MySQL\MySQL Server 5.6\my.ini<br><strong>5.7：</strong> C:\<font color="#FF0000">ProgramData</font>\MySQL\MySQL Server 5.7\my.ini<br><strong>8.0：</strong> C:\<font color="#FF0000">ProgramData</font>\MySQL\MySQL Server 8.0\my.ini<br><strong><font color="#FF0000">配置文件修改以后重启mysqlserver才会生效。</font></strong></p><h2 id="longtext存储"><a href="#longtext存储" class="headerlink" title="longtext存储"></a>longtext存储</h2><p>max_allowed_packet 的默认值是4M。<br>设置<strong>max_allowed_packet=100M</strong>可以解决longtext数据的存储长度的问题。</p><h2 id="数据库名大小写"><a href="#数据库名大小写" class="headerlink" title="数据库名大小写"></a>数据库名大小写</h2><p>lower_case_table_names<br>设置lower_case_table_names=1,表名称都设置为统一小写。</p><h2 id="id自增不连续"><a href="#id自增不连续" class="headerlink" title="id自增不连续"></a>id自增不连续</h2><p>innodb_autoinc_lock_mode=0  解决id自增不连续的问题；</p><h1 id="语法差异"><a href="#语法差异" class="headerlink" title="语法差异"></a>语法差异</h1><h2 id="不等于"><a href="#不等于" class="headerlink" title="不等于"></a>不等于</h2><p>SqlServer的不等于符号 <strong>!=</strong>中间可以存在空格，而Mysql的不可以。<br>Sql Server： select * from a where a.column !    = 0  <font color="#FF0000">不报错</font><br>Mysql： select * from a where a.column !    = 0       <font color="#FF0000">报错</font><br>Mysql： select * from a where a.column != 0           <font color="#FF0000">不报错</font>  </p><h2 id="逻辑取反"><a href="#逻辑取反" class="headerlink" title="逻辑取反"></a>逻辑取反</h2><p>SqlServer ： update table_a set isOk=~isOk;<br>Mysql     ： update table_a set isOk=!isOk;</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上就是本人在做SqlServer 迁移到Mysql的过程中遇到的问题以及相应的解决方案。<br>如果其中有不正确的地方，强烈欢迎指正，避免误导他人。<br>希望该文能为你的迁移大业贡献一份力量。</p>]]></content>
      
      
      <categories>
          
          <category> IT经验 </category>
          
          <category> 数据库迁移 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> sqlserver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018年总结</title>
      <link href="/2018%E5%B9%B4%E6%80%BB%E7%BB%93/"/>
      <url>/2018%E5%B9%B4%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>是时候写2018年的年终总结了。</p><h1 id="新"><a href="#新" class="headerlink" title="新"></a>新</h1><p>前不久，在脉脉上有个话题就是用一个字来总结自己的2018年。我思来想去用了一个<strong>新</strong>字。<br>这个<strong>新</strong>字体现在了很多方面，新的工作，新的租房，新的博客。  </p><h2 id="新的工作"><a href="#新的工作" class="headerlink" title="新的工作"></a>新的工作</h2><p><strong>新技术</strong> 新的工作是于4月份开始的，之前我只接触过Sql Server一种数据库，今年业内或者业余有接触了Sqlite、Mysql、Pgsql,Redis等数据库。其中Mysql 5.6,5.7,5.8的社区版都浅尝辄止地了解了一番,也算得上有半年的mysql使用经验了。<br><strong>新职责</strong> 之前的工作涉及到需求设计、概要设计、项目管理、功能开发、维护等各方面;在新工作环境下，这一切变得不复存在，目前我的主要职责是负责修复bug,产品部署上线即可。会议少了很多，总结也少了很多。<br><strong>新实践</strong> 理念还是我原来奉行的拒绝重复的理念，这次是真正意义地落到了实处。工作内容就是完善一个避免重复工作的系统，在每次实际部署的过程中耗费的时间较长，所以我自行写了一个软件免去了部署过程中的很多的重复低效的步骤。<br><strong>新脾气</strong> 个人一直有个坏毛病，抗干扰的能力太差。自己好不容易整理好的思路网被莫名其妙地打乱难免心情不爽，但是有时候生活就是这样，你不能让所以事情都按照自己的意愿来发展，若声音太噪杂，自己带耳机听歌解决。  </p><h2 id="新的认知"><a href="#新的认知" class="headerlink" title="新的认知"></a>新的认知</h2><p>今年以来，个人认知上面发生了一些改变。<br><strong>新博客</strong> 是在7月28号开始动了整理资料的念头,到如今也有了30余篇文章。这个网站的搭建算是今年的比较满意的成就之一。虽然有时候也会有点质疑同事们整理的资料那么多，是否随着时间的消逝就从来再没有翻阅过。但是自己也深知整理资料的过程就是形成自己的知识体系的过程，好记性不如烂笔头，这部分是必不可少的。<br><strong>新室友</strong> 今年想着改变下自己的生活圈子，选择了自如的合租房。过来合租的小女生基本上都是23~24岁左右的小女生。合租房就是这样，遇到性格相仿的人哪样都好，遇到性格不好的人就哪样都恶，好能好到忙完手头上的事情凌晨三点一起出去吃夜宵，没合租了还得嘲讽我还是单身的事情。总的来说，这些小女生还没毕业就各种找工作，找实习的确是当年的我不能比。认识她们也算是生活中的小庆幸了。<br><strong>新朋友</strong> 今年新认识的朋友要比去年多一些，有些是因为工作上的话题，有些是因为个人兴趣爱好，甚至有的还是极力宣传个人开源软件的大佬。交流得多了就会有种感觉，这个人的文章我拜读过，这个大佬的博客的资料对我有用，就会有种这个圈子就这么大的感觉。这样多交流，自然就共同进步了。<br><strong>新相亲</strong> 这个<strong>新</strong>我多讲几句，自从分手以后表示并不抗拒相亲这件事情，我甚至跑到<strong>我主良缘</strong>作了一个个人性格测评，我表示对老师的专业非常认可，但是我还是没有继续在该平台找对象，并不是不信任其专业。只是一些个人私人原因,没有继续罢了。各种要给我介绍对象的人很多，其余基本上都是在网上聊了几句就没有下文。也就只有一个相亲对象，我屁颠屁颠地跑到她工作岗位上去见了她，漂亮是真漂亮，但是尬聊是有点真尬聊。行此文之际正值某某多年的离婚谣言被坐实，其实自己的相亲心态一直都没有放端正，就是比较希望在同一个城市生活，然后会觉得自己没有强大到让一个女孩子背井离乡到他乡生活。只能希冀自己能够早点强大起来一点吧。  </p><h2 id="新的挑战"><a href="#新的挑战" class="headerlink" title="新的挑战"></a>新的挑战</h2><p><strong>新压力</strong>  如果非得跟运势扯上关系，今年的运势的确不是特别好，但是否极泰来，杀不死我的都会使我更加强大吧。只要不是真正意义地被杀死就还有东山再起的时候。  </p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>其实,今年也有不少<strong>旧</strong>，偶遇十年没见的高中隔壁班的女同学,还有初中隔壁班的女同学被作为相亲对象,还有联系了五年没联系的大学同学，生活的圈子就是这样，可以很大，也可以很小。看自己是否愿意改变罢了。<br>总的来说,今年我的职场发展，人际关系，居住环境等都发生了很大的变化。有赞赏，有批评。有希冀，有失落。个人总结下来，这一年还是收获了不少新知，算是一大突破吧。愿与看到此处的朋友共勉。  </p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斗地主所有牌型组合个数统计</title>
      <link href="/138712181744994/"/>
      <url>/138712181744994/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>最近业余时间在研究排列组合的相关问题,话题涉及到了<strong>在不考虑花色的情况下？54张牌按照斗地主的方式以20，17，17的方式分给3个人有多少中可能解决方案？</strong><br>我觉得这个问题有点意思，并以sql脚本的形式实现了问题的求解过程，希望大家能从这篇文章中所有收获。</p><h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><p>以4个3为例，分给地主1，农民2，农民3的所有组合情况如下：<br><img src="/138712181744994/4个3.png" alt="4个3的组合情况"><br>既4个3在3个玩家中的可能情况有15种。在不考虑斗地主手牌数限制的情况下,因A到K有13张牌，则A到K的所有位置的组合数有$15^{13}$种可能性。<br>以大王为例,分给地主1，农民2，农民3的所有组合情况如下：<br><img src="/138712181744994/大王.png" alt="大王的组合情况"><br>在不考虑斗地主手牌数限制的情况下,大王和小王在三家的可能性有3*3=9种可能性。<br>所以牌型组合的理论上限是$9*15^{13}$。接近于$1.75*10^{16}$。  </p><p><img src="/138712181744994/组合.png" alt="组合情况的一种"><br>根据<a href="https://baike.baidu.com/item/计数原理/4032370">计数原理</a>,结合上图可知：<br>如果3~7在玩家1，2，3的手牌张数分别是20，0，0的可行方法是1种。<br>如果8~Q在玩家1，2，3的手牌张数分别是0，17，3的可行方法是35种。<br>如果K到大王在玩家1，2，3的手牌张数分别是0，0，14的可行方法是1种。<br>所以三个步骤组合起来的总可行方法是$1*35*1=35$种方法。</p><p>具体细节参考<a href="https://github.com/ddabb/138712181744994/blob/master/product.sql">Sql server版斗地主牌型组合统计的代码</a>,最终的出来的结果是<strong>138712181744994</strong>,即$1.3871*10^{14}$。即在不区分花色的情况下，斗地主所有的牌型组合数。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>记录斗地主的所有牌型这种方式来做AI是不切实际的，毕竟普通PC机是没有办法存储$1.3871*10^{14}$条数据的。</p><hr><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://baike.baidu.com/item/计数原理/4032370">计数原理</a></li><li><a href="https://www.60points.com/combination/">m个球放到n个箱子中几种解法</a></li><li><a href="https://www.60points.com/Fight-the-Landlord-Card-Type-Aanalysis/">欢乐斗地主出牌方式统计</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 逻辑思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欢乐斗地主 </tag>
            
            <tag> 排列组合 </tag>
            
            <tag> 138712181744994 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>m个球放到n个箱子中几种解法</title>
      <link href="/combination/"/>
      <url>/combination/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>该文的诞生源于一个问题:<strong>斗地主有多少种牌型组合?</strong><br>众所周知,斗地主共54张牌分别给三个人20,17,17张牌，因为方块3和梅花3在斗地主中无区别，转化一下问题就是13种不同的颜色（不包括黑白）的球各4个,黑球，白球各1个,放到容积分别为20,17,17的三个箱子中有多少种方法？<br>第一想法是想到采取排列组合的方式去解，但是多久没有做排列组合的习题，我发现<strong>3红3黄3蓝1黑1白共11个球放到容积为5,3,3的三个箱子中,不考虑顺序总共有多少种方法？</strong>这个问题我都计算困难,该文简单讲一下该问题的两种解法。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="方案1：全排列"><a href="#方案1：全排列" class="headerlink" title="方案1：全排列"></a>方案1：全排列</h2><h3 id="方案1-1-考虑黑白球"><a href="#方案1-1-考虑黑白球" class="headerlink" title="方案1.1 考虑黑白球"></a>方案1.1 考虑黑白球</h3><p>假设11个球的颜色全不相同,则所有排列顺序是1~11的全排列是<strong>11!=39916800</strong>。<br>再假设1,4,7为红球,2,5,8为黄球,3,6,9为蓝球，10为黑球,11为白球。  </p><p><font color="#FF0000">也可以1,2,3为红球,4,5,6为黄球,7,8,9为蓝球，10为白球,11为黑球。给球编号是为了计算全排列方便。</font><br>以全排列元素中的一个<strong>链表X</strong>(全排列的取值之一) <strong>{9,8,3,5,6,4,11,7,1,2,10}</strong>为例,<br>可以分成 <strong>{9,8,3,5,6}</strong>和 <strong>{4,11,7}</strong>和 <strong>{1,2,10}</strong>三组。<br>将每组数据中≤9的对3取余,结果变成了A:<strong>{0,2,0,2,0}</strong>和B:<strong>{1,1,11}</strong>和C:<strong>{1,2,10}</strong>三组数据。<br>∵ 在箱子中 <strong>{4,11,7}</strong>和 <strong>{4,7,11}</strong>是等价的。<br>∴ A、B、C三组都需要排序，排序后为{0,0,0,2,2}，{1,1,11},{1,2,10}<br>∴<strong>{9,8,3,5,6,4,11,7,1,2,10}</strong> 表示A箱子有3个蓝球，2个黄球；B箱子有2个红球,1个白球；C箱子有1个红球,1个黄球,1个黑球。<br>∴链表X的表达式是0,0,0,2,2,1,1,11,1,2,10<br>∴将39916800链表的表达式去重就可以算出序中提到的问题的解为355个。  </p><h3 id="方案1-2-先不考虑黑白球"><a href="#方案1-2-先不考虑黑白球" class="headerlink" title="方案1.2 先不考虑黑白球"></a>方案1.2 先不考虑黑白球</h3><p>∵黑球的可能位置只有3种,白球的可能位置也只有3种。<br>即黑白球都在A箱,都在B箱,都在C箱,分别在AC箱,分别在BC箱，分别在AB箱。<br>所有组合情况如下<br><img src="/combination/nine.png" alt="黑白球位置组合"><br>这样就只需要计算9的全排列<strong>9!=362880</strong>次数据。<br>计算方式如方案1.1,再次不再赘述。<br>结果依旧为355。<br>具体计算代码请参考<a href="https://github.com/ddabb/permutations/blob/master/Program.cs">方案一代码</a></p><h2 id="方案2：笛卡尔积"><a href="#方案2：笛卡尔积" class="headerlink" title="方案2：笛卡尔积"></a>方案2：笛卡尔积</h2><p>在不考虑各箱子容积的前提下；<br>每个球都有3个箱子可以选择，则11个球的位置有<strong>3的11次方=177147</strong>中可能性。<br>若箱子A,B,C编号为{1,2,3}。大小分别为{5,3,3}。<br>则第一个球和第二球的箱子可能组合是{1,2,3}和{1,2,3}的笛卡尔积  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;   &#123;1,1&#125;,&#123;1,2&#125;,&#123;1,3&#125;,   &#123;2,1&#125;,&#123;2,2&#125;,&#123;2,3&#125;,   &#123;3,1&#125;,&#123;3,2&#125;,&#123;3,3&#125;  &#125;  </span><br></pre></td></tr></table></figure><p>将每个球所有的可能性做笛卡尔积之后，会得到一个177147个<strong>元素个数为11的链表L</strong>的集合S。<br>若链表L中有5个元素1，有3个元素2，有3个元素3。则链表L符合球进入箱子的逻辑。否则不符合球进入箱子的逻辑。<br>假若链表L为{1,2,3,2,3,2,1,1,1,1,3}且11个球的顺序为<strong>红,红,红,黄,黄,黄,蓝,蓝,蓝,黑,白</strong><br>则箱子内的颜色情况如下:<br>A箱：红蓝蓝蓝黑<br>B箱：红黄蓝<br>C箱：红黄白<br>所以链表L的表示式为 A-红蓝蓝蓝黑 B-红黄蓝 C-红黄白<br>将所有符合进箱逻辑的链表的表达式算出来去重,算出来<strong>结果依旧为355。</strong><br>具体计算代码请参考<a href="https://github.com/ddabb/combination">方案二代码</a>  </p><blockquote><p><strong><font color="#FF0000">注意：相同颜色的球的顺序应该连在一起，否则箱子内的球需要再做一次排序去重。</font></strong>  </p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>该文是对排列组合知识的一个补充。如果有更好的解决m个不同颜色的球放到n个箱子中的更好的解法，欢迎留言或者直接联系我。<br>如果能有算出斗地主有多少种牌型组合的方法，则更希望能联系我。<br>方案2在箱子不够多,球不够多的情况下,的确是不错的一个计算方案。</p><hr><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.cnblogs.com/localhost2016/p/8668355.html">C# 用Linq的方式实现组合和笛卡尔积（支持泛型T）</a></li><li><a href="https://blog.csdn.net/MaybeHelios/article/details/759315">终于有个高效率的排列组合算法</a></li><li><a href="https://www.60points.com/Fight-the-Landlord-Card-Type-Aanalysis/">欢乐斗地主出牌方式统计</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 逻辑思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排列组合 </tag>
            
            <tag> 不同颜色 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python画爱心</title>
      <link href="/python-print-heart/"/>
      <url>/python-print-heart/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>该文算是python版的”Hello world”初探，故作相关的记录。<br>环境准备:Visual Studio 2017,python</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="爱心一"><a href="#爱心一" class="headerlink" title="爱心一"></a>爱心一</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">x_coords = np.linspace(- 100, 100, 500)</span><br><span class="line">y_coords = np.linspace(- 100, 100, 500)</span><br><span class="line">points = []</span><br><span class="line"></span><br><span class="line">for y in y_coords:</span><br><span class="line"> for x in x_coords:</span><br><span class="line">    if((x* 0.03)** 2+(y* 0.03)** 2- 1)** 3-(x* 0.03)** 2*(y* 0.03)** 3&lt;= 0:</span><br><span class="line">       points.append(&#123; &quot;x&quot;: x, &quot;y&quot;: y&#125;)</span><br><span class="line"></span><br><span class="line">heart_x = list(map( lambda point: point[ &quot;x&quot;], points))</span><br><span class="line">heart_y = list(map( lambda point: point[ &quot;y&quot;], points))</span><br><span class="line"></span><br><span class="line">plt.scatter(heart_x, heart_y, s= 10, alpha= 0.5)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>效果如图<br><img src="/python-print-heart/heart1.png" alt="爱心1">  </p><h2 id="爱心二"><a href="#爱心二" class="headerlink" title="爱心二"></a>爱心二</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"> </span><br><span class="line">import turtle</span><br><span class="line">import time</span><br><span class="line"> </span><br><span class="line"># 画心形圆弧</span><br><span class="line">def hart_arc():</span><br><span class="line">    for i in range(200):</span><br><span class="line">        turtle.right(1)</span><br><span class="line">        turtle.forward(2)</span><br><span class="line"> </span><br><span class="line">def move_pen_position(x, y):</span><br><span class="line">    turtle.hideturtle()     # 隐藏画笔（先）</span><br><span class="line">    turtle.up()     # 提笔</span><br><span class="line">    turtle.goto(x, y)    # 移动画笔到指定起始坐标（窗口中心为0,0）</span><br><span class="line">    turtle.down()   # 下笔</span><br><span class="line">    turtle.showturtle()     # 显示画笔</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">#love = input(&quot;请输入表白话语，默认为‘I Love You’：&quot;)</span><br><span class="line">#signature = input(&quot;请签署你的大名，不填写默认不显示：&quot;)</span><br><span class="line"></span><br><span class="line">signature= &#x27;&#x27;</span><br><span class="line">love = &#x27;I Love You&#x27;</span><br><span class="line"></span><br><span class="line">if love == &#x27;&#x27;:</span><br><span class="line">    love = &#x27;I Love You&#x27;</span><br><span class="line"> </span><br><span class="line"># 初始化</span><br><span class="line">turtle.setup(width=800, height=500)     # 窗口（画布）大小</span><br><span class="line">turtle.color(&#x27;red&#x27;, &#x27;pink&#x27;)     # 画笔颜色</span><br><span class="line">turtle.pensize(3)       # 画笔粗细</span><br><span class="line">turtle.speed(1)     # 描绘速度</span><br><span class="line"># 初始化画笔起始坐标</span><br><span class="line">move_pen_position(x=0,y=-180)   # 移动画笔位置</span><br><span class="line">turtle.left(140)    # 向左旋转140度</span><br><span class="line"> </span><br><span class="line">turtle.begin_fill()     # 标记背景填充位置</span><br><span class="line"> </span><br><span class="line"># 画心形直线（ 左下方 ）</span><br><span class="line">turtle.forward(224)    # 向前移动画笔，长度为224</span><br><span class="line"># 画爱心圆弧</span><br><span class="line">hart_arc()      # 左侧圆弧</span><br><span class="line">turtle.left(120)    # 调整画笔角度</span><br><span class="line">hart_arc()      # 右侧圆弧</span><br><span class="line"># 画心形直线（ 右下方 ）</span><br><span class="line">turtle.forward(224)</span><br><span class="line"> </span><br><span class="line">turtle.end_fill()       # 标记背景填充结束位置</span><br><span class="line"> </span><br><span class="line"># 在心形中写上表白话语</span><br><span class="line">move_pen_position(0,0)      # 表白语位置</span><br><span class="line">turtle.hideturtle()     # 隐藏画笔</span><br><span class="line">turtle.color(&#x27;#CD5C5C&#x27;, &#x27;pink&#x27;)      # 字体颜色</span><br><span class="line"># font:设定字体、尺寸（电脑下存在的字体都可设置）  align:中心对齐</span><br><span class="line">turtle.write(love, font=(&#x27;Arial&#x27;, 30, &#x27;bold&#x27;), align=&quot;center&quot;)</span><br><span class="line"> </span><br><span class="line"># 签写署名</span><br><span class="line">if signature != &#x27;&#x27;:</span><br><span class="line">    turtle.color(&#x27;red&#x27;, &#x27;pink&#x27;)</span><br><span class="line">    time.sleep(2)</span><br><span class="line">    move_pen_position(180, -180)</span><br><span class="line">    turtle.hideturtle()  # 隐藏画笔</span><br><span class="line">    turtle.write(signature, font=(&#x27;Arial&#x27;, 20), align=&quot;center&quot;)</span><br><span class="line"> </span><br><span class="line"># 点击窗口关闭程序</span><br><span class="line">window = turtle.Screen()</span><br><span class="line">window.exitonclick()</span><br></pre></td></tr></table></figure><p>效果如下图<br><img src="/python-print-heart/heart2.png" alt="爱心2">  </p><h2 id="爱心三"><a href="#爱心三" class="headerlink" title="爱心三"></a>爱心三</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from matplotlib.font_manager import FontProperties</span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line">x=np.linspace(-2,2,200)</span><br><span class="line">y1 =np.sqrt(1-np.square(np.fabs(x)-1))</span><br><span class="line">y2 =np.arccos(1-np.fabs(x))-np.pi</span><br><span class="line"></span><br><span class="line">plt.plot(x,y1,&#x27;r&#x27;,x,y2,&#x27;r&#x27;)</span><br><span class="line">plt.axis([-2.5,2.5,-3.5,1.5])</span><br><span class="line"></span><br><span class="line">plt.title(&#x27;hello world of python,copy from @andrew&#x27;,fontsize=16)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>效果如下图<br><img src="/python-print-heart/heart3.png" alt="爱心3">  </p><h1 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h1><p><strong>在visual studio 2017中命令行执行 pip install numpy 无效</strong><br>在nuget程序包管理器控制台执行即可<br><strong>pip install pyinstaller之后生成的exe无法执行</strong><br>在我电脑上的路径是<strong>C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python36_64\Scripts</strong>,<br>把run.py拷贝到该目录,执行<strong>pyinstaller -F -W p . run.py</strong>解决问题</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/python-print-heart/hurt.png" alt="暴击"></p><hr><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://cloud.tencent.com/developer/news/216095">520情人节，用python画个爱心送给你的那个她！</a></li><li><a href="https://www.taitaiblog.com/1314.html">七夕将至，教你用Python绘制爱心，优雅的表白520~</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 画爱心 </tag>
            
            <tag> hello world </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写数独教程</title>
      <link href="/handwrite-soduku/"/>
      <url>/handwrite-soduku/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>该文目的是简单记载3*3数独的手写过程,并熟悉一下mathjax工具的运用。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>该文的整个过程可以用手写实现，也可以用编程语言实现，该文不对怎么用编程语言实现做详细描述。仅阐述手写的详细过程:</p><h2 id="生成行"><a href="#生成行" class="headerlink" title="生成行"></a>生成行</h2><p>首先,我们可以手写一行包含1~9<strong>数据行A</strong>，不重复即可，顺序不重要,该文以1~9顺序排列做示例。<br>\begin{bmatrix}<br>1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 \<br>\end{bmatrix}<br>然后将<strong>数据行A</strong>的前三位1,2,3移到<strong>数据行A</strong>的末尾,生成新的一行<strong>数据行B</strong>:<br>\begin{bmatrix}<br>4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp;1 &amp; 2 &amp; 3 \<br>\end{bmatrix}<br>然后将<strong>数据行B</strong>的前三位4,5,6移到<strong>数据行B</strong>的末尾,生成新的一行<strong>数据行C</strong>:<br>\begin{bmatrix}<br>7 &amp; 8 &amp; 9 &amp;1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6  \<br>\end{bmatrix}</p><h2 id="生成块"><a href="#生成块" class="headerlink" title="生成块"></a>生成块</h2><p>再将数据行依次组合，生成一个3行9列的数据块 $X_1$<br>\begin{bmatrix}<br>1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 \<br>4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 \<br>7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6  \<br>\end{bmatrix}<br>将数据块$X_1$的第一列<br>\begin{bmatrix}<br>1 \<br>4 \<br>7  \<br>\end{bmatrix}<br>移到最后一列生成新的数据块$X_2$<br>\begin{bmatrix}<br> 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1\<br> 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4\<br> 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7\<br>\end{bmatrix}<br>再将数据块$X_2$的第一列<br>\begin{bmatrix}<br>2 \<br>5 \<br>8 \<br>\end{bmatrix}<br>移到最后一列生成新的数据块$X_3$<br>\begin{bmatrix}<br> 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2\<br> 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5\<br> 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8\<br>\end{bmatrix}<br>再将数据块$X_1$,$X_2$,$X_3$依次组合,就形成了如下图所示的数独$Y_1$。<br>\begin{bmatrix}<br>1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 \<br>4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 \<br>7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 \<br>2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 \<br>5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 \<br>8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 \<br>3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 \<br>6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \<br>9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 \<br>\end{bmatrix}<br>所以说手写数独是很简单的，那怎么样让别人看不出来这是一个手写的?</p><h2 id="行交换"><a href="#行交换" class="headerlink" title="行交换"></a>行交换</h2><p>可以将 <strong>[1,2,3]</strong>行中两两任意互换;<br>可以将 <strong>[4,5,6]</strong>行中两两任意互换;<br>可以将 <strong>[7,8,9]</strong>行中两两任意互换;<br>第一行和第三行交换用 $1\Leftrightarrow3$ 表示。<br>依次执行$1\Leftrightarrow3$ ，$4\Leftrightarrow5$ 和 $8\Leftrightarrow9$<br>生成新的数独$Y_2$。如下:<br>\begin{bmatrix}<br>4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 \<br>7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 \<br>1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 \<br>5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 \<br>2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 \<br>8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 \<br>3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 \<br>9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 \<br>6 &amp; 7 &amp; 8 &amp; 9 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \<br>\end{bmatrix}</p><h2 id="列交换"><a href="#列交换" class="headerlink" title="列交换"></a>列交换</h2><p>可以将 <strong>[1,2,3]</strong>列中两两任意互换;<br>可以将 <strong>[4,5,6]</strong>列中两两任意互换;<br>可以将 <strong>[7,8,9]</strong>列中两两任意互换;<br>第一列和第三列交换用 $1\Longleftrightarrow3$ 表示。<br>依次对$Y_2$执行$1\Longleftrightarrow3$ ，$4\Longleftrightarrow5$ 和 $8\Longleftrightarrow9$<br>生成新的数独$Y_3$。如下:<br>\begin{bmatrix}<br>6 &amp; 5 &amp; 4 &amp; 8 &amp; 7 &amp; 9 &amp; 1 &amp; 3 &amp; 2  \<br>9 &amp; 8 &amp; 7 &amp; 2 &amp; 1 &amp; 3 &amp; 4 &amp; 6 &amp; 5  \<br>3 &amp; 2 &amp; 1 &amp; 5 &amp; 4 &amp; 6 &amp; 7 &amp; 9 &amp; 8  \<br>7 &amp; 6 &amp; 5 &amp; 9 &amp; 8 &amp; 1 &amp; 2 &amp; 4 &amp; 3  \<br>4 &amp; 3 &amp; 2 &amp; 6 &amp; 5 &amp; 7 &amp; 8 &amp; 1 &amp; 9  \<br>1 &amp; 9 &amp; 8 &amp; 3 &amp; 2 &amp; 4 &amp; 5 &amp; 7 &amp; 6  \<br>5 &amp; 4 &amp; 3 &amp; 7 &amp; 6 &amp; 8 &amp; 9 &amp; 2 &amp; 1  \<br>2 &amp; 1 &amp; 9 &amp; 4 &amp; 3 &amp; 5 &amp; 6 &amp; 8 &amp; 7  \<br>8 &amp; 7 &amp; 6 &amp; 1 &amp; 9 &amp; 2 &amp; 3 &amp; 5 &amp; 4  \<br>\end{bmatrix}</p><h2 id="数值交换"><a href="#数值交换" class="headerlink" title="数值交换"></a>数值交换</h2><p>将数独$Y_3$中的数字任意两个数字互换局组成了新的数独,如数独$Y_3$的<strong>2</strong>和<strong>7</strong>互换，就生成了新的数独$Y_4$<br>\begin{bmatrix}<br>6 &amp; 5 &amp; 4 &amp; 8 &amp; 2 &amp; 9 &amp; 1 &amp; 3 &amp; 7  \<br>9 &amp; 8 &amp; 2 &amp; 7 &amp; 1 &amp; 3 &amp; 4 &amp; 6 &amp; 5  \<br>3 &amp; 7 &amp; 1 &amp; 5 &amp; 4 &amp; 6 &amp; 2 &amp; 9 &amp; 8  \<br>2 &amp; 6 &amp; 5 &amp; 9 &amp; 8 &amp; 1 &amp; 7 &amp; 4 &amp; 3  \<br>4 &amp; 3 &amp; 7 &amp; 6 &amp; 5 &amp; 2 &amp; 8 &amp; 1 &amp; 9  \<br>1 &amp; 9 &amp; 8 &amp; 3 &amp; 7 &amp; 4 &amp; 5 &amp; 2 &amp; 6  \<br>5 &amp; 4 &amp; 3 &amp; 2 &amp; 6 &amp; 8 &amp; 9 &amp; 7 &amp; 1  \<br>7 &amp; 1 &amp; 9 &amp; 4 &amp; 3 &amp; 5 &amp; 6 &amp; 8 &amp; 2  \<br>8 &amp; 2 &amp; 6 &amp; 1 &amp; 9 &amp; 7 &amp; 3 &amp; 5 &amp; 4  \<br>\end{bmatrix}</p><blockquote><p>行交换，列交换，数值交换次数越多,就越来越没有手写的痕迹。掌握了数独的一个相关规律,手写数独就再是遥不可及的事情。</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>该文简单地介绍了手写数独的过程,希望那些对数独感兴趣的人读了这篇文章后有所收获。</p><hr><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://blog.csdn.net/frone/article/details/81170627">如何在hexo中支持Mathjax</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数独之趣 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数独 </tag>
            
            <tag> hexo </tag>
            
            <tag> mathjax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo画流程图</title>
      <link href="/Hexo_flow/"/>
      <url>/Hexo_flow/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>该文简单介绍一下在Hexo博客上画流程图。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="mermaid"><a href="#mermaid" class="headerlink" title="mermaid"></a>mermaid</h2><p>安装代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-mermaid-diagrams</span><br></pre></td></tr></table></figure><br>打开<strong>themes/next/_config.yml</strong><br>添加以下代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># mermaid chart</span><br><span class="line">mermaid: ## mermaid url https://github.com/knsv/mermaid</span><br><span class="line">  enable: true  # default true</span><br><span class="line">  version: &quot;7.1.2&quot; # default v7.1.2</span><br><span class="line">  options:  # find more api options from https://github.com/knsv/mermaid/blob/master/src/mermaidAPI.js</span><br><span class="line">    #startOnload: true  // default true</span><br></pre></td></tr></table></figure><br>在<strong>themes/next/layout/_partials/footer.swig</strong>最后加上<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if (theme.mermaid.enable)  %&#125;</span><br><span class="line">  &lt;script src=&#x27;https://cdnjs.cloudflare.com/ajax/libs/mermaid/7.1.2/mermaid.min.js&#x27;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    if (window.mermaid) &#123;</span><br><span class="line">      mermaid.initialize(&#123;theme: &#x27;forest&#x27;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p>最后一步修改<strong>根目录的_config.yml</strong>，把external_link的值改为false，默认的为true，这一步绝大多数教程中都没有写。</p><p>mermaid画流程图<br>示例代码</p><blockquote><p>```mermaid<br>graph TD;<br>   起床—&gt;洗漱;<br>   洗漱—&gt;吃早餐;<br>   洗漱—&gt;不吃早餐;<br>   吃早餐—&gt;出门;<br>   不吃早餐—&gt;出门;<br>```  </p></blockquote><p>效果如下</p><pre class="mermaid">graph TD;    起床-->洗漱;    洗漱-->吃早餐;    洗漱-->不吃早餐;    吃早餐-->出门;    不吃早餐-->出门;</pre><h2 id="flow"><a href="#flow" class="headerlink" title="flow"></a>flow</h2><p>安装代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-filter-flowchart</span><br></pre></td></tr></table></figure><br>然后无需其余配置<br>flow画流程图示例代码如下</p><blockquote><p>```flow<br>st=&gt;start: Start|past:&gt;<a href="http://www.google.com[blank">http://www.google.com[blank</a>]<br>e=&gt;end: End:&gt;<a href="http://www.google.com">http://www.google.com</a><br>op1=&gt;operation: My Operation|past<br>op2=&gt;operation: Stuff|current<br>sub1=&gt;subroutine: My Subroutine|invalid<br>cond=&gt;condition: Yes<br>or No?|approved:&gt;<a href="http://www.google.com">http://www.google.com</a><br>c2=&gt;condition: Good idea|rejected<br>io=&gt;inputoutput: catch something…|request<br>st-&gt;op1(right)-&gt;cond<br>cond(yes, right)-&gt;c2<br>cond(no)-&gt;sub1(left)-&gt;op1<br>c2(yes)-&gt;io-&gt;e<br>c2(no)-&gt;op2-&gt;e<br>```  </p></blockquote><p>flow画流程图效果如下</p><div id="flowchart-0" class="flow-chart"></div><h2 id="sequence"><a href="#sequence" class="headerlink" title="sequence"></a>sequence</h2><p>安装代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-filter-sequence</span><br></pre></td></tr></table></figure><br>然后无需其余配置。<br>sequence 画流程图示例代码</p><blockquote><p>```sequence<br>Alice-&gt;Bob: Hello Bob, how are you?<br>Note right of Bob: Bob thinks<br>Bob—&gt;Alice: I am good thanks!<br>```  </p></blockquote><p>sequence 画流程图效果如下</p><div id="sequence-0"></div><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>相比之下,mermaid的语法最简洁，渲染成图的过程最复杂，配置也最复杂。<br>而flow和sequence相对而言配置简单一点，但是语法复杂一些。</p><hr><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html">如何让你的HEXO博客支持手写流程图？</a><br><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Start|past:>http://www.google.com[blank]e=>end: End:>http://www.google.comop1=>operation: My Operation|pastop2=>operation: Stuff|currentsub1=>subroutine: My Subroutine|invalidcond=>condition: Yesor No?|approved:>http://www.google.comc2=>condition: Good idea|rejectedio=>inputoutput: catch something...|requestst->op1(right)->condcond(yes, right)->c2cond(no)->sub1(left)->op1c2(yes)->io->ec2(no)->op2->e</textarea><textarea id="flowchart-0-options" style="display: none">{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><script src="https://cdnjs.cloudflare.com/ajax/libs/webfont/1.6.27/webfontloader.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.4.1/snap.svg-min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js"></script><textarea id="sequence-0-code" style="display: none">Alice->Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob-->Alice: I am good thanks!</textarea><textarea id="sequence-0-options" style="display: none">{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("sequence-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("sequence-0-options").value));  var diagram = Diagram.parse(code);  diagram.drawSVG("sequence-0", options);</script></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo自定义 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 流程图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 调用share.js</title>
      <link href="/hexo_share_to_wechat/"/>
      <url>/hexo_share_to_wechat/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>我本来想做的分享按钮预期效果如下：<br><img src="/hexo_share_to_wechat/share.png" alt="分享图标">,本来也打开了一个实现了该效果的个人网站，结果一不小心关掉了,然后就只能自己动手制作分享功能。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>首先在<strong>themes\next\layout</strong>中新建一个文件<strong>socialshare.swig</strong><br>编辑内容如下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;../lib/jquery/index.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;link href=&quot;https://cdn.bootcss.com/social-share.js/1.0.16/css/share.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcss.com/social-share.js/1.0.16/js/jquery.share.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt; var $config = &#123;</span><br><span class="line">      url                 : window.location.href,// 网址，默认使用 window.location.href</span><br><span class="line">      source              : &#x27;&#x27;, // 来源（QQ空间会用到）, 默认读取head标签：&lt;meta name=&quot;site&quot; content=&quot;http://overtrue&quot; /&gt;</span><br><span class="line">      title               : &#x27;&#x27;, // 标题，默认读取 document.title 或者 &lt;meta name=&quot;title&quot; content=&quot;share.js&quot; /&gt;</span><br><span class="line">      description         : &#x27;&#x27;, // 描述, 默认读取head标签：&lt;meta name=&quot;description&quot; content=&quot;PHP弱类型的实现原理分析&quot; /&gt;</span><br><span class="line">      image               : &#x27;&#x27;, // 图片, 默认取网页中第一个img标签</span><br><span class="line">      sites               : [&#x27;qzone&#x27;, &#x27;qq&#x27;, &#x27;weibo&#x27;,&#x27;wechat&#x27;], // 启用的站点</span><br><span class="line">      disabled            : [&#x27;google&#x27;, &#x27;facebook&#x27;, &#x27;twitter&#x27;], // 禁用的站点</span><br><span class="line">      wechatQrcodeTitle   : &#x27;微信扫一扫：分享&#x27;, // 微信二维码提示文字</span><br><span class="line">      wechatQrcodeHelper  : &#x27;&lt;p&gt;微信里点“发现”，扫一下&lt;/p&gt;&lt;p&gt;二维码便可将本文分享至朋友圈。&lt;/p&gt;&#x27;,</span><br><span class="line">      target : &#x27;_blank&#x27; //打开方式</span><br><span class="line">  &#125;;</span><br><span class="line">  $(&#x27;.social-share&#x27;).share($config);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>然后找到<strong>themes\next\layout</strong>中的文件<strong>post.swig</strong>中的这部分代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;footer class=&quot;post-footer&quot;&gt;</span><br></pre></td></tr></table></figure><br>之前贴上以下代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.social_share and not is_index %&#125;</span><br><span class="line">   &#123;% include &#x27;../_partials/share/socialshare.swig&#x27; %&#125;</span><br><span class="line">  &lt;div class=&quot;social-share&quot;&gt;&lt;/div&gt;  </span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><br>在主题_config.yml文件中增加以下代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">social_share:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><br>保存修改后，然后hexo clean ，hexo g ，hexo d 即可看到点击效果。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>虽说分享功能不如我的预期完整,但是也是解决了baidu share组件和赞赏组件冲突的问题。<br>如果有时间,还有兴趣的时候会继续折腾Share.js这个组件。<br>然后希望有已经部署成功的人指点一二，不胜感激。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>于2018年12月14日修正并解决了该问题。</p><hr><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.oschina.net/p/share-js">一键转发工具 Share.js</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo自定义 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 朋友圈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo点击切换文字</title>
      <link href="/Hexo_click_change_text/"/>
      <url>/Hexo_click_change_text/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>最近在工作中,有幸发现到了<a href="https://www.cnblogs.com/cang12138/p/8992506.html">C# Aspose.Cells.dll Excel操作总结</a>这篇文章。<br>觉得页面的鼠标点击效果还不错,故F12查看了一下源码,迁移到了个人博客网站上面，下面简单介绍一下实现步骤。</p><blockquote><p>希望原作者不要太介意哈~  </p></blockquote><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>在目录<strong>themes\next\source\js\src</strong>下新建<strong>click_show_text.js</strong>文件，内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">//单击显示随机文字</span><br><span class="line">var a_idx = 0;</span><br><span class="line">jQuery(document).ready(function($) &#123;</span><br><span class="line">    $(&quot;body&quot;).click(function(e) &#123;</span><br><span class="line">        var a = new Array(</span><br><span class="line">          &quot;若是不专一，生活把你欺&quot;,</span><br><span class="line">          &quot;活得有点二，倾慕大白菜&quot;,</span><br><span class="line">          &quot;爱好只有三，辣和甜和酸&quot;,</span><br><span class="line">          &quot;生日九月四，吃鱼得吐刺&quot;,</span><br><span class="line">          &quot;广州年有五，喜欢吃排骨&quot;, </span><br><span class="line">          &quot;绰号为十六，断烟不断肉&quot;, </span><br><span class="line">          &quot;年龄二十七，就懂零和一&quot;, </span><br><span class="line">          &quot;身高一米八，身边缺个她&quot;,</span><br><span class="line">          &quot;体重一百九，木有女朋友&quot;,</span><br><span class="line">          &quot;二五得一十，爱就得一世&quot;, </span><br><span class="line">          &quot;智商不够百，不怕有人怼&quot;, </span><br><span class="line">          &quot;弱水有三千，一瓢可成仙&quot;, </span><br><span class="line">          &quot;打赏没过万，可悲又可叹&quot;,</span><br><span class="line">          &quot;赚它一个亿，回家去种地&quot;</span><br><span class="line">                );</span><br><span class="line">        var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]);</span><br><span class="line">        a_idx = (a_idx + 1) % a.length;</span><br><span class="line">        var x = e.pageX,</span><br><span class="line">        y = e.pageY;</span><br><span class="line">        $i.css(&#123;</span><br><span class="line">            &quot;z-index&quot;: 5,</span><br><span class="line">            &quot;top&quot;: y - 20,</span><br><span class="line">            &quot;left&quot;: x,</span><br><span class="line">            &quot;position&quot;: &quot;absolute&quot;,</span><br><span class="line">            &quot;font-weight&quot;: &quot;bold&quot;,</span><br><span class="line">            &quot;color&quot;: &quot;#FF69B4&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">        $(&quot;body&quot;).append($i);</span><br><span class="line">        $i.animate(&#123;</span><br><span class="line">            &quot;top&quot;: y - 180,</span><br><span class="line">            &quot;opacity&quot;: 0</span><br><span class="line">        &#125;,</span><br><span class="line">3000,</span><br><span class="line">function() &#123;</span><br><span class="line">    $i.remove();</span><br><span class="line">&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    setTimeout(&#x27;delay()&#x27;, 2000);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">function delay() &#123;</span><br><span class="line">    $(&quot;.buryit&quot;).removeAttr(&quot;onclick&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体要闪烁的文字，请自行替换。<br>然后在<strong>themes\next\layout\_layout.swig</strong>文件中 <strong>&lt;/body&gt;</strong>前添加以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--单击显示文字--&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/click_show_text.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后hexo clean ，hexo g ，hexo d 即可看到点击效果。</p><blockquote><p>注意：该事件可能和其余鼠标点击效果冲突。</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这是我自行做的页面优化，个人感觉还挺不错。</p><hr><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.cnblogs.com/cang12138/p/8992506.html">C# Aspose.Cells.dll Excel操作总结</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo自定义 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 鼠标效果 </tag>
            
            <tag> 文字切换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo宠物插件</title>
      <link href="/Hexo%E5%AE%A0%E7%89%A9%E6%8F%92%E4%BB%B6/"/>
      <url>/Hexo%E5%AE%A0%E7%89%A9%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>参考了<a href="https://blog.csdn.net/qq_43020645/article/details/82794092">hexo 增添宠物</a>这篇文章，但是其内容有相应的遗漏，故写下该文章，以作补充。</p><h1 id="完整步骤"><a href="#完整步骤" class="headerlink" title="完整步骤"></a>完整步骤</h1><p>在终端切换到你的博客的路径里，然后输入如下代码：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -save hexo-helper-live2d</span><br></pre></td></tr></table></figure><br>然后打开选择下面一个萌宠或萌妹子<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>如果你选择的是live2d-widget-model-wanko<br>则需要在命令行执行<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -save live2d-widget-model-wanko</span><br></pre></td></tr></table></figure></p><p><font color="#FF0000">参考文章中没有以上这一步。</font><br>然后再在 hexo 的 _config.yml中添加参数：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 140</span><br><span class="line">    height: 260</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br></pre></td></tr></table></figure><br>然后hexo clean ，hexo g ，hexo d 即可  </p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://blog.csdn.net/qq_43020645/article/details/82794092">hexo 增添宠物</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo自定义 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 宠物 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢乐斗地主出牌方式统计</title>
      <link href="/Fight-the-Landlord-Card-Type-Aanalysis/"/>
      <url>/Fight-the-Landlord-Card-Type-Aanalysis/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>在<a href="https://ddabb.github.io/wiki/from_list_S_take_N_numbers_make_sum_K/">集合S取出n个元素其和为K个数统计</a>这篇文章中提到了笛卡尔积的这种解法，但是以笛卡尔积的方式求解的时候，我中午点击运行，我晚上回来的时候才输出了168条牌型组合，然后一直没有响应，后来粗略估算了一下，需要在1.44E+18条左右数据中进行筛选，而选出总手牌数为20条相当于大海捞针，所以需要重新对问题进行思考。<br>先将问题明确定义——<strong>“在N张手牌中，可能的出牌方式有多少种？”</strong></p><h1 id="牌型分析"><a href="#牌型分析" class="headerlink" title="牌型分析"></a>牌型分析</h1><p>以地主20张手牌为例,20张手牌可能1个炸弹也没有，最多有5个炸弹。所以20张手牌,炸弹的取值范围的取值范围是[0,5];<br>而3张相同的牌带1张单牌也是四张牌,所以20张手牌，出三张相同的牌带一张单牌的次数也是[0,5];<br>如果手牌中存在66667777这样的四张牌,6667和7776这种打法和一个6炸和7炸是两种打牌的方式。<br>同样就算是以6,6,6,6,7,7,7,7这样的8张单牌一次打出去，欺负下家或上家手里只有3,4,5了也不是不可以。<br>所以66667777这样8张牌在不考虑输赢的情况下也是有很多种打法的。而巧的是，我们讨论的是不考虑输赢的情况。  </p><p>20张手牌有几种打出去的方式呢？    </p><blockquote><p>最多以20次单牌的形式打出去。<br>最多以10次对子的形式打出去。<br>最多以3次三连对的形式打出去。<br>依次类推，有了以下的表格：    </p></blockquote><p><img src="/Fight-the-Landlord-Card-Type-Aanalysis/牌型组合.png" alt="可能的牌型组合"></p><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><p>请下载<a href="Program.cs">C#版源代码</a>,放到对应的控制台去执行即可。<br>这里列举几个示例结果：<br>手牌数为1<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">手牌数为1时,可能的打法情况为:</span><br><span class="line">1:  牌型为：单张,每次消耗1,出了1次,共消耗掉1张牌</span><br><span class="line">所有牌型列举完成</span><br></pre></td></tr></table></figure><br>手牌数为2<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">手牌数为2时,可能的打法情况为:</span><br><span class="line">1:  牌型为：王炸,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">2:  牌型为：对子,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">3:  牌型为：单张,每次消耗1,出了2次,共消耗掉2张牌</span><br><span class="line">所有牌型列举完成</span><br></pre></td></tr></table></figure><br>手牌数为3<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">手牌数为3时,可能的打法情况为:</span><br><span class="line">1:  牌型为：3张牌,每次消耗3,出了1次,共消耗掉3张牌</span><br><span class="line">2:  牌型为：单张,每次消耗1,出了1次,共消耗掉1张牌    牌型为：王炸,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">3:  牌型为：单张,每次消耗1,出了1次,共消耗掉1张牌    牌型为：对子,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">4:  牌型为：单张,每次消耗1,出了3次,共消耗掉3张牌</span><br><span class="line">所有牌型列举完成</span><br></pre></td></tr></table></figure><br>手牌数为4<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">手牌数为4时,可能的打法情况为:</span><br><span class="line">1:  牌型为：炸弹,每次消耗4,出了1次,共消耗掉4张牌</span><br><span class="line">2:  牌型为：3张牌带1张,每次消耗4,出了1次,共消耗掉4张牌</span><br><span class="line">3:  牌型为：对子,每次消耗2,出了1次,共消耗掉2张牌    牌型为：王炸,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">4:  牌型为：对子,每次消耗2,出了2次,共消耗掉4张牌</span><br><span class="line">5:  牌型为：单张,每次消耗1,出了1次,共消耗掉1张牌    牌型为：3张牌,每次消耗3,出了1次,共消耗掉3张牌</span><br><span class="line">6:  牌型为：单张,每次消耗1,出了2次,共消耗掉2张牌    牌型为：王炸,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">7:  牌型为：单张,每次消耗1,出了2次,共消耗掉2张牌    牌型为：对子,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">8:  牌型为：单张,每次消耗1,出了4次,共消耗掉4张牌</span><br><span class="line">所有牌型列举完成</span><br></pre></td></tr></table></figure><br><strong>根据以上结果中的示例2和示例5可知，就算是7778也可以以777和8分两次打出去。</strong><br>手牌数为5<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">手牌数为5时,可能的打法情况为:</span><br><span class="line">1:  牌型为：5张牌的顺子,每次消耗5,出了1次,共消耗掉5张牌</span><br><span class="line">2:  牌型为：3张牌带1对,每次消耗5,出了1次,共消耗掉5张牌</span><br><span class="line">3:  牌型为：3张牌,每次消耗3,出了1次,共消耗掉3张牌    牌型为：王炸,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">4:  牌型为：对子,每次消耗2,出了1次,共消耗掉2张牌    牌型为：3张牌,每次消耗3,出了1次,共消耗掉3张牌</span><br><span class="line">5:  牌型为：单张,每次消耗1,出了1次,共消耗掉1张牌    牌型为：炸弹,每次消耗4,出了1次,共消耗掉4张牌</span><br><span class="line">6:  牌型为：单张,每次消耗1,出了1次,共消耗掉1张牌    牌型为：3张牌带1张,每次消耗4,出了1次,共消耗掉4张牌</span><br><span class="line">7:  牌型为：单张,每次消耗1,出了1次,共消耗掉1张牌    牌型为：对子,每次消耗2,出了1次,共消耗掉2张牌    牌型为：王炸,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">8:  牌型为：单张,每次消耗1,出了1次,共消耗掉1张牌    牌型为：对子,每次消耗2,出了2次,共消耗掉4张牌</span><br><span class="line">9:  牌型为：单张,每次消耗1,出了2次,共消耗掉2张牌    牌型为：3张牌,每次消耗3,出了1次,共消耗掉3张牌</span><br><span class="line">10:  牌型为：单张,每次消耗1,出了3次,共消耗掉3张牌    牌型为：王炸,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">11:  牌型为：单张,每次消耗1,出了3次,共消耗掉3张牌    牌型为：对子,每次消耗2,出了1次,共消耗掉2张牌</span><br><span class="line">12:  牌型为：单张,每次消耗1,出了5次,共消耗掉5张牌</span><br><span class="line">所有牌型列举完成</span><br></pre></td></tr></table></figure></p><p>限于篇幅，不再一一列举，根据程序列举出来的可能性如下图所示:   </p><p><img src="/Fight-the-Landlord-Card-Type-Aanalysis/手牌方式统计.png" alt="手牌为N时,可以的出牌方式统计"></p><p>可知有17张手牌时,可以有1729种出牌方式。<br>可知有20张手牌时,可以有4815种出牌方式。<br>也许基于此，就有了赌徒说搏一搏，单车变摩托的说法。</p><blockquote><font color="#FF0000">注意,20张手牌的出牌方式并不能达到4815种，一个12张牌的顺子是12张牌,而再来两个炸弹8张牌，加起来也是20张牌。但是去掉3~A的12张牌，只能算出"2222"一个炸弹了。即"12张牌的顺子和2个炸弹"虽说符合代码的逻辑，但是并不符合现实中的牌型。换句话说，参考资料中的代码并没有考虑这种情况。</font>  </blockquote><p><strong>问题是还有哪些牌型组合在一起能满足总手牌数，但是不符合现实中的牌型呢？</strong></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本以为在计算{1,2,3,4}中取出任意个数，与取出顺序无关时使用笛卡尔积的方式是很好的方式；结果在该问题中待处理数据竟达到了1.44E+18(1.44乘以10的18次方)条之多。<br>由此可知，问题并不是想当然就能够得到解决的，实践永远是检验真理的标准。<br>如果在每种牌型设置其对应的权重,所以在AI中的斗地主，如果能检测出手牌是10连对,或333444555666777带789JQ类型,得赶紧明牌不是么？</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://ddabb.github.io/from_list_S_take_N_numbers_make_sum_K/">集合S取出n个元素其和为K个数统计</a></li><li><a href="Program.cs">C#版源代码</a></li><li><a href="牌型组合.xlsx">牌型组合excel</a></li><li><a href="https://www.60points.com/combination/">m个球放到n个箱子中几种解法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 逻辑思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欢乐斗地主 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集合S取出n个元素其和为K个数统计</title>
      <link href="/from_list_S_take_N_numbers_make_sum_K/"/>
      <url>/from_list_S_take_N_numbers_make_sum_K/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>最近csrediscore的创作者在制作一个斗地主的机器人,他探讨性地给我出了一个问题——<strong>怎么样去统计手牌组合的可能性？</strong><br>该问题算是比较复杂的,在不考虑癞子的情况下有<strong>火箭、炸弹、单牌、对牌、连对、三张牌、三带一、单顺、双顺、三顺、飞机带翅膀、四带二</strong>等等牌型。<br>以地主20张手牌为例：</p><ul><li>20张手牌中能打出火箭次数在[0,1]中取值。</li><li>20张手牌中能打出炸弹次数在[0,5]中取值。</li><li>20张手牌中能打出单牌次数在[0,20]中取值——在不考虑其他玩家的情况下,最多出20次单牌。</li><li>依次类推…………<br>所以问题转换为<strong>每种牌型中选取任意次数构成N张手牌的情况有多少种？</strong></li></ul><h1 id="问题分解一"><a href="#问题分解一" class="headerlink" title="问题分解一"></a>问题分解一</h1><p>为了更加简单一点描述问题,我继续对问题进行了简化。<br><strong>从集合{1,2,3,4}中,取出一个元素和为10的个数统计</strong><br>比如集合为：{1,2,3,4}，和值为10；其中取法1,2,3,4和4,3,2,1等价。<br>因和值固定，且都为正数，所以每个元素的取出次数有限，可以得出结论如下图<br><img src="/from_list_S_take_N_numbers_make_sum_K/1234_10.png" alt="1,2,3,4可以取出次数分析">  </p><h1 id="问题分解二"><a href="#问题分解二" class="headerlink" title="问题分解二"></a>问题分解二</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">从集合</span><br><span class="line">&#123;0,1,2,3,4,5,6,7,8,9,10&#125;,</span><br><span class="line">&#123;0,2,4,6,8,10&#125;,</span><br><span class="line">&#123;0,3,6,9&#125;,</span><br><span class="line">&#123;0,4,8&#125;</span><br><span class="line">中各取出一个元素组成新集合S1,S1求和为10的个数统计。</span><br></pre></td></tr></table></figure><p>由图可知,可以取出的元素组合情况为:  11 *  6 * 4 * 3=792种。</p><p>最终只需要在这792种方案中选取出和为10的记录。<br>罗列792种方案的可行性的过程叫做求笛卡尔积,以下给出代码实现C#版代码实现过程。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p>求笛卡尔积扩展类<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public static class EnumerableEx</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 求集合的笛卡尔积</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public static IEnumerable&lt;IEnumerable&lt;T&gt;&gt; Cartesian&lt;T&gt;(this IEnumerable&lt;IEnumerable&lt;T&gt;&gt; sequences)</span><br><span class="line">    &#123;</span><br><span class="line">        IEnumerable&lt;IEnumerable&lt;T&gt;&gt; tempProduct = new[] &#123;Enumerable.Empty&lt;T&gt;()&#125;;</span><br><span class="line">        return sequences.Aggregate(tempProduct,</span><br><span class="line">            (current, sequence) =&gt;</span><br><span class="line">                (from accseq in current from item in sequence select accseq.Concat(new[] &#123;item&#125;)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>创建数字集合类<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">  /// 数字集合</span><br><span class="line">  /// &lt;/summary&gt;</span><br><span class="line">  public class DigitGroup</span><br><span class="line">  &#123;</span><br><span class="line">      /// &lt;summary&gt;</span><br><span class="line">      /// 元素</span><br><span class="line">      /// &lt;/summary&gt;</span><br><span class="line">      public int Value;</span><br><span class="line"></span><br><span class="line">      /// &lt;summary&gt;</span><br><span class="line">      /// 次数</span><br><span class="line">      /// &lt;/summary&gt;</span><br><span class="line">      public int Times;</span><br><span class="line"></span><br><span class="line">      /// &lt;summary&gt;</span><br><span class="line">      /// 和</span><br><span class="line">      /// &lt;/summary&gt;</span><br><span class="line">      public int Sum;</span><br><span class="line"></span><br><span class="line">      public DigitGroup(int value, int times)</span><br><span class="line">      &#123;</span><br><span class="line">          this.Value = value;</span><br><span class="line">          this.Times = times;</span><br><span class="line">          this.Sum = value * times;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      public override string ToString()</span><br><span class="line">      &#123;</span><br><span class="line">          return string.Format(&quot;&#123;0&#125;个&#123;1&#125;,和为&#123;2&#125;&quot;, Times, Value, Sum);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>控制台Program类<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">class Program</span><br><span class="line">  &#123;</span><br><span class="line">      static void Main(string[] args)</span><br><span class="line">      &#123;</span><br><span class="line">          List&lt;int&gt; numbers = new List&lt;int&gt; &#123;1, 2, 3, 4&#125;;</span><br><span class="line">          int Sum = 10;</span><br><span class="line">          var digitGroupList = GetChooseList(numbers, Sum);</span><br><span class="line"></span><br><span class="line">          var result = digitGroupList.Cartesian();</span><br><span class="line">          result = result.Where(chooses =&gt; chooses.Sum(choose =&gt; choose.Sum) == Sum);</span><br><span class="line">          PrintResult(result);</span><br><span class="line"></span><br><span class="line">          Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      private static IEnumerable&lt;IEnumerable&lt;DigitGroup&gt;&gt; GetChooseList(List&lt;int&gt; intList, int target)</span><br><span class="line">      &#123;</span><br><span class="line">          List&lt;List&lt;DigitGroup&gt;&gt; newList = new List&lt;List&lt;DigitGroup&gt;&gt;();</span><br><span class="line">          foreach (var beichushu in intList)</span><br><span class="line">          &#123;</span><br><span class="line">              List&lt;DigitGroup&gt; temp = new List&lt;DigitGroup&gt;();</span><br><span class="line">              var count = target / beichushu;</span><br><span class="line">              for (int i = 0; i &lt;= count; i++)</span><br><span class="line">              &#123;</span><br><span class="line">                  temp.Add(new DigitGroup(beichushu, i));</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              newList.Add(temp);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          return newList;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      private static void PrintResult(IEnumerable&lt;IEnumerable&lt;DigitGroup&gt;&gt; result)</span><br><span class="line">      &#123;</span><br><span class="line">          int index = 0;</span><br><span class="line">          foreach (var list in result)</span><br><span class="line">          &#123;</span><br><span class="line">              index += 1;</span><br><span class="line">              Console.Write(index + &quot;: &quot;);</span><br><span class="line">              foreach (var choose in list)</span><br><span class="line">              &#123;</span><br><span class="line">                  if (choose.Sum != 0)</span><br><span class="line">                  &#123;</span><br><span class="line">                      Console.Write(&quot; &quot; + choose + &quot;   &quot;);</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              Console.WriteLine();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><br>最终运行结果如下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1:  2个3,和为6    1个4,和为4</span><br><span class="line">2:  1个2,和为2    2个4,和为8</span><br><span class="line">3:  2个2,和为4    2个3,和为6</span><br><span class="line">4:  3个2,和为6    1个4,和为4</span><br><span class="line">5:  5个2,和为10</span><br><span class="line">6:  1个1,和为1    3个3,和为9</span><br><span class="line">7:  1个1,和为1    1个2,和为2    1个3,和为3    1个4,和为4</span><br><span class="line">8:  1个1,和为1    3个2,和为6    1个3,和为3</span><br><span class="line">9:  2个1,和为2    2个4,和为8</span><br><span class="line">10:  2个1,和为2    1个2,和为2    2个3,和为6</span><br><span class="line">11:  2个1,和为2    2个2,和为4    1个4,和为4</span><br><span class="line">12:  2个1,和为2    4个2,和为8</span><br><span class="line">13:  3个1,和为3    1个3,和为3    1个4,和为4</span><br><span class="line">14:  3个1,和为3    2个2,和为4    1个3,和为3</span><br><span class="line">15:  4个1,和为4    2个3,和为6</span><br><span class="line">16:  4个1,和为4    1个2,和为2    1个4,和为4</span><br><span class="line">17:  4个1,和为4    3个2,和为6</span><br><span class="line">18:  5个1,和为5    1个2,和为2    1个3,和为3</span><br><span class="line">19:  6个1,和为6    1个4,和为4</span><br><span class="line">20:  6个1,和为6    2个2,和为4</span><br><span class="line">21:  7个1,和为7    1个3,和为3</span><br><span class="line">22:  8个1,和为8    1个2,和为2</span><br><span class="line">23:  10个1,和为10</span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>  我现在依旧不知道20张手牌,各种牌型组合的可能性有多少种,但是将问题转化成{1,2,3,4}求和为10的这种方式已经将问题做了一个很好的分解。<br>  只需要将DigitGroup再做一下相应的替换就可以计算出可能的牌型有多少种，该问题的求解已经不在该文的范畴类，有兴趣的读者可以尝试解决一下。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.cnblogs.com/localhost2016/p/8668355.html">C# 用Linq的方式实现组合和笛卡尔积（支持泛型T）</a></li><li><a href="https://ddabb.github.io/Fight-the-Landlord-Card-Type-Aanalysis/">欢乐斗地主出牌方式统计</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 逻辑思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笛卡尔积 </tag>
            
            <tag> 斗地主 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo站点统计</title>
      <link href="/Hexo%E7%AB%99%E7%82%B9%E7%BB%9F%E8%AE%A1/"/>
      <url>/Hexo%E7%AB%99%E7%82%B9%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>页脚的总访问人数和单页访问人数显示不正常。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>查找<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>替换成<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>即可  </p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="http://busuanzi.ibruce.info/">busuanzi.ibruce.info</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo自定义 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 不蒜子 </tag>
            
            <tag> 统计数量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎来到60分加油站</title>
      <link href="/index/"/>
      <url>/index/</url>
      
        <content type="html"><![CDATA[<h3 id="逻辑思维"><a href="#逻辑思维" class="headerlink" title="逻辑思维"></a><a href="https://ddabb.github.io/categories/逻辑思维/">逻辑思维</a></h3><p><a href="https://ddabb.github.io/字典数排序/">字典数排序</a><br><a href="https://ddabb.github.io/人狼羊菜2012年版本/">人狼羊菜2012年版本</a><br><a href="https://ddabb.github.io/人狼羊菜2018年过程版本/">人狼羊菜2018年过程版本</a><br><a href="https://ddabb.github.io/人狼羊菜2018年对象版本/">人狼羊菜2018年对象版本</a>  </p><h3 id="IT经验"><a href="#IT经验" class="headerlink" title="IT经验"></a><a href="https://ddabb.github.io/categories/IT经验/">IT经验</a></h3><p><a href="https://ddabb.github.io/hexo_written_站点统计/">修正站点次数统计的bug</a><br><a href="https://ddabb.github.io/怎么学习C/">怎么学习C++</a><br><a href="https://ddabb.github.io/第一个AI应用/">第一个AI应用</a><br><a href="https://ddabb.github.io/如无必要勿增实体/">如无必要,勿增实体</a></p><h3 id="60分加油站"><a href="#60分加油站" class="headerlink" title="60分加油站"></a><a href="https://ddabb.github.io/categories/60分加油站/">60分加油站</a></h3><p><a href="https://ddabb.github.io/我们工作到底为了什么/">我们工作到底为了什么</a><br><a href="https://ddabb.github.io/放过犀利哥，别拿乞丐不当人/">放过犀利哥，别拿乞丐不当人</a><br><a href="https://ddabb.github.io/九一八：我们拿什么来爱国/">九一八：我们拿什么来爱国</a><br><a href="https://ddabb.github.io/效率极低人群之七大习惯/">效率极低人群之七大习惯</a> </p><h3 id="生活感悟"><a href="#生活感悟" class="headerlink" title="生活感悟"></a><a href="https://ddabb.github.io/categories/生活感悟/">生活感悟</a></h3><p><a href="https://ddabb.github.io/520的故事/">520的故事</a><br><a href="https://ddabb.github.io/浅谈倾听/">浅谈倾听</a><br><a href="https://ddabb.github.io/野蛮何以成为文明的幌子/">野蛮何以成为文明的幌子</a><br><a href="https://ddabb.github.io/那爱情经不起等待/">那爱情,经不起等待</a><br><a href="https://ddabb.github.io/虚荣心促进经济发展/">虚荣心，促进经济发展</a><br><a href="https://ddabb.github.io/TheManFromEarth/">这个男人来自地球——观后感</a>  </p><h3 id="关于本站点"><a href="#关于本站点" class="headerlink" title="关于本站点"></a>关于本站点</h3><p><a href="https://ddabb.github.io/建站原因/">建站原因</a><br><a href="https://ddabb.github.io/怎么样搭建一个博客网站/">怎么样搭建一个博客网站</a>  </p><h3 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h3><p><a href="https://ddabb.github.io/vio/">个人简历</a><br><a href="https://ddabb.github.io/contactme/">联系方式</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网站简介 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个AI应用</title>
      <link href="/%E7%AC%AC%E4%B8%80%E4%B8%AAAI%E5%BA%94%E7%94%A8/"/>
      <url>/%E7%AC%AC%E4%B8%80%E4%B8%AAAI%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>我的第一个AI应用是参考<a href="https://cloud.tencent.com/developer/article/1348205">实战：从0搭建完整 AI 开发环境写出第一个 AI 应用</a>和<a href="http://www.cnblogs.com/ms-uap/p/9123033.html">AI应用开发实战 - 从零开始配置环境</a>两篇文章进行的实施,故以该文做出相应的补充。</p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><h2 id="‘python’-不是内部或外部变量"><a href="#‘python’-不是内部或外部变量" class="headerlink" title="‘python’ 不是内部或外部变量"></a>‘python’ 不是内部或外部变量</h2><p>命令行执行<strong>python —version</strong>提示’python’ 不是内部或外部变量，在命令行中输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set PATH=&quot;C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python36_64&quot;;%PATH%</span><br></pre></td></tr></table></figure><br>之后,再输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure><br>输出版本为3.6.5<br>但是关闭命令行之后，再输入python —version时,依旧提示 <strong>‘python’ 不是内部或外部变量</strong>。<br>故在计算机→属性右键→高级系统设置→环境变量→选择<strong>PATH</strong>→点击新建→将<strong>C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python36_64</strong>添加→确定，之后再运行python —version，显示正常。</p><h2 id="saved-model-pb路径不对"><a href="#saved-model-pb路径不对" class="headerlink" title="saved_model.pb路径不对"></a>saved_model.pb路径不对</h2><p>单独参考第一篇文章进行配置时，发现没有<strong>samples-for-ai\export\saved_model.pb</strong>这个路径。<br>原因是没有启动<strong>examples\tensorflow\TensorflowExamples.sln</strong>这个解决方案，将MNIST项目设置为启动项目并运行,则会有samples-for-ai\export\saved_model.pb这个文件了。</p><h2 id="命令行无响应"><a href="#命令行无响应" class="headerlink" title="命令行无响应"></a>命令行无响应</h2><p>安装<strong>scipy-1.1.0</strong>和<strong>mxnet_cu90-1.2.0</strong>时,命令行一直无响应,解决方案是到<a href="https://pypi.org/project/scipy/1.1.0/">scipy-1.1.0</a>和<a href="https://pypi.org/project/mxnet-cu90/1.2.0/">mxnet-cu90 1.2.0</a>下载指定的文件，然后通过pip3命令来执行安装，其余问题也可以通过类似命令来解决。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install D:\scipy-1.1.0-cp36-none-win_amd64.whl</span><br><span class="line">pip3 install D:\mxnet_cu90-1.2.0-py2.py3-none-win_amd64.whl</span><br></pre></td></tr></table></figure><p>通过下载的文件可以得知，文件较大，命令行无法及时完成下载,所以<strong>需要有一定的耐心等待</strong></p><blockquote><p>注意需要将<strong>C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python36_64\Scripts</strong>添加到<strong>PATH变量</strong>中。</p></blockquote><h2 id="cudnn版本不对"><a href="#cudnn版本不对" class="headerlink" title="cudnn版本不对"></a>cudnn版本不对</h2><p>现在官网<a href="https://developer.nvidia.com/cudnn">https://developer.nvidia.com/cudnn</a>提供的cudnn版本是7.4.1,而微软示例代码中的cudnn版本是7.0.3,高版本的cudnn也会导致编译失败，需要找低版本的7.0.<em>的cudnn替换到<em>*C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin\cudnn64_7.dll</em></em>  </p><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p>解决了这部分问题之后,能正常展示winform界面，运行结果如下:<br><img src="/%E7%AC%AC%E4%B8%80%E4%B8%AAAI%E5%BA%94%E7%94%A8/正确.png" alt="正确识别"><br><img src="/%E7%AC%AC%E4%B8%80%E4%B8%AAAI%E5%BA%94%E7%94%A8/错误.png" alt="错误识别"><br>该部分涉及到训练模型是否足够多的问题，该文不做深入的研究。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>参考资料中提及的两篇文章都已经是做<strong>手写识别</strong>非常好的入门资料，该文仅仅是对这两篇文章做一个相应的补充，以作备忘。<br>另外我希望早日掌握以下技能</p><blockquote><p>识别<strong>开心消消乐</strong>的游戏界面，然后通过能够确定执行的最佳下一步，达到这个目的，我觉得我对人工智能的了解和我的AI编程就进入了新的层次了。</p></blockquote><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://cloud.tencent.com/developer/article/1348205">实战：从0搭建完整 AI 开发环境写出第一个 AI 应用</a></li><li><a href="http://www.cnblogs.com/ms-uap/p/9123033.html">AI应用开发实战 - 从零开始配置环境</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> IT经验 </category>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> python </tag>
            
            <tag> 手写识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的简历</title>
      <link href="/bio/"/>
      <url>/bio/</url>
      
        <content type="html"><![CDATA[<h1 id="个人基本信息"><a href="#个人基本信息" class="headerlink" title="个人基本信息"></a>个人基本信息</h1><ul><li><strong>姓名</strong> 刘石丰</li><li><strong>性别</strong> 男</li><li><strong>学历</strong> 本科</li><li><strong>专业</strong> 电子信息工程</li><li><strong>院校</strong> 中南林业科技大学</li><li><strong>政治面貌</strong> 人民群众</li><li><strong>所在城市</strong> 广东广州</li><li><strong>移动电话</strong> 18664891357</li><li><strong>电子邮件</strong> 417144452@qq.com</li><li><strong>Github</strong> @ddabb</li><li><strong>个人博客</strong> <a href="https://ddabb.github.io">https://ddabb.github.io</a></li><li><strong>求职状态</strong> 在职，无离职意向<h1 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h1>2013年07月-2015年10月 广州市睿明计算机科技有限公司<br>2015年11月-2016年10月 <a href="http://www.anta.com">中国（安踏）有限公司</a><br>2016年10月-2018年04月 <a href="http://www.boykee.com/">广州市铂铱柯信息科技有限公司</a><br>2018年04月-至今       <a href="http://www.homonia.com/">北京和信融慧信息科技有限公司</a>  <h1 id="擅长领域"><a href="#擅长领域" class="headerlink" title="擅长领域"></a>擅长领域</h1>业务:</li><li>RPA系统的设计开发  </li><li><a href="https://dynamics.microsoft.com/zh-cn/dynamics-crm/">CRM</a>系统的设计开发  </li><li><a href="https://baike.baidu.com/item/供应商管理系统">ESCM</a>系统的设计开发  </li></ul><p>框架：    </p><ul><li>基于<a href="https://dynamics.microsoft.com/zh-cn/dynamics-crm/">CRM</a>框架的 Web 系统设计开发</li><li>对于前端框架 <a href="http://cn.inspinia.cn">Inspina</a>、BootStrap、Jquery、<a href="https://www.layui.com/">Layui</a>等有使用经验</li></ul><p>技术：</p><ul><li>webform项目重构及性能调优</li><li>winform项目重构及性能调优</li><li>webapi,webservice</li><li>.net core和gensql结合开发  </li><li>IDE ：VS code,Visual Studio 2017,SSMS</li></ul><p>其他：  </p><ul><li><strong>DB：</strong> 主要使用sqlserver为主,对mysql,PostgreSQL,redis等数据库有基本的了解  </li><li><strong>消息队列：</strong> RabbitMq,Redis  </li><li><strong>开发语言：</strong> 主要使用C#和sql为主,用java、vb、python等语言做过基本功能。  </li><li><strong>版本管理:</strong> 主要使用SVN、Git、VSS</li><li><strong>反编译工具:</strong> dnspy/ILSpy，JetBrains dotPeek，.Net Reflector，Telerik JustDecompile</li></ul><h1 id="开发经历"><a href="#开发经历" class="headerlink" title="开发经历"></a>开发经历</h1><h2 id="ISSUE管理系统"><a href="#ISSUE管理系统" class="headerlink" title="ISSUE管理系统"></a>ISSUE管理系统</h2><ul><li><strong>时间：</strong> 一周</li><li><strong>描述：</strong> 统计公司项目的问题，统计分析问题进展情况。</li><li><strong>职责：</strong> 全栈</li><li><strong>角色：</strong> 全栈</li><li><strong>状态：</strong> 成功上线</li><li><strong>团队规模：</strong> 1人</li><li><strong>总结</strong><br> 该系统基于webform开发。<br> 该系统实现了多人多项目的状态管理,实现了ISSUE单据的assign，日报，周报，发送邮件通知等功能，对公司的项目管理质量有明显的提升，是个轻巧灵活的ISSUE管理系统。<br> 通过该系统掌握了window定时任务，发送邮件等基本功能。<br> 随着工作经验的丰富，发现有tower,jira等工具可以使用,比自己写的ISSUE管理系统相对而言要健壮,美观一些。<br> 该系统算是敏捷开发的一次不错的尝试。</li></ul><h2 id="SqlSever迁移到Mysql项目"><a href="#SqlSever迁移到Mysql项目" class="headerlink" title="SqlSever迁移到Mysql项目"></a>SqlSever迁移到Mysql项目</h2><ul><li><strong>时间：</strong> 一个月</li><li><strong>描述：</strong> 重构项目,目标是实现SqlServer数据库到Mysql数据库的迁移。</li><li><strong>职责：</strong> 全栈</li><li><strong>角色：</strong> 研发人员</li><li><strong>团队规模：</strong> 3人</li><li><strong>状态：</strong> 成功上线</li><li><strong>总结</strong><br> 该系统基于winform开发。<br> 该项目的目标是底层数据库并行支持mysql或者sqlserver,项目目标是600多个sql server的sql语句需要支持mysql版本的实现。<br> 通过该项目对比总结了mysql和sqlserver的语法和字段类型的差异，并温习了策略模式。<br> 因项目时间有限等原因,故没有采取将原生sql重构成EF实现的这种方式,若采用EF实现,可以更加便捷地继续向PostgreSQL等数据库进行迁移。 </li></ul><h2 id="搭建个人博客系统"><a href="#搭建个人博客系统" class="headerlink" title="搭建个人博客系统"></a>搭建个人博客系统</h2><ul><li><strong>时间：</strong> 三个月的业余时间</li><li><strong>描述：</strong> 该项目的目标是基于.net core构建一个博客系统,该博客系统具备编辑，分类，标签，评论等功能。</li><li><strong>职责：</strong> 全栈</li><li><strong>角色：</strong> 全栈</li><li><strong>团队规模：</strong> 1人</li><li><strong>项目状态：</strong> <strong><font color="#FF0000">既有失败,又有成功</font></strong></li><li><strong>总结</strong><br> 该系统基于.netcore开发。<br> 该系统失败的定义是我没有实现基于.netcore搭建出来一套具备编辑，分类，标签，评论等功能的博客系统的这个目标。<br> 该系统成功的部分在于基于该目标,我接触了很多之前没有接触的知识点。比如markdown,.netcore+dbfirst,PostgreSQL开发等等。<br> 在摸索该目标的过程中发现了Hexo这一套可以自己选择主题定制化的博客系统，并基于此搭建了一个属于自己的博客站点——<a href="https://ddabb.github.io">60分加油站</a>。<br> 该项目的经验是 <strong><font color="#FF0000">一定要记住项目立项的最重要的目标是什么。</font></strong>，该项目的主要目标是一个博客系统,而创建一个博客系统的目标是对个人知识进行一个归纳整理，现在已经可以通过Hexo框架对个人知识进行归纳整理，就无需要再制造新的车轮了。</li></ul><h1 id="自我评价"><a href="#自我评价" class="headerlink" title="自我评价"></a>自我评价</h1><ul><li>个人遵循<strong>“Do not repeat yourself”</strong>原则，想法设法将重复低效的事情交由系统执行。</li><li>认可开源分享理念,混迹于github,oschina等站点,并认为开源促进社会进步。乐于总结和分享个人经验。座右铭——<strong>不接触，不了解；不分享，不成长。</strong></li><li>对算法以及AI等方向比较感兴趣  </li><li>做事专一，热衷于在一个领域持续积累经验并有所作为。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 简历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如无必要,勿增实体</title>
      <link href="/%E5%A6%82%E6%97%A0%E5%BF%85%E8%A6%81%E5%8B%BF%E5%A2%9E%E5%AE%9E%E4%BD%93/"/>
      <url>/%E5%A6%82%E6%97%A0%E5%BF%85%E8%A6%81%E5%8B%BF%E5%A2%9E%E5%AE%9E%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>初次接触到 <strong><a href="https://baike.baidu.com/item/奥卡姆剃刀原理">如无必要,勿增实体</a></strong> 是在《西部世界》这部美剧中,今日早晨我在看<a href="https://baike.baidu.com/item/贝叶斯定理">贝叶斯定理</a>的相关文章的时候,恰巧又温习到这句话，想聊一下该语句是怎么影响我的生活的。</p><h1 id="以往"><a href="#以往" class="headerlink" title="以往"></a>以往</h1><p>参加新的工作以后,很多东西都发生了变化。比如以前是B/S项目，现在是C/S项目。因为B/S的逻辑代码都存在于服务器端,基本上不用考虑源码被不良居心的人使用。而C/S架构存在源码泄露的风险，故需要对产品的Dll做混淆处理。<br>如果要制作一个安装包,避免不了以下这些步骤：</p><ul><li>SVN签出最新代码</li><li>重新生成解决方案</li><li>Release目录内的dll拷贝到混淆工具指定路径</li><li>混淆结果拷贝到安装包制作路径</li><li>生成安装包发布到指定路径</li></ul><p>在window下的tortoisesvn 可视化操作下,选中指定目录签出文件,并不麻烦。<br>在visual studio 2017下,打开几十个项目重新编译通过就有点麻烦，毕竟项目越多,Visual Studio加载越慢。<br>在多个Release目录中,选中指定的待混淆文件拷贝对混淆工具的指定路径是重复低效事件。<br>再将混淆结果拷贝到安装包制作路径再制作安装包是重复低效事件。<br>再将安装包拷贝到阿里云的Ftp服务器是重复低效事件。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">原目录和目标目录的不断切换,不同工具的开启和调用,整个过程操作下来，顺利则30分钟，不顺利则一个小时。</span><br></pre></td></tr></table></figure><br>如果一天做两个不同版本的安装包，一天就一个多小时重复在安装包的制作之上。这并不能体现出我的工作价值。<br>鲁迅先生说过:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无端地空耗别人的时间,其实无异于谋财害命。</span><br></pre></td></tr></table></figure><br>若不想被谋财害命,需要作出一些改变。</p><h1 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h1><p>若是一年做一次安装包，写一个安装包部署手册就好了。一年之后再制作安装包的时候，参考该部署手册就能很好的解决问题了。<br>但是一周2~3次的安装包制作（不做解释^_^）,一周就有三四个小时用于制作安装包了。<br>《西部世界》好歹是一个机器人的世界,我公司又是做的RPA的产品,怎么自己还在做这种重复低效无意义的事情？  </p><ul><li>SVN可以通过命令行做签入签出的动作。</li><li>Visual Studio 2017 也可以通过命令行执行重新生成解决方案的动作。</li><li>拷贝文件到指定目录的代码网上比比皆是。</li><li>ftp也可以通过命令行执行上传下载文件的动作。</li></ul><p>我能不能制作一个工具,一键就把以上所有实现都给完成了？</p><h1 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h1><p>参考了一些资料，花了几天终于折腾出来了一个发布工具(Ftp命令行这部分未实现)，虽说这个发布并比不上docker的一件部署。<br>但是于我个人而言，却是近期以来<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如无必要，勿增实体</span><br></pre></td></tr></table></figure><br>的最佳实践，基于此工具,制作一个安装包的时间已经省到一半的时间了,这样也是<strong>惜时如金</strong>的一种表现吧。<br>这个基于Hexo主题的网站搭建也是一个<strong>Do not repeat yourself</strong>的实践,没有试图再去从零开始搭建一个网站框架，创作一个新型的电子垃圾也是迷途知返吧；<br>再引用一句鲁迅的名言<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">总之，我们要拿来。我们要或使用，或存放，或毁灭。  </span><br><span class="line">那么，主人是新主人，宅子也就会成为新宅子。  </span><br><span class="line">然而首先要这人沉着，勇猛，有辨别，不自私。  </span><br><span class="line">没有拿来的，人不能自成为新人，没有拿来的，文艺不能自成为新文艺。</span><br></pre></td></tr></table></figure></p><p><strong>没有拿来的,技术不能自成为新技术</strong>。不需要创造重复的轮子，但是手上也需要有适合自己的工具。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>奥卡姆剃刀原理也好,Dry原则也好,RPA也好,AI也好，甚至西部世界也好都说明了一个道理：<br><strong>人从事重复简单的工作,能带来的是熟练程度的提升，但是在更年轻力壮的人或者机器人面前,他并不具备足够的竞争力。</strong></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://blog.csdn.net/lixiangminghate/article/details/51350846">使用bat脚本编译VS工程</a></li><li><a href="http://www.cnblogs.com/136asdxxl/p/7410947.html">svn 命令行使用总结</a></li><li><a href="http://www.cnblogs.com/joean/p/4870486.html">C# 如何执行bat文件 传参数</a></li><li><a href="https://blog.csdn.net/qq_18808965/article/details/77882381">如何使用DOS命令通过FTP进行上传和下载</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> IT经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> 生活感悟 </tag>
            
            <tag> 命令行 </tag>
            
            <tag> 制作安装包 </tag>
            
            <tag> Svn签出 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人狼羊菜2018年对象版本</title>
      <link href="/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2018%E5%B9%B4%E5%AF%B9%E8%B1%A1%E7%89%88%E6%9C%AC/"/>
      <url>/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2018%E5%B9%B4%E5%AF%B9%E8%B1%A1%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>新建Transport类,因方法和属性都有对应的详细说明，故不再赘述。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 运输类</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class Transport</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 运输对象名称</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public string ObjectName &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 运输方向描述</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public string DirectionDescription &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 校验初始状态的函数</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    Func&lt;int, bool&gt; ValidInitStateFuc &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 校验结束状态的函数</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    Func&lt;int, bool&gt; ValidEndStateFuc &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 单次运输函数</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    Func&lt;int, int&gt; MoveFunc &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public Transport(string objectName, Func&lt;int, bool&gt; validInitState, Func&lt;int, bool&gt; validEndState,</span><br><span class="line">        Func&lt;int, int&gt; moveFunc)</span><br><span class="line">    &#123;</span><br><span class="line">        this.ObjectName = objectName;</span><br><span class="line">        this.ValidInitStateFuc = validInitState;</span><br><span class="line">        this.ValidEndStateFuc = validEndState;</span><br><span class="line">        this.MoveFunc = moveFunc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 运输方法</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;state&quot;&gt;初始状态&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;运输之后的状态&lt;/returns&gt;</span><br><span class="line">    public int Transfer(int state)</span><br><span class="line">    &#123;</span><br><span class="line">        if (ValidInitStateFuc(state))</span><br><span class="line">        &#123;</span><br><span class="line">            int result = MoveFunc(state);</span><br><span class="line">            if (ValidEndStateFuc(result))</span><br><span class="line">            &#123;</span><br><span class="line">                DirectionDescription = result &gt; 8 ? &quot;从A岸到了B岸。&quot; : &quot;从B岸到了A岸。&quot;;</span><br><span class="line">                Console.WriteLine(ObjectName + DirectionDescription);</span><br><span class="line">                return result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return state;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>调用方法如下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">static void Main(string[] args)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(&quot;transports 开始&quot;);</span><br><span class="line"></span><br><span class="line">    //判断是否合法状态</span><br><span class="line">    bool ValidEndState(int state) =&gt; state != 3 &amp;&amp; !(state &gt;= 6 &amp;&amp; state &lt;= 9) &amp;&amp; state != 12;</span><br><span class="line"></span><br><span class="line">    //判断人是否和羊在一起</span><br><span class="line">    bool IsPeopleWithSheep(int state) =&gt; state / 2 % 2 == 0 &amp;&amp; state &lt; 8 || state / 2 % 2 == 1 &amp;&amp; state &gt;= 8;</span><br><span class="line"></span><br><span class="line">    //判断人是否和狼在一起</span><br><span class="line">    bool IsPeopleWithWolf(int state) =&gt; !(state &gt;= 4 &amp;&amp; state &lt;= 11);</span><br><span class="line"></span><br><span class="line">    //判断人是否和菜在一起</span><br><span class="line">    bool IsPeopleWithGreens(int state) =&gt; state % 2 == 0 &amp;&amp; state &lt; 8 || state % 2 == 1 &amp;&amp; state &gt;= 8;</span><br><span class="line"></span><br><span class="line">    //运输人和青菜</span><br><span class="line">    int TransferPeopleWithGreens(int i) =&gt; i ^ 9;</span><br><span class="line"></span><br><span class="line">    //运输人和羊</span><br><span class="line">    int TransferPeopleWithSheep(int i) =&gt; i ^ 10;</span><br><span class="line"></span><br><span class="line">    //运输人和狼</span><br><span class="line">    int TransPeopleWithWolf(int i) =&gt; i ^ 12;</span><br><span class="line"></span><br><span class="line">    //运输人和狼</span><br><span class="line">    int TransPeople(int i) =&gt; i ^ 8;</span><br><span class="line">    Transport transport1 = new Transport(&quot;人和菜&quot;, IsPeopleWithGreens, ValidEndState, TransferPeopleWithGreens);</span><br><span class="line">    Transport transport2 = new Transport(&quot;人和羊&quot;, IsPeopleWithSheep, ValidEndState, TransferPeopleWithSheep);</span><br><span class="line">    Transport transport3 = new Transport(&quot;人和狼&quot;, IsPeopleWithWolf, ValidEndState, TransPeopleWithWolf);</span><br><span class="line">    Transport transport4 = new Transport(&quot;人&quot;, state =&gt; true, ValidEndState, TransPeople);</span><br><span class="line">    List&lt;Transport&gt; transports = new List&lt;Transport&gt; &#123;transport1, transport2, transport3, transport4&#125;;</span><br><span class="line">    int tempState = 0;</span><br><span class="line">    int EndState = 15;</span><br><span class="line">    while (tempState != EndState)</span><br><span class="line">    &#123;</span><br><span class="line">        foreach (var actionItem in transports)</span><br><span class="line">        &#123;</span><br><span class="line">            tempState = actionItem.Transfer(tempState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(&quot;transports 结束&quot;);</span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>运行结果如下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">transports 开始</span><br><span class="line">人和羊从A岸到了B岸。</span><br><span class="line">人从B岸到了A岸。</span><br><span class="line">人和菜从A岸到了B岸。</span><br><span class="line">人和羊从B岸到了A岸。</span><br><span class="line">人和狼从A岸到了B岸。</span><br><span class="line">人从B岸到了A岸。</span><br><span class="line">人和羊从A岸到了B岸。</span><br><span class="line">transports 结束</span><br></pre></td></tr></table></figure></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://ddabb.github.io/wiki/人狼羊菜2018年过程版本/">人狼羊菜2018年过程版本</a></li><li><a href="https://ddabb.github.io/wiki/人狼羊菜2012年版本/">人狼羊菜2012年版本</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 逻辑思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人狼羊菜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人狼羊菜2018年过程版本</title>
      <link href="/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2018%E5%B9%B4%E8%BF%87%E7%A8%8B%E7%89%88%E6%9C%AC/"/>
      <url>/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2018%E5%B9%B4%E8%BF%87%E7%A8%8B%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>假设开始人狼羊菜都是在A岸，目的是将人狼羊菜运输到B岸。<br>人,狼,羊，菜在A岸的标识为0,在B岸的标识位为1。经过枚举可以得出16种状态中不符合的有6种。<br>如图所示</p><p><img src="/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2018%E5%B9%B4%E8%BF%87%E7%A8%8B%E7%89%88%E6%9C%AC/人狼羊菜状态图.png" alt="人狼羊菜状态图"></p><p>根据以上描述的状态模式,可以将问题转化为  </p><ul><li>判断运输的终止状态是否合法</li><li>判断人和羊是否在一侧</li><li>判断人和菜是否在一侧</li><li>判断人和狼是否在一侧</li><li>执行人独自过河的动作</li><li>执行人和羊一起过河的动作</li><li>执行人和狼一起过河的动作</li><li>执行人和菜一起过河的动作</li></ul><p>新建MoveClass类<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 人狼羊菜运输类</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class MoveClass</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>依次对应的函数如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 状态合法</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;state&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public bool IsVaild(int state)</span><br><span class="line">&#123;</span><br><span class="line">    return state != 3 &amp;&amp; !(state &gt;= 6 &amp;&amp; state &lt;= 9) &amp;&amp; state != 12;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 人和羊在一起返回真</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;state&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public bool IsPeopleWithSheep(int state)</span><br><span class="line">&#123;</span><br><span class="line">    return ((state / 2) % 2 == 0 &amp;&amp; state &lt; 8) || ((state / 2) % 2 == 1 &amp;&amp; state &gt;= 8);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 人和菜在一起返回真</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;state&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public bool IsPeopleWithGreens(int state)</span><br><span class="line">&#123;</span><br><span class="line">    return state % 2 == 0 &amp;&amp; state &lt; 8 || state % 2 == 1 &amp;&amp; state &gt;= 8;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 人和狼在一起返回真</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;state&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public bool IsPeopleWithWolf(int state)</span><br><span class="line">&#123;</span><br><span class="line">    return !(state &gt;= 4 &amp;&amp; state &lt;= 11);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 只身一人过河</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;state&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public int MovePerson(int state)</span><br><span class="line">&#123;</span><br><span class="line">    return state ^ 8;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 人带羊过河</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;state&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public int MovePersonWithSheep(int state)</span><br><span class="line">&#123;</span><br><span class="line">    return state ^ 10;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 人带狼过河</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;state&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public int MovePersonWithWolf(int state)</span><br><span class="line">&#123;</span><br><span class="line">    return state ^ 12;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 人带菜过河</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;state&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public int MovePersonWithGreens(int state)</span><br><span class="line">&#123;</span><br><span class="line">    return state ^ 9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要的逻辑函数<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">public void Move()</span><br><span class="line">&#123;</span><br><span class="line">int state = 0, tempState;</span><br><span class="line">int EndState = 15;</span><br><span class="line">while (state != EndState)</span><br><span class="line">&#123;</span><br><span class="line">    tempState = MovePerson(state);</span><br><span class="line">    if (IsVaild(tempState))</span><br><span class="line">    &#123;</span><br><span class="line">        state = tempState;</span><br><span class="line">        Console.WriteLine(state &gt; 8 ? &quot;人独自一人从A岸到达B岸&quot; : &quot;人独自一人从B岸到达A岸&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (IsPeopleWithSheep(state))</span><br><span class="line">    &#123;</span><br><span class="line">        tempState = MovePersonWithSheep(state);</span><br><span class="line">        if (IsVaild(tempState))</span><br><span class="line">        &#123;</span><br><span class="line">            state = tempState;</span><br><span class="line">            Console.WriteLine(state &gt; 8 ? &quot;人带羊从A岸到达B岸&quot; : &quot;人带羊从B岸到达A岸&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (IsPeopleWithWolf(state))</span><br><span class="line">    &#123;</span><br><span class="line">        tempState = MovePersonWithWolf(state);</span><br><span class="line">        if (IsVaild(tempState))</span><br><span class="line">        &#123;</span><br><span class="line">            state = tempState;</span><br><span class="line">            Console.WriteLine(state &gt; 8 ? &quot;人带狼从A岸到达B岸&quot; : &quot;人带狼从B岸到达A岸&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (IsPeopleWithGreens(state))</span><br><span class="line">    &#123;</span><br><span class="line">        tempState = MovePersonWithGreens(state);</span><br><span class="line">        if (IsVaild(tempState))</span><br><span class="line">        &#123;</span><br><span class="line">            state = tempState;</span><br><span class="line">            Console.WriteLine(state &gt; 8 ? &quot;人带菜从A岸到达B岸&quot; : &quot;人带菜从B岸到达A岸&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>执行以上逻辑函数<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(&quot;MoveClass 开始&quot;);</span><br><span class="line">new MoveClass().Move();</span><br><span class="line">Console.WriteLine(&quot;MoveClass 结束&quot;);</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><br>最终运行结果如下:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MoveClass 开始</span><br><span class="line">人带羊从A岸到达B岸</span><br><span class="line">人独自一人从B岸到达A岸</span><br><span class="line">人带狼从A岸到达B岸</span><br><span class="line">人带羊从B岸到达A岸</span><br><span class="line">人带菜从A岸到达B岸</span><br><span class="line">人独自一人从B岸到达A岸</span><br><span class="line">人带羊从A岸到达B岸</span><br><span class="line">MoveClass 结束</span><br></pre></td></tr></table></figure></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://ddabb.github.io/人狼羊菜2018年对象版本/">人狼羊菜2018年对象版本</a></li><li><a href="https://ddabb.github.io/人狼羊菜2012年版本/">人狼羊菜2012年版本</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 逻辑思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人狼羊菜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈倾听</title>
      <link href="/%E6%B5%85%E8%B0%88%E5%80%BE%E5%90%AC/"/>
      <url>/%E6%B5%85%E8%B0%88%E5%80%BE%E5%90%AC/</url>
      
        <content type="html"><![CDATA[<p>这件事情发生于2014-4-21这一天。<br>我坐在小卖部休息，店家的2岁的小女孩看我手上拿着kindle，表示很好奇。</p><ul><li>叔叔，我要抱。  </li><li>好啊。  </li></ul><p>她坐到了我的腿上。  </p><ul><li>叔叔，这是什么啊？  </li></ul><p>小女孩指着我的kindle问道。  </p><ul><li>这是哥哥看书的，哥哥教你认字好不好啊？  </li><li>好啊！    </li><li>这个字读什么啊?    </li></ul><p>我指着屏幕上的“人”字问她</p><ul><li>人。  </li><li>那你是人不？  </li><li>是啊。  </li><li>那我是人不？  </li><li>是啊。  </li><li>那你爸爸妈妈是人不？  </li><li>是啊。  </li><li>那你哥哥呢？  </li><li>他不是，他是狗。  </li></ul><p>她为什么会觉得她哥哥是狗呢？我可以教教她人和狗的区别是什么。</p><ul><li>你有几只脚啊？  </li><li>两只脚。  </li><li>你哥哥呢？  </li><li>两只脚。  </li><li>那你哥哥是狗不？  </li><li>是啊！  </li></ul><p>我开始有点抓狂了，怎么小孩子这么犟呢？外面恰好走过一只小狗~</p><ul><li>那狗有几只脚呢？  </li><li>我不知道，我出去数数。      </li></ul><p>片刻，她开口了。</p><ul><li>三只。  </li><li>不对，你再数数。  </li><li>五只。  </li><li>不对，你再数数。  </li><li>七只。  </li></ul><p>我彻底的无语了，我无力吐槽了，这时候她还没有体育老师呢~    </p><ul><li>四只。  </li><li>是的，你哥哥几只脚？  </li><li>两只。  </li><li>狗有几只脚呢？  </li><li>四只。  </li></ul><p>我觉得我胜利在望了，我可以去华师大读书拿教师证了。最后一个问题就是我的杀手锏，让这个小女孩深刻地反省到自己的错误。  </p><ul><li>那你哥哥是狗不？  </li><li>是啊，我哥哥是属狗的！    </li></ul><p>剩下我在原地凌乱。</p><p>回想起来，这件事情于我依旧是一个很好的课程。沟通不是鱼死网破式地证明自己是对的，而是要真正地耐心地倾听对方的想法，这才是重要的。<br>最后编辑于 2018年10月25日22:07:38</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站原因</title>
      <link href="/%E5%BB%BA%E7%AB%99%E5%8E%9F%E5%9B%A0/"/>
      <url>/%E5%BB%BA%E7%AB%99%E5%8E%9F%E5%9B%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p> 前几天翻阅过去的日志，里面有一句话——如果没有去长城的想法，那就摸不到长城的砖块。<br> 换而言之，如果我不想搭建一个网站，那该网站就不会诞生。搭建网站总是有一个目标的，那我搭建该网站的目标是啥？  </p><h2 id="分享传播"><a href="#分享传播" class="headerlink" title="分享传播"></a>分享传播</h2><p>最初的原因是我有时间，我有工作经验，然后我钦佩一些圈子内的技术大牛，认同他们的开源理念，想追随他们的脚步，故有了最初的目标：</p><ul><li>搭建一个网站用于知识的分享和传播。</li></ul><h2 id="记录知识"><a href="#记录知识" class="headerlink" title="记录知识"></a>记录知识</h2><p>在搭建网站的过程中遇到的问题也越来越多，比如后台是Dbfirst还是code first？网站需不需要走Https?网站要不要引入Abp框架？富文本的编辑工具选择什么？怎么样做QQ登录？微信授权登录该怎么实现？在一步一步的功能实现过程中遇到了很多在工作中没有遇到过的问题，也在解决这些问题的过程中接触到了很多的之前未曾涉及到的知识点，所以搭建网站的过程中又新增了一个目标：</p><ul><li>记录我在搭建网站过程中走过的坑，希望同行有幸看到该文章，不再走相似的重复道路。</li></ul><h2 id="归纳整理"><a href="#归纳整理" class="headerlink" title="归纳整理"></a>归纳整理</h2><p>在做技术选型的时候，为了实现跨平台我选择了.net core。  </p><p>试图将Abp框架签入个人网站中时,发现<strong>Abp的确不适合小型项目</strong>，在接触<a href="https://www.cnblogs.com/kellynic/p/9712483.html">gensql网站快速开发</a>之后,觉得使用Abp创建个人博客估计年底都完成不了，这不符合我快速开发的预期理念，因此放弃了code first，选择了db first。</p><p>gensql工具适合于做后台管理的模板生成器,并没有提供可以选择的前端主题,故我决定自行选择一个UI主题,选择了以前公司工作时用到的<a href="http://www.inspinia.cn">inspinia</a>作为前端Ui,充分阐释了手上只有锤子，什么都是钉子的道理。  </p><p>确定好前端Ui之后,接下来就需要选择博客的富文本编辑器。在<br><a href="https://www.layui.com/">layui</a><br><a href="https://summernote.org/">summernote</a><br><a href="https://ueditor.baidu.com/website/index.html">ueditor</a>等编辑器中进行了试验，发现都得自行编写上传图片和文件的逻辑,界面展示效果也没有很好看,故选择放弃这三个编辑器。<br>不经意间接触了MarkDown的语法,了解到了<a href="https://github.com/Dynalon/mdwiki/releases">MDwiki</a>能快速搭建博客站点，展示效果比在inspinia中的文章的文章页面效果要好,但是该MDwiki在手机端的展示效果并没有符合我的预期。  </p><p>最终有幸接触了<a href="https://www.cnblogs.com/blogjun/articles/8289977.html?from=timeline">使用Hexo搭建个人博客（二）-安装部署</a>和<a href="https://github.com/zthxxx/hexo-theme-Wikitten/blob/master/README_zh-CN.md">hexo-theme-Wikitten</a>的配置教程。参考这两篇文章终于搭建了<a href="https://ddabb.github.io">60分小站</a>这个站点。  </p><p>由此可见，整个搭建个人博客的过程中我走了不少的弯路，如果最先接触最后的两篇文章就不要费劲这么多周折才搭建好一个个人博客网站。尽管不少曲折,但也因此我也学到了不少东西。之前并没有在博客园编写个人博客的习惯，毕竟博客园的编辑器相对MarkDown这种语法来讲显得比较臃肿。该网站又多出了一个作用：</p><ul><li>养成做笔记的习惯,归纳整理个人的知识库，有利于日后的检索和温习。</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.cnblogs.com/kellynic/p/9712483.html">gensql网站快速开发</a></li><li><a href="http://www.inspinia.cn">inspinia</a></li><li><a href="https://summernote.org/">summernote</a></li><li><a href="https://www.layui.com/">layui</a></li><li><a href="https://ueditor.baidu.com/website/index.html">ueditor</a></li><li><a href="https://github.com/Dynalon/mdwiki/releases">MDwiki</a></li><li><a href="https://www.cnblogs.com/blogjun/articles/8289977.html?from=timeline">使用Hexo搭建个人博客（二）-安装部署</a></li><li><a href="https://github.com/zthxxx/hexo-theme-Wikitten/blob/master/README_zh-CN.md">hexo-theme-Wikitten</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 关于博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字典数排序</title>
      <link href="/%E5%AD%97%E5%85%B8%E6%95%B0%E6%8E%92%E5%BA%8F/"/>
      <url>/%E5%AD%97%E5%85%B8%E6%95%B0%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="题目内容"><a href="#题目内容" class="headerlink" title="题目内容"></a>题目内容</h2><p>给定一个整数 n, 返回从 1 到 n 的字典顺序。</p><p>例如，</p><p>给定 n =1 3，返回 [1,10,11,12,13,2,3,4,5,6,7,8,9] 。</p><p>请尽可能的优化算法的时间复杂度和空间复杂度。 输入的数据 n 小于等于 5,000,000。  </p><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><p>初次接触这题,我试图用快速排序,堆排序等排序方式去解决该问题，但是程序运行之后，要么内存不足,要么复杂度达不到时间要求。<br>经过两天的瞎折腾，我突然茅塞顿开，找到了以下规律。  </p><p>如果n&lt;10,则1后面的数字为2，否则1后面的数组为10。  </p><p>如果n&lt;20,则2后面的数字为3，否则1后面的数组为20。  </p><p>如果n&lt;30,则3后面的数字为4，否则1后面的数组为30。  </p><p>经总结如下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果m&lt;n</span><br><span class="line">   如果 m*10&lt;=n</span><br><span class="line">   则下一位为m*10</span><br><span class="line">   否则下一位为m+1;</span><br><span class="line">否则</span><br><span class="line">   结束。</span><br></pre></td></tr></table></figure></p><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><p>创建二叉树的类<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 二叉树</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public class TreeNode</span><br><span class="line">&#123;</span><br><span class="line">    public static int Globalvalue = 1;</span><br><span class="line"></span><br><span class="line">    public int value;</span><br><span class="line">    public TreeNode leftNode;</span><br><span class="line">    public TreeNode rightNode;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 构造函数</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;x&quot;&gt;&lt;/param&gt;</span><br><span class="line">    public TreeNode(int x)</span><br><span class="line">    &#123;</span><br><span class="line">        value = x;</span><br><span class="line">        int leftvalue = x * 10;</span><br><span class="line">        int rightvalue = x + 1;</span><br><span class="line">        if (leftvalue &lt;= Globalvalue)</span><br><span class="line">        &#123;</span><br><span class="line">            leftNode = new TreeNode(leftvalue);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (rightvalue &lt;= Globalvalue &amp;&amp; rightvalue % 10 != 0)</span><br><span class="line">        &#123;</span><br><span class="line">            rightNode = new TreeNode(rightvalue);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>二叉树的前序遍历<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 前序遍历</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;tn&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;result&quot;&gt;&lt;/param&gt;</span><br><span class="line">public void preOrder(TreeNode tn, List&lt;int&gt; result)</span><br><span class="line">&#123;</span><br><span class="line">    result.Add(tn.value);</span><br><span class="line">    if (tn.leftNode != null)</span><br><span class="line">    &#123;</span><br><span class="line">        preOrder(tn.leftNode, result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (tn.rightNode != null)</span><br><span class="line">    &#123;</span><br><span class="line">        preOrder(tn.rightNode, result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>调用前序排序方法。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 执行排序</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;n&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public IList&lt;int&gt; LexicalOrder(int n)</span><br><span class="line">&#123;</span><br><span class="line">    TreeNode.Globalvalue = n;</span><br><span class="line">    TreeNode tn = new TreeNode(1);</span><br><span class="line">    List&lt;int&gt; result = new List&lt;int&gt;();</span><br><span class="line">    preOrder(tn, result);</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该方案并不是通过测试用例耗时最短的方法，毕竟不构造TreeNode类速度会更快，但是恰好复习了一下大学时候所学的二叉树遍历的相关知识,也是挺好的。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://leetcode-cn.com/submissions/detail/1564059/">字典序排数解题过程</a></li><li><a href="https://leetcode-cn.com/problems/lexicographical-numbers/description/">386. 字典序排数</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 逻辑思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向思维 </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这个男人来自地球——观后感</title>
      <link href="/TheManFromEarth/"/>
      <url>/TheManFromEarth/</url>
      
        <content type="html"><![CDATA[<p>被人推荐了这个电影,看介绍时发现该这电影已经上映很久了。该电影是跟朋友独处一室时在网上找的资源看的，结果朋友看了该电影有点昏昏欲睡，说这电影这么垃圾，你也推荐给我看，还不如看《金刚狼2》。</p><p><strong>电影——萝卜白菜，各有所爱</strong></p><p>我看了一些低成本的电影，比如说《九死》，《这个男人来自地球》等，都基本上是一个房间内的故事。后者比前者的成本低许多，但是后者所要表达的思想要比前者深刻得多。</p><p>当你朋友说他是山顶洞人，活了14000年，家里的画是梵高亲手送给他的，他曾和哥伦布一起远航，听释迦牟尼宣扬佛教，然后他创建了基督教，因为每过十年别人发现他容颜从未老去，所以他才选择逃离现在居住的地方换个地方生活，你信不信？</p><p>该影片是一个悬疑电影，生物学家，历史学家，心理学家都试图证明主角john在说谎，我也在一步一步的思考男主是否在撒谎。但是等到大家都觉得john说的话无懈可击的时候，他才告诉朋友们这仅仅是我跟你们开的一个玩笑。最后的结局证明了john没有撒谎，但是该结局已经不重要了。</p><p>我个人觉得电影是否是佳作就是是否会引人思考生活的意义。</p><p>你在跟她人交流的时候是否会顾忌他人的感受?伊迪丝是虔诚的基督教教徒，然后约翰说我就是上帝。然后伊迪丝拳头紧握，就像是要扑上去揍他一样。<br>当威利掏出手枪要结束约翰的生命的时候，大家都认为他疯狂。但是大家并不知道他刚经历了亡妻之痛。常言道，说者无意，听者有心，我刚经历丧妻之痛，你却说你长生不老，自然会内心不平衡。</p><p>假如给你长生不老的机会，而且给你一个不老容颜，然后每10年就搬一次家，你会怎么样面对这件事情？</p><p>假如你朋友说出荒诞离奇的事情，甚至完全超出你的认知，比如他是穿越回来的说50年后的世界已经实现了星际穿越或者意念编程,你会不会相信？</p><p>假如你付出的努力都一直得不到肯定，一直被误解，你是否会想尽一切办法去证明自己？</p><p>假如说度日如年，那么你怎么度过你剩下的1万年，2万年？</p><p>地球上不会存在太多活了14000年的动植物。但是能活14000多天（38岁左右）的人类却多的去了。每个人在生活中也会遇到属于他（她）的艺术家梵高，冒险家哥伦布，导航者释迦牟尼。男主历经时代变迁，最终却一直是孤独一人。由于人的相似性，人找到可以陪伴自己一生的伴侣的成功率高了很多。</p><p>幼儿园，小学，初中，高中，大学，社会等各种不同的场合，聚散无常。初识时回眸一笑，毕业时车站送别，从此再也没见过面了。每个人都会有自己新的旅程了，短信，邮件，电话等等都是可以联系的方式，有了各自的生活之后，然后联系就渐渐地少了。</p><p>14000年能做什么？无人汽车，无人飞机，3D投影编程等等早就是见怪不怪的东西；癌症，艾滋病等等都是早已经解决的问题。换心脏就跟换内存条一样简单。结合最近几个世纪来看，在14000年的时间里，科技可以取得好几个质变的发展，甚至可以通过拷贝复制的方式来学习新的知识。</p><p>估计14000年之后，不变的就是感情的产生机制了，还是会像长出了牙齿,树枝发芽，头发变白那样处于不经意间发生了。</p><p>且不谈14000年之后你会怎么样？<strong>14000天之后你会怎么样呢？</strong></p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> 电影观后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎么样搭建一个博客网站</title>
      <link href="/%E6%80%8E%E4%B9%88%E6%A0%B7%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"/>
      <url>/%E6%80%8E%E4%B9%88%E6%A0%B7%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>这篇文章的最后编辑时间是2018年11月2日,在整理QQ空间的日志的时候发现的，QQ日志的标题很皮——<strong>有钱以后再弄这个。。。</strong><br>点击进去一看发现是一个怎么搭建个人网站的日志，我觉得这套用一句话叫做<strong>梦想的实现会迟到，但是从不会缺席。</strong><br>虽说该文的建站步骤和我搭建网站的过程并不相同，但是也是就是该文的思想已经埋在了我的潜意识中，只不过在恰当的时候表达出来了，也许是真的有钱了吧(~_~)(有钱就不会挂在github上面了…),以该文作为博客首页的文章也是最适合不过了。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>首先，你需要了解一些相关知识。你需要知道什么叫做IP地址，什么叫域名，静态网页和动态网页的区别等等。你最好能了解一下什么是asp，什么是php，什么是数据库，虚拟主机的原理，IIS或Apache的工作方式。如果你的XP里有IIS，你甚至可以实践架设一下服务器。有关的介绍网上遍地都是，这里就不再说了。这些知识你了解得越多越有助于下一步计划。</p><p>然后，准备好人民币。个人网站对空间的要求不高，一年大概100元到300元。最好把钱存在银行卡上并办理网上银行手续，目前招行和工商行的卡网上交易最通用。如果你曾有过网上购物的经历更好，网上买虚拟主机和在淘宝上买充气娃娃步骤几乎一样，前者还要简单一些，因为你不需要到邮局去取货。</p><h1 id="选择空间商"><a href="#选择空间商" class="headerlink" title="选择空间商"></a>选择空间商</h1><p>现在网上的空间商太多了，选择一个好的空间商是很麻烦的事。你可以到一些站长论坛上去看看大家的建议。自己选择空间商时注意一定要选择正规的运营商。请务必注意查看这些空间商的主页上是否有完整的营业执照和许可证信息，是否有足够多的售前售后服务联系方式，是否有丰富全面的FAQ，是否有主机租用托管服务和机房介绍，虚拟主机是否可以免费试用。一个正规的虚拟主机运营商应该像这个样子。<br>接下来你需要选择主机型号。如果仅仅是想要建一个私人Blog，一个100MB的动态网页空间完全足够了。我还在我的空间里放了一些其它的东西，因此买了200MB。有兴趣的话你可以看一下其它参数，比如流量限制、并发连接数、CPU资源分配等等，但我觉得这些限制对于个人网站来说完全够了。你可以多了解一下子域名、子目录绑定等功能，以后可能会用得着。购买前还可以了解一下web管理功能，一些如自定义错误信息、RAR在线打包/解压、文件/目录保护之类的功能很有用。不明白的问题一定要问客服，顺便看一看客服的质量。<br>注意虚拟主机一般分为两大类，asp的和php的。前者的服务器一般是Windows系统的，后者一般是Linux系统。如果你不太熟悉Linux环境，建议你还是选用asp的主机。两种平台下都有很不错的私人Blog系统。我的这个空间就是asp的，使用的PJBlog的系统。php下最流行的Blog系统应该是WordPress，这个网站就是用的它。如果不深入研究源代码的话，两者区别表面上不大。这些私人Blog系统都可以在网上免费下载，然后上传到你的空间上使用。<br>这个月我准备把空间搬到maiteng.net，因为PJBlog官方网站就在用它。</p><h1 id="购买域名和空间"><a href="#购买域名和空间" class="headerlink" title="购买域名和空间"></a>购买域名和空间</h1><p>拥有一个顶级域名是一件很酷的事情，以后你的朋友就可以通过<a href="http://www.xxxxxxxx.com">www.xxxxxxxx.com</a>来访问你的网站了，比如我就买了<a href="http://www.matrix67.com">matrix67.com</a>作为我的域名。有时候会出现域名已经被注册过的情况，这就要发挥一下你的想象力和创造力了。举个例子，假如dd牛发现<a href="http://www.dd.com">dd.com</a>、<a href="http://www.dd.net">dd.net</a>和<a href="http://www.dd.cn">dd.cn</a>都没了，不妨申请一个<a href="2d.com">2d.com</a>，或者<a href="http://www.double-d.com">double-d.com</a>；如果这些都没有了，再试试<a href="http://www.dee-dee.com">dee-dee.com</a>；如果<a href="http://www.dee-dee.com">dee-dee.com</a>也被占了，<a href="http://www.dexter-sister.com">dexter-sister.com</a>也不错啊（看过德克斯特的实验室么）。<br>下次MM过生日时不妨送给她一个顶级域名，名字就是你对她的爱称。再买上一个空间，里面放一个情侣博客，你们俩都可以更新。时不时地写几句甜言蜜语上去等MM来看，首页不停地滚动显示“早点睡觉”、“注意身体”，域名到期前保证把MM骗到手。<br>目前.com域名68元一年，.cn域名5元一年。加上一个100MB到200MB的asp空间大概100到300元，少去一次红灯区就可以搞一年的网站了。域名和空间一般在同一个地方一起买，这样你可以不用操心域名绑定的问题，并且往往有一些优惠。正式付款前你有几天的试用时间，你可以传一个探针上去测试一下，再试着安装自己喜欢的Blog系统，确保没有任何问题后再付款。</p><h1 id="以后要做的事情"><a href="#以后要做的事情" class="headerlink" title="以后要做的事情"></a>以后要做的事情</h1><p>搭建好Blog后，你可以做一些简单的事情突出一点个性的地方，比如安装几个自己喜欢的皮肤，做一个简单的网站入口。然后把网址提交到搜索引擎的网站登录入口，你的网站就可以在一个星期内被搜索引擎收录。申请一个免费的网站流量分析服务很有必要，它可以告诉你很多信息，比如网站每天的访问数、每个访客平均访问的页面数、访客都是从哪里链接过来的。你可以分析这些数据并适当改进你的网站。Google分析和cnzz.com都是不错的免费统计服务。最后还有一件很麻烦的事就是备案。你的空间商很可能有代备案服务，否则你需要自己备案。提交备案信息后需要等一个月左右的时间，然后把备案证书放到空间的指定位置并在网站上做好链接就行了。再过几个月，你可以了解一下SEO、Adsense之类的东西。把你购买域名和空间的日期牢牢地记在心里，以后别忘了续费，否则域名被抢了看你找谁哭去。<br>拥有一个自己的网站空间后，你可能会像我一样突然对搞网站感兴趣。建议你看一看你的Blog的源代码，初步学习一下asp或php语言。你可以发现你能用它们做出很多不可思议的事情。</p><p>最后不得不说，这篇文章并没有任何实质性的东西，相关名词还是要麻烦大家自己搜索。<br>预祝大家建站顺利。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>愿大家温故一下埋藏在心底的梦想，也试图去实现一下，最后会成功的。</p>]]></content>
      
      
      <categories>
          
          <category> 关于博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
            <tag> 关于博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人狼羊菜2012年版本</title>
      <link href="/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2012%E5%B9%B4%E7%89%88%E6%9C%AC/"/>
      <url>/%E4%BA%BA%E7%8B%BC%E7%BE%8A%E8%8F%9C2012%E5%B9%B4%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>这是我初接触编程时编写的Java代码,待有足够时间会重构该代码。  </p><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">假设开始人狼羊菜都是在A岸，目的是将人狼羊菜运输到B岸。</span><br><span class="line">*/</span><br><span class="line">public class Thing &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int i = 0, x, k = 0;</span><br><span class="line">while (i != 15) &#123;</span><br><span class="line">k = 0;</span><br><span class="line">if (((i % 2 == 0) &amp;&amp; i &lt; 8) || (i % 2 == 1 &amp;&amp; i &gt;= 8)) &#123;</span><br><span class="line">x = i ^ 9;</span><br><span class="line">if (x != 3 &amp;&amp; !(x &gt;= 6 &amp;&amp; x &lt;= 9) &amp;&amp; x != 12) &#123;</span><br><span class="line">i = x;</span><br><span class="line">k++;</span><br><span class="line">if(i&gt;8)</span><br><span class="line">System.out.println(&quot;人带菜从A岸到达B岸&quot;);</span><br><span class="line">else</span><br><span class="line">System.out.println(&quot;人带菜从B岸到达A岸&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (((i / 2) % 2 == 0 &amp;&amp; i &lt; 8) || ((i / 2) % 2 == 1 &amp;&amp; i &gt;= 8)) &#123;</span><br><span class="line">x = i ^ 10;</span><br><span class="line">if (x != 3 &amp;&amp; !(x &gt;= 6 &amp;&amp; x &lt;= 9) &amp;&amp; x != 12) &#123;</span><br><span class="line">i = x;</span><br><span class="line">k++;</span><br><span class="line">if(i&gt;8)</span><br><span class="line">System.out.println(&quot;人带羊从A岸到达B岸&quot;);</span><br><span class="line">else</span><br><span class="line">System.out.println(&quot;人带羊从B岸到达A岸&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (!(i &gt;= 4 &amp;&amp; i &lt;= 11)) &#123;</span><br><span class="line">x = i ^ 12;</span><br><span class="line">if (x != 3 &amp;&amp; !(x &gt;= 6 &amp;&amp; x &lt;= 9) &amp;&amp; x != 12) &#123;</span><br><span class="line">i = x;</span><br><span class="line">k++;</span><br><span class="line">if(i&gt;8)</span><br><span class="line">System.out.println(&quot;人带狼从A岸到达B岸&quot;);</span><br><span class="line">else</span><br><span class="line">System.out.println(&quot;人带狼从B岸到达A岸&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">x = i ^ 8;</span><br><span class="line">if (x != 3 &amp;&amp; !(x &gt;= 6 &amp;&amp; x &lt;= 9) &amp;&amp; x != 12) &#123;</span><br><span class="line">i = x;</span><br><span class="line">k++;</span><br><span class="line">if(i&gt;8)</span><br><span class="line">System.out.println(&quot;人独自一人从A岸到达B岸&quot;);</span><br><span class="line">else</span><br><span class="line">System.out.println(&quot;人独自一人从B岸到达A岸&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><pre><code>人带羊从A岸到达B岸人独自一人从B岸到达A岸人带菜从A岸到达B岸人带羊从B岸到达A岸人带狼从A岸到达B岸人独自一人从B岸到达A岸人带羊从A岸到达B岸</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该代码混乱不堪，类命名，变量命名都不符合编码规范,写出来的代码比反编译之后的更难阅读,抽时间会给出重构后的版本。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://ddabb.github.io/wiki/人狼羊菜2018年对象版本/">人狼羊菜2018年对象版本</a></li><li><a href="https://ddabb.github.io/wiki/人狼羊菜2018年过程版本/">人狼羊菜2018年过程版本</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 逻辑思维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人狼羊菜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>九一八：我们拿什么来爱国</title>
      <link href="/%E4%B9%9D%E4%B8%80%E5%85%AB%EF%BC%9A%E6%88%91%E4%BB%AC%E6%8B%BF%E4%BB%80%E4%B9%88%E6%9D%A5%E7%88%B1%E5%9B%BD/"/>
      <url>/%E4%B9%9D%E4%B8%80%E5%85%AB%EF%BC%9A%E6%88%91%E4%BB%AC%E6%8B%BF%E4%BB%80%E4%B9%88%E6%9D%A5%E7%88%B1%E5%9B%BD/</url>
      
        <content type="html"><![CDATA[<p>今天，是 GEMS 8 G++ Framework 0.3 正式内部发布的日子。　　</p><p>　　或许是今天日子的特殊，让我想起了一年前一个特殊的会议。圆桌旁坐了不到20个人，主持会议的是一个中年人，他说的第一句话让我心头不禁一颤，他说：“在中国，所有真正在做计算机辅助设计核心的人，都坐在这里了。”郎咸平说过，国民经济之主导在制造业，制造业之关键在设计和创新。他的其它言论我并不完全同意，而这句话却是公认的事实。是的。计算机辅助设计核心，工业设计之核心，泱泱大国之未来工业命脉，竟脆弱地把握在了这群人的手里。而在这之后，这唯一的从最底层开始掌握完全的知识产权的核心，沉甸甸地落在了我和我周围的一群人的手中。</p><p>　　似乎有很多理论在反复说明一个道理：中国要真正地腾飞，要有民族制造业；民族制造业要能腾飞，必须有独立的设计支撑、设计智慧和设计积累。这些话让我熟悉得都能默背，而这些大道理之外，我似乎感受到了另一种力量在支持和推动：我们在做一件“明知不可为而为之”的事情，因为这个国家经济的未来或多或少地把握在了我们手中，而这种分量好像手持了一个杠杆，要撬动千钧之重。那种无力感让人压抑、窒息。在这个业界中，成百上千的人感受到这种无奈：一个产业或将在一个庞大的国家凋零时最后的挣扎。因此，人们分成了两种，左派和右派：激进地抗争和放弃并投降。我耳中甚至现在都能听见很多人热心的劝慰，“你们放弃吧，中国战胜不了外国强大的设计系统的”。而此时此刻，我眼中含着泪水，思念着远方的亲人。在电话中，病榻上的外祖父叮嘱我，让我不要惦记他，在国外珍惜任何学习的机会，我们已经三代人了，总有一代会追赶上。是啊，三代人了。我小时候，祖辈们用木头做模型，父辈用图版设计模型，他们能做飞机，而到了第三代，于情于理，我完没有投降的可能。因为投降，就是否定了我一家人用整个生命所做的事业，就是否定了我自己存在的必要。因为我知道，他们的生命和事业需要我来延续，只有这样，即使他们离开，也能达到真正的不朽。我也不可以投降，因为从孙老板、到雍老师他们、再到我们，他们都不是为了一己私利，而是在大家需要他们的时候，选择了一件“不可为而为之”的事情，而这三代人的愿望也还要继续。</p><p>　　回想往事不禁怅惘，而不知怎地，我此刻却很是感激降生在这个和平但却充满了矛盾、苦难和冲突的国度。“为什么我的眼中常含泪水，因为我爱得深沉”：这种复杂的心境是坐在我旁边整日闲散玩乐做着自己觉得“interesting”的事情的外国人体味不到的人生阅历。爱国太过抽象，但是我却深沉地爱着我的家人。我不是经典意义的孝顺孩子，我做得不好，我并没有常常回家看他们，我也没有天天电话牵挂。当我看到父亲慢慢变老，老得已经不像心中一直保有的那个朝气蓬勃、带着浑身力量的父亲的时候，我心如刀绞，但也知道，我接班的时候到来了，是到了我接替他们、支撑起一片天空的时候了。</p><p>　　保罗教授今天跟我说，他说他小时候家里贫寒，十七岁的时候不得不自己打工生活，他说，他已经累了，他说他真的很累，想要休息休息了。今天，当大家看到巴黎夜景的时候，应该想到，曾经设计了这一切的建筑师，十七岁的时候边打工边学设计，而今天，在灯火璀璨的巴黎夜幕中，这位老人累了，他该歇一歇了。我已经慢慢接受了一个事实，那就是，曾经在我心中以为永远会年轻、永远会强大、永远会保护着我和我们的人，都无法阻挡地老去。这里面不仅仅有我身边的父亲、母亲，甚至是前几日照片上看到的比尔盖茨，也已经俨然一位老人了，他曾经活生生地影响过一个时代，那个时代的人，那个时代的生活。甚至从未想到过，那些在业界叱咤风云的人们，也有离开我们的时候。而这时，我才慢慢开始意识到，那些上一辈的神话时代已经接近尾声，由我们，正需要开启一个新的时代。在这个时代里，只有延续他们的事业，这些艺术、科学和人生，才能达到真正的不朽。</p><p>　　如果没记错，纪念碑上写着“人民英雄永垂不朽”。我曾经不懂这句话的含义，以为它是以石碑的不朽记录先烈意志的不朽。后来我慢慢明白，他是一句咒语，只有将英雄的名字植入人们心中，一代一代地传承，他们才能达到真正的不朽。而到了现在，我才明白，我之前的想法都是幼稚可笑的。记住名字怎能真的不朽？唯一不朽的方式是意志的延续和星火相传。让逝去的人的意志被新一代的人体现，仿佛这些意志在新的躯壳中重生，仿佛他们从未离去。继续他们的事业、他们的人生，这才是他们的不朽，也是我们的不朽。</p><p>　　中国，中华民族，炎黄子孙、孔孟传人。我们保有的是我们黄色的面孔和弥足珍贵的文化。当我们用笔在纸上写出每一个汉字的时候，仿佛重现着古代先人们同样的轨迹。当我们吟诵每句诗歌，甚至说出每句话的时候，仿佛与古代先人如出一辙。当我们思考问题与人交往的时候，与他们体验着相同的思绪。他们的意志、他们的文化、他们的志趣，在这个民族达到了不朽。爱这个民族，是因为这份共有的生生不息的文化。几千年来，这份难得的文明时常在被冲击。爱它，珍惜它，捍卫它，那些仁人志士“留取丹心照汗青”的感人历史如出一辙，而那些意志，并不仅仅被写入历史，更多地，是被传承，当中华面临危机的时候，那些意志被一个一个脆弱的个体演绎，但却构筑起整个民族不屈不挠的品格。</p><p>　　除去复杂的政治概念，我们不妨认为“爱国”就是“爱我们的民族，爱我们的文化”，就是“以炎黄子孙为荣，以孔孟传人为傲”，就是“珍重她，呵护她，延续她”。事实上，大部分人也是这么界定的，我相信，我们爱的国，和文天祥爱的国，是同一个国，因为这个国，就是我们的文明。</p><p>　　我们，需要有先进的生产力，只有这样，我们才能保护我们的文明的延续，才能保证我们活得像一个人，活得有尊严。我在法国这段时间，看到了很多残疾人，甚至在我实验室也有和霍金一个状态的人。之前我总以为是霍金意志坚强，而现在我发现并不是这样，而是他们比我们活得更有尊严。政府会为每个残疾人配备电动轮椅，实验室会为残疾科技工作者聘请人照顾，公交公司会为残疾人开设专车接送，而这些，在中国是很难想象的。而要改变这些的，是我们要有强大的经济和制造能力。历史真的是一本很好的书，我们曾经的农业文明保护不了我们的文化，在向西方趋同的过程中，我们的文字险些成为历史。而只有强大的工业文明、信息文明，才能保证上层建筑的不朽。</p><p>　　所以，我们要做GEMS，因为它是硕果仅存的我们拥有的信息文明下的工业之心。它是保护我们脆弱文明的一环，是现在、也是未来重要的一环。我们爱国，所以我们要保护她，用我们唯一可做的一件事来保护她。我们这些“手无缚鸡之力”的读书人，只能用所有的热情和持续的动力来保护她。只能明知不可为，却决意为之。在此刻，正如同我们身后无数古代先贤、仁人志士、革命先烈和那些祖辈、父辈和我们身边的兄弟姐妹们一样，我相信，那些为了保卫这份弥足珍贵的文明的勇气和意志的荣光，同样会在我们和我们的后继者的身影中闪现。人生，任性地做一件自己觉得正确的事情，年老时不会有悔恨。既然如此，又何惧失败和挫折呢？因为，即使是它“消逝的一面，也足以让我荣耀一生”。</p><p>　　正如那个要撬动千钧之力的杠杆，个人的勇气、毅力在强大的对手面前，变得渺小。客观而可怕的事实。困难并不会因为初衷的所谓正义性和荣光而有丝毫减弱。人的意志对于客观的真实是微不足道的。我们知道GEMS有多困难，但是，我们团结、我们凝聚。今天，GEMS 8从启动到现在，已经经历了整整8个月。在这八个月中，我们从零开始，到了现在60余万行代码。殚精竭虑，废寝忘食，衔胆栖冰，苦尽甘来。</p><p>　　今天，是GEMS 8 G++ Framework 0.3正式内部发布的日子。选定这个时间并非计划，而是计划被技术原因推迟了3天。这是8个月来，GEMS 8 开发团队第一次对外界的交代。计划推出的第一个产品G++ Framework是GEMS 8的内核，也是工程开发的基础设施。它是和Microsoft .Net Framework接口完全一致的C++高速实现。也就是说，C++的开发人员，只需要引用一个头文件，既可以享受 .Net Framework庞大的库支持，以及直接使用属性、托管、事件、引用、枚举等所有高级语法。而更重要的是，所有编译的代码是本地的，因此兼顾了超越 .Net Framework的高性能和快速方便的接口和语法。这是因为，我们通过反向工程，用C++对 .Net Framework进行了接口完全一致的重写。这些繁重的体力和脑力劳动中，凝聚了整个GEMS 8 开发团队的心血。接下来，我们会继续稳定，最后将发布该系统的开源版本，希望这是我们对 .net社区的微薄贡献。GEMS 8 还在继续开发中，第一个子产品，也将在十月底和大家见面。</p><p>　　我们，这8个月以来，真的尽力了。与其说这些努力是为了那些荣光，不如踏实一点，说这是我们的理想和对技术精专的追求。我们能做的，也只有这些。我们努力将它做好。现在，距离真正的发布和未来的成功还很远很远，唯有精益求精才是出路。然而，我不能回避这件事情的意义。的确，没有人现实的生活是为了这些空泛的道理和意义的，但是，客观上，我们做的事情，正在努力去成就这些“爱国”的意义。因为我们做的事情，在努力推动GEMS向前发展，我们不是因为爱国才去这样做，而是出于直觉，才去做应该做和理想中值得去做的事情。不过，这也是我们这些没有杀伤力、战斗力和暴力的知识分子，唯一能做的事情了。为了这件事情，同时，远一点也是为了我们的国家和民族、我们的文化的存续，唯一能够投入全部精力和心血，能努力去做的事情，值得将我们宝贵青春“浪费”在里面的事情。为了这件事情，我，我们，真的尽力了。</p><p>　　又到了一年的九一八，牵强一点，姑且说我们用这些行动来爱国。终有一天，街上会跑着用GEMS设计出来的汽车。我知道，创造比毁灭更艰难，因此更珍贵。国产汽车靠品质占领市场比简单地毁灭一辆别国的汽车需要消耗何止千万倍的时间和经历，甚至是需要好几代人的努力，但正是为了这一点些微的可能性，我们从未放弃。尽管我们键盘的单调机械的啪啪声没有街上的口号有感染力，但是我们相信，它更持久，更深刻，更本质地慢慢地改变着我们的生活。</p><p>　　又到了一年的九一八，我们用这些来爱国，你呢？</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="http://blog.renren.com/share/1270498738/14237063245">九一八：我们拿什么来爱国</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 60分加油站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爱国 </tag>
            
            <tag> 九一八 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>野蛮何以成为文明的幌子</title>
      <link href="/%E9%87%8E%E8%9B%AE%E4%BD%95%E4%BB%A5%E6%88%90%E4%B8%BA%E6%96%87%E6%98%8E%E7%9A%84%E5%B9%8C%E5%AD%90/"/>
      <url>/%E9%87%8E%E8%9B%AE%E4%BD%95%E4%BB%A5%E6%88%90%E4%B8%BA%E6%96%87%E6%98%8E%E7%9A%84%E5%B9%8C%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<p>一提日本仇似海，从此智商是路人——这用来描述打砸抢日本车的激进人士很贴切。  </p><p>游行示威，上街表达个人情感，我各种支持。但是倘若借爱国之名，行抢劫打砸之实就是强烈反对了。<br>有人说：打砸同胞已购买车辆是爱国。竟以电影《赛德克巴莱》里面的台词：“如果文明是叫我们卑躬屈膝，那我就带你们骄傲地野蛮到底”作为借口。我真不敢认同中国的文明是通过这种“野蛮”得到延续的。大刀向鬼子们的头上砍去，刀口何以指向了国内同胞的脖颈？当初人民选择买国产车还是日本车还是德国车是他们自己的权利。你若仇恨日本，自强身健体，工作兢兢业业，努力民强国富。何以借这“爱国主义”的名义来做伤害同胞感情的事情。<br>你可以将拳头挥向小偷，强盗，强奸犯等等，制止他们的作恶行为。何以自己到成为了强盗？做着伤害同胞的事情，并称之为延续文明的方式，这与鬼子的打砸抢烧又有分别？<br>简单讲讲我对中日，中菲，中美关系的看法：<br>首先，中日开战的底线是什么？自卫队登岛就是触碰了战争的底线，若自卫队登岛，政府还不有所作为，那就真到了怀疑执政党的执政能力的时候了。现在假借爱国主义进行所谓的打砸抢烧，受伤害的只是自己的同胞，并给日本人的生活平添了一些笑料。真的是一提日本仇似海，从此智商是路人，谁脑残去打杂日货，我就跟谁绝交！<br>其次，菲律宾对中国黄岩岛有觊觎之心，中国通过经济战，控制菲律宾香蕉的进口，从而使阿基诺三世的民意支持率下降，这是中方的不战而屈人之兵。日本对中国钓鱼岛有觊觎之心，中国民间激进人士却通过打砸抢烧伤害同胞的感情，怎么好意思说这就是爱国。孙子兵法说不战而屈人之兵是上上策，现在国家努力发展经济不强行占领岛屿，倒先民间自己损害自己的同胞的财产，自乱阵脚了。<br>最后，日本和菲律宾一样只是美国的一个棋子。中国可以不买菲律宾的香蕉从而使菲律宾的几十万蕉农失去生计;中国亦可以通过发展国家民族产业从而摆脱对日本产品的依赖性,通过经济上的独立从而摆脱对日本产品的依赖性。<br>但是中国倘若面对最终大boss——美国,也打砸抢烧么?<br><strong>你怎么忍心打砸抢烧同胞们通过卖肾而来的ipad，iphone？</strong><br>抵制美货的话，微软、可口可乐、高盛、强生等等自然不是是躲不过“爱国主义者”的洗劫。但是你倘若真的反美，怎么打这场战争？先不说你是否看日本的火影，海贼王，是否听过天空之城，风之谷类的。你真的很难说你没有接受过美国的文化“入侵”，大学英语必过四级，《变形金刚》《黑衣人》《阿凡达》《2012》等等。你若反美，自要抵制microsoft office，c++，java等等，开发一套属于自己的操作系统，自己的办公软件和自己的编程语言，从而摆脱对美国的依赖性。战争的形式自然不止一种，经济战，有赢就有输，像菲律宾自然是输得五体投地。但是一个国家不可能动不动都跟别的国家都贸易战，鹬蚌相争渔翁得利,这和闭关锁国又有什么分别？<br>对于那些听风就是雨喊怎么还不打，骂政府腐败无能的人，自然不想深究你在生活中是个什么样的人，你是否在自己的工作岗位上贡献你自己的一份力量。你是否尊重了哪些负重30多公斤30多公里进行拉练的士兵。你若身体符合军人标准，你是否有弃笔从戎，远赴边疆抛头颅，洒热血之心？<br>我也是吃着地沟油的命，操着中南海的心。但是还是希望大家理性爱国，不要让我为你的智商着急。对同胞野蛮绝对不是延续文明的理由，那只是表明自己是个野蛮人罢了。</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>焚书指南</title>
      <link href="/%E7%84%9A%E4%B9%A6%E6%8C%87%E5%8D%97/"/>
      <url>/%E7%84%9A%E4%B9%A6%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>在《后天》那部电影里，有一个特别值得玩味的桥段：一群人为了躲避严寒，钻进了纽约的市立图书馆。他们为了取暖，不得不把书拿出来烧掉，但对于先烧什么书而争执不下，最后所有人一致同意，先烧税法！</p><p>在这个寒冷的早春北京，我重看了一遍《后天》，然后想，假如——仅仅只是假如——北京也遭遇了一场千年不遇的严寒，一些北京市民被迫涌入首都图书馆，也同样需要烧书取暖时，他们会如何抉择？</p><p>仔细想想，这是一个很有趣的心理测试题。有点像“如果你流落到荒岛，会带什么书”之类的问题。但这个题目，比荒岛带书要更有内涵，测试题的关键在于两点：你喜欢的书，可能只有一两本；讨厌的书，却有一大堆。先烧什么书？后烧什么书？该如何排序。更何况，你还要清楚地知道，讨厌的书，并不等于没有价值。你现在处于大灾变期间，如果幸存下来，必须要肩负起延续人类文明的责任。有些书你也许会极端讨厌，但对文明存续非常重要——比如线性代数课本和元素周期表。秦始皇当年焚书，都特意把农书、历书什么的留下呢。</p><p>如果是我的话，第一批被投入火堆中的书，毫无疑问是成功学和励志书。我一向有一个偏见，成功学这种东西，只会让人尽可能地远离成功而不自知，它的效果不会超过小时候在作文本上抄录名人名言，还费纸。再者说，大灾变后，人类社会已经有了极大改变，传统成功学规律已经不适用，烧了丝毫不可惜。这些书还有一个显而易见的优势：成功学这两年出得太多了，拿来当燃料，可以烧很久。</p><p>第二批要投入火堆的书，是各种生活保健书。一个朋友的母亲，身体不太好，但是笃信各路神仙的保健养生学，今天生吞泥鳅，明天喝绿豆汤；这个月茹素，下个月要排毒。身体没见好转，冰箱中奇形怪状的东西和吃饭规矩却是越来越多了。我那朋友抱怨说，每本保健看起来都言之成理，连在一起看，却只会搞得整个身体系统无所适从。反正以后都已经是冰河期了，资源贫瘠，有得吃就不错了，不能挑拣，所以这些养生书还是烧了吧。这不是一个养生的时代，是一个逃生的时代。</p><p>等到养生保健类的书烧完以后，第三批需要投入火中的，是各路明星们出的自传、感悟和经历。这类书装帧一般都很好，还会配上许多与世界政要合影的彩色照片，应该会很耐烧——唯一的问题是，这类书中水分太多，会不会影响燃烧效率，还有待科学家研究考察。</p><p>图书还有一个大类，讲星象占卜。我是个坚定的无神论者，这些书于我用处不大。而且我有一个很好的检验方法：翻开书，按照每一个占卜系统来估算自己的命运以及本周运势——别忘了，我们现在是假设身处大灾变时代，所以如果这本书没算出来是大凶之兆，那肯定不准，直接烧了就是。如果侥幸被它说中了，那也烧，反正大部分算命的人，都不喜欢听不吉利的话。</p><p>后来一次吃饭的时候，我把这道测试题跟好几个朋友说了，并且说了自己烧书的次序。他们都很有兴趣，每个人都发表了自己的看法，有的先烧青春小说再烧旅游指南，有的烧了历史普及类的犹嫌不过瘾，还要去拿高中教辅与公务员题库出气。</p><p>最后还是一位杂志的主编给出了最好的办法。他听完我们的烧书次序，淡然地弹了弹烟灰：“哪儿用得着那么麻烦，不用分类，直接按年份烧，最近几年就没出过能看的书！”</p>]]></content>
      
      
      <categories>
          
          <category> 60分加油站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
            <tag> 马伯庸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>520的故事</title>
      <link href="/520%E7%9A%84%E6%95%85%E4%BA%8B/"/>
      <url>/520%E7%9A%84%E6%95%85%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<p>最近在人人上比较热议的一个故事：有一对情侣，他们高中开始相识，彼此相爱，大学去了美国，那个城市有一个杀人狂，专杀恋人，他们成为了杀人狂的牺牲品，他们被装在机器上，一分钟腰部的刀会撕裂腹部，生还的办法是一个剪刀石头布的游戏机，胜方生存，他们决定共同摁拳一起死，可是女孩死了，因为他出了剪刀，女孩出了布。。  </p><p>最后解析就出来了，各种解析出来了。比较常见的是三种。</p><ul><li>男孩为了救女孩决定自我牺牲，出了剪刀。女孩自私，使坏，一开始就谋划出布，结果害人不成，自己死了，活该。</li><li>男孩为了救女孩决定自我牺牲，出了剪刀。女孩凭着对男孩的了解，知道他一定会出剪刀，所以她出了布。</li><li>女孩为了活命，出了布；男孩知道女孩一定会出布，所以男孩出了剪刀。  </li></ul><p>无论内心怎么想法，最后结果都已经确定。男的活了，女的牺牲了。由于最近看了下纳什平衡，所以觉得这个是囚徒困境的翻版。我掩去“因为他出了剪刀，女孩出了布” 这个结果不说。问了部分女性朋友，他们中的大部分认为最后是“男孩子出剪刀，女孩子出布”出现了女死男生的结局。可以说这个故事还是符合男女的心理。<br>就我看来，因为男女双方是恋爱中的人，可能会被爱情冲昏头脑，抑或感情有真假的问题。在这场博弈中，自己对对方的了解就成为了整个赌局中的决定自己生死的筹码。心理推测对方会出什么，从而判定哪样可以获得团体的最优利益或者自己认定的最终利益。舍己为人也好，求生苟活也好，都是建立在推断对方会认为自己会出什么，然后自己做出相信的决定，或者进行更深层次的二次判断，螺旋升级，最后到了自己做出三种选择都可以达到自己想要的目的的情况。但是机会只有一次，并不会给恋人们根据第一次结果再次进行判断的机会。但是现实中的人一般都不会去多次的逻辑分析。所以出现得最多的心理情况分析就如上面三种结果。<br>多年没有玩猜拳，再也没有依靠猜拳来简化事情，决定胜负，没想到简简单单的猜拳上升到了博弈的高度，还牵扯到了心理学。孙子兵法中说到“知己知彼百战百胜”。倘若故事背景更改为互不相识的“A和B”，在互不相干的前提下，都是拼命的希望自己存活，因为没有了所谓的团队利益最大化。但是故事中的“囚徒”恰好是一对恋人，可以在以往的交往中清清楚楚知道对方是怎样的人。<br>PS：我喜欢原文的一句话，你认为你的爱情是什么样子，你的爱情就是什么样子。因为这个故事的剧情并不会真实出现，这样的话，把我的筹码亮出来，也无可厚非。也给那些想知道我的答案的人一个答复。理由如下：</p><ul><li>假如女方出拳头，她遵守我们之间的诺言，证明我们的爱情情比金坚，纵使我破坏约定，但是我死而无憾。 </li><li>假如女方出剪刀，纵使双双破坏约定，而且导致团队利益最小化。好歹也可以死要面子活受罪的认为是心有灵犀一点通，双双送到农村做化肥而已。</li><li>假如女方出布，依旧是双方都破坏约定，但是这种情况就喝上面不一样，依旧和第一个团队抉择一样，保证了利益最大化。活下来就好好生活。</li><li>这个理由就比较扯淡了。女的对感情比较坚贞，就会出5（我），男的比较傻，就只会出2（爱），因为男方没有0（。。。）。  </li></ul><p>这三个理由都没有建立在对方推断自己的抉择上，自我欺骗对方对自己的抉择一无所知的情况下。这样才具有了比较理性的思维方式。女方出布的理由也就符合了女方的情感心理特征。还是那句话，你认为你的爱情是什么样子，你的爱情就是什么样子！</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> 520 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚荣心，促进经济发展</title>
      <link href="/%E8%99%9A%E8%8D%A3%E5%BF%83%E4%BF%83%E8%BF%9B%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95/"/>
      <url>/%E8%99%9A%E8%8D%A3%E5%BF%83%E4%BF%83%E8%BF%9B%E7%BB%8F%E6%B5%8E%E5%8F%91%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>商纣王在请工匠用象牙为他制作筷子，他的叔父箕子认为，既然使用了稀有昂贵的象牙作筷子，与之相配套的杯盘碗盏也不会用陶制土烧的笨重物了，而必然会换成用犀牛角、美玉石打磨出的精美器皿。餐具一旦换成了象牙筷子和玉石盘碗，你就一定不会再去吃大豆一类的普通蔬菜，而要千方百计地享用耗牛、象、豹之类的胎儿等山珍美味了。尽情享受美味佳肴之时，你不会再去穿粗布缝制的衣服和住在低矮潮湿的茅屋下，而必然会换成一套套的绫罗绸缎，并且住富丽堂皇的宫殿之中。这个并不是个例，而是现在社会中非常普遍的生活现象。倘若没有攀比，人人都只要满足每天的衣食住行，也就没有所谓的三次科技革命，也就没有那么多的奢侈品的出现了。  </p><p>假期在跳蚤市场淘到慕容雪村的《伊甸樱桃》，开始并不知道是什么类型，被书最后一页的内容所吸引，回到家才知道这本书是介绍名牌的书籍。这书并不是介绍什么耐克，阿迪达斯等牌子，而是LV,万宝龙，宾利，迪奥，伯百利，劳力士，罗特斯，卡地亚，韦奇伍德，杰尼亚，阿玛尼，登喜路，夏奈尔，菲拉格慕，拉斐，蒂梵尼，百达翡丽，斯坦威，艾乐森，普拉达，吉凡克斯等牌子，恕我孤陋寡闻，我以前基本上不知道这些牌子，把书给我妈妈看这些牌子的介绍，眼珠子都要掉下来似的，自言自语了一句：“一辈子都是农民的命”。  </p><p>万宝龙有一款皇家钻石墨水笔，镶有四千八百一十颗碎钻，售价人民币约一百二十万元。一个人，4000一月的月薪的话，不吃喝拉撒不生病不付房租等等其他所有一切费用都免掉。其实也不要工作蛮久，也只要250年。时间很容易过的，眨一下眼，一下子就过去了。250年后也只不过是一些元素的重新组合而已。当然我们难以否认有些物品的价值的确比较高。稍微有点智商的人都知道一块金子比一块板砖值钱。一颗钻石比一块木炭值钱。但是有些商品是否真的物有所值？这个其实并不要我举很多实例，大家都是明眼人。iphone4s的成本1200元以内，售价4500元以上，硬件成本如此，软件也算部分成本。但是这利润空间还是很足的，但是这个根本就不愁卖不出去，因为现代的商纣王（算我欠抽）多得是，为了满足所谓的虚荣心，从而产生一种优越感，根本就不会考虑这个是否物有所值，或许早已觉得花这么多钱来获得虚荣心所带来的优越感是值得的。商家正是知道如此，从而可以牟取暴利。  </p><p>虚荣心让月薪4千的人在月薪4万的人面前抬不起头，月薪4万的人在月薪40万的人面前抬不起头。不知道是我的目光短浅还是社会本身如此：只要通过自身努力，正值青春年少的我们要满足基本的衣食住行是根本不成问题的。但是现代社会的三粒毒药消费主义、性自由和成功学已经把我们毒害得不浅，我们的幸福感在比较中得来的，而且不是跟纵向的自己比较，而是跟横向的她人比较，而且不管起跑线是不是一样。家的N次方中的拜金女赵雯虚荣心作祟，并没有规规矩矩的获得物质上的满足，最后弄得别人见而避之，这个因为虚荣心成名，到最后也毁在虚荣心上面，还好决心悔改，依靠自己的真实能力获得了自己想要的。  </p><p>我们的底线或原则或许并不是适合这个社会的生存法则，为了钱，更多的钱仅仅依靠正道并不是不可以，但是这个就得耗时间。赚4万，4000月薪一月要10个月，4w一个月就要一个月。玛力多玛力玛力多，多了可以展现在房子多豪华上面，可以展现在多少个LV上面，多少个劳力士上面。也许劳力士能让时间停止，人们就可以穿越时空。我没有黑劳力士的意思，我承认劳力士的做工精细，品质高雅。我只是想说：人的虚荣心是很难满足的，如果每个愿望都可以实现的话，上帝早就下岗了。拼搏是好的，人都得为自己的幸福付出。但是你总得清楚自己的力量，还有愿望得到满足好，内心深处是否真正的感到幸福。  </p><p>倘若没有虚荣心，就没有所谓的浪漫，就剩下平淡的生活，就没有所谓的经济高速发展。人活在世，是需要闹腾一下，不枉走此一遭。人生如戏，请你别演砸了。  </p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚荣心 </tag>
            
            <tag> 发展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你说学习重要，还是经营人脉重要</title>
      <link href="/%E4%BD%A0%E8%AF%B4%E5%AD%A6%E4%B9%A0%E9%87%8D%E8%A6%81%EF%BC%8C%E8%BF%98%E6%98%AF%E7%BB%8F%E8%90%A5%E4%BA%BA%E8%84%89%E9%87%8D%E8%A6%81/"/>
      <url>/%E4%BD%A0%E8%AF%B4%E5%AD%A6%E4%B9%A0%E9%87%8D%E8%A6%81%EF%BC%8C%E8%BF%98%E6%98%AF%E7%BB%8F%E8%90%A5%E4%BA%BA%E8%84%89%E9%87%8D%E8%A6%81/</url>
      
        <content type="html"><![CDATA[<p>有一次在北大讲座，遇到一位学生问我，“老师，你说学习重要，还是经营人脉重要？”看着他一脸大杂烩的表情，我先拿出本子记下了这个问题，然后告诉他说，这是个比较大的话题，我会仔细写篇文章放在网上的，然后给了他我的博客地址 。而后又补了一句，“<strong>相信我，所谓的人脉就算重要，也根本没他们说的那么重要</strong>”。</p><p>让我们细说从头。先动脑思考一下，你愿意与什么样的人成为朋友？从幼儿园开始，每个人就都已经有一些选择朋友的原则——尽管并不自知。事实上，资源分布的不均匀，必然造成人与人之间的某种依附关系。观察一下，就可以看到事实：幼儿园里玩具多的孩子更容易被其他孩子当作朋友。那么，玩具最多的孩子朋友最多么？答案 并非肯定</p><p>如果你像我一样有机会、也恰好愿意多花一点心思与那个玩具最多的孩子交谈的话，你也很快就会发现，在他的心目中，与所有成年人一样，朋友被划分为“真正的朋友”和“一般的朋友”。以下我们姑且把那个玩具最多的孩子叫做“小强”。</p><p>当时我很好奇。耐心等待小强告诉我谁是他“真正的朋友”。最终，他告诉我，真正的朋友只有两个。其中一个是男孩，另外一个是女孩。那我就问他，“为什么你认为那男孩是你真正的朋友？” 小强一秒钟都没犹豫，告诉我说，“他从来都不抢我的玩具，他跟我换。”我又问他，“那，为什么你认为那女孩是你真正的朋友？”这次小强犹豫了好一阵子，在确定我会给他保密之后，磕磕巴巴地说，“她好看。我把新玩具全都先给她……”我笑。过一会儿又问他，“她觉得你好看么？” 小强愣了一下，满眼的无辜，“不知道……”我又问，“那她现在手里的玩具是谁的？” 小强突然显得很紧张，“不是我的。”我决定不去问那小女孩什么问题了。</p><p>基于种种原因，<strong>生活中总是只有少数人是大多数人想要结交的朋友。但是同样基于种种原因，大多数人并不知道那些少数的人是如何理解他们大多数人的行为的。</strong>刚才小强说他那个“真正的朋友”从来都不“抢”他的玩具，而是“换”。注意这两个词。</p><p>在这里我们不讨论所谓的“心计”。确实有些人有很深的城府，至少比另外一些人更深，他们可以用常人想不出的，就算想得出来也做不到的手段达到自己的目的。在这里，我们只讨论最普遍的情况。</p><p>所有的人都喜欢并重视甚至偏爱一种交换，“公平交换”。小强也许并没有意识到，他所拥有的玩具数量，使得他从概率角度出发很难遇到“公平交换”，因为绝大多数孩子没有多少玩具，甚至干脆没有玩具，所以，那些孩子实际上没有机会，也没有能力与他进行“公平交换”。对他来讲，不公平的交换，等同于“抢”，没有人喜欢“被抢”。而与他“换”的那个男孩，让小强感受到公平。小强也有自己想要的但是却不拥有的，所以，他也去“换”而不会去“抢，”因为他自己就不喜欢“被抢”——把最新的玩具都给那女孩先玩……</p><p><strong>某种意义上，尽管绝大多数人不愿意承认，他们的所谓“友谊”实际上只不过是“交换关系”。可是，如果自己拥有的资源不够多不够好，那么就更可能变成“索取方”，做不到“公平交换”，最终成为对方的负担。这样的时候，所谓的“友谊”就会慢慢无疾而终。也有持续下去的时候，但更可能是另外一方在耐心等待下一次交换，以便实现“公平”。</strong>电影《教父》里，棺材铺的老板亚美利哥?6?1勃纳瑟拉决心找教父考利昂替他出气并为自己的女儿讨回公道的时候，亚美利哥就是“索取方”。许多年后，教父考利昂终于在一个深夜敲开了亚美利哥的门……</p><p><strong>所以，可以想象，资源多的人更喜欢，也更可能，与另外一个资源数量同样多或者资源质量对等的人进行交换。因为，在这种情况下，“公平交易”更容易产生。事实上，生活里随处可见这样的例子。哪怕在校园里，“交换”本质没有体现的那么明显，但是，同样性质的行为并不鲜见。</strong>比如，某系公认的才子，会与另外一个系里公认的另外一个才子会“机缘巧合”地邂逅而后成为“死党”。俗话常说，“英雄所见略同”，可能就是他们一间如故的原因，所以，他们之间的谈话以及任何其他活动往往都会让他们觉得相互非常“投机”。</p><p>这样的例子太多太多。</p><p>当15岁的沈南鹏和14岁的梁建章第一次相识时，这两个懵懂少年不会意识到17年后他俩会联手创造一个中国互联网产业的奇迹。在1982年第一届全国中学生计算机竞赛上，这两个数学“神童”同时获奖。</p><p>不是因为他们两个要好，才各自变得优秀。而是因为他们各自都很优秀，才可能非常要好，而后命运的碰撞产生绚丽的火花。</p><p><strong>而反过来，这些被公认为优秀的人，事实上往往并不“低调”，也并不“平易近人”。这并不是他们故意的。他们无意去惹恼身边那些在他们看来“平庸”的人，只不过无形中他们有这样的体会——“与这些人交流，沟通成本太高……”除非有一天，这些人终于意识到自己应该保护自己，因为有些误解根本没机会解释。于是，他们开始“谦虚”，他们学会“低调”，他们显得“平易近人”。</strong></p><p>好多年前，我注意到一个现象，当别人求助于我的时候，我内心往往非常抵触，却又怕别人说我是所谓的“不够意思的人”，于是硬着头皮去做自己不喜欢做的事情。有一次特别受伤的时候，突然一闪念，想明白，原来这种尴尬本质上并不是来自于我没有“乐于助人”的品性，而是来自于我自己的精力并不足够旺盛，没有旺盛到处理自己的事情绰绰有余的同时，还有大把的时间精力用来帮别人做事——事实上，我自己根本已经是正在过河的泥菩萨。后来，我开始怀疑，雷锋的领导是否太白痴，因为他没有给自己的下属分配足够的工作。——这是那天晚上与我来讲非常惊喜的一件事儿，因为我发现我正在独立思考。</p><p>承认自己能力有限，是心理健康的前提。从我重新思考雷锋的领导那天开始，我挣扎着去学习如何做事量力而行。说起来好笑，自己的智商有限到过去竟然没想到“量力而行”是如此高难度的行为模式——1) 承认自己能力有限；2) 不怕在别人面前露怯；3) 敢于不去证明自己是“好人”……</p><p>所以说，<strong>往往只有优秀的人才拥有有效的人脉。并且正因为这些人随时随地都可能要回避“不公平交换”的企图，他们才更加注重自身的质量，知道不给他人制造麻烦，独善其身是美德。</strong>常言说，“事多故人离”，是非常准确的观察。而那些不优秀的人往往并不知道这样貌似简单的道理，他们甚至没有意识到自己的状况只能使得自己扮演“索取者”的角色；进而把自己的每一次“交换”都变成“不公平交换”，最终更可能使交换落空——因为谁都不喜欢“不公平交换”；每次交换的落空，都进一步造成自己的损失，使得自己拥有的资源不是数量减少，就是质量下降，进一步使自己更可能沦为“索取者”——恶性循环，甚至可能永世不得翻身。</p><p>还有些人，过分急于建立所谓的人脉，并全然不顾自己的情况究竟如何。对于这样的人，人们常用一些专门的词来描述他们，“谄媚”、“巴结”、“欺下媚上”、甚至“结党营私”等等。这样的人，往往也不是他们故意非要如此的。他们只是朦胧地意识到自己一个人的力量过于渺小，所以，才希望能够借助其他的力量。而一个人越是渺小，越是衬得他的欲望无比强烈。这样的人特征非常明显，其中一个就是，在日常生活中他们经常有意无意地用亲密的方式提及大家仰望的人物，无论他们与“大人物”是否真的存在私交密往。在中文语境里，他们就会只说名字不说姓氏：李开复不叫“李开复”，在他们嘴里是“开复”；李彦宏不叫“李彦宏”在他们嘴里是“彦宏”，沈南鹏不叫“沈南鹏”，在他们嘴里就是“南鹏”；最近我听到更恐怖、更另人毛发悚立的是，“小俞”（俞敏洪），“小邓”（邓峰），“大想”（理想）……</p><p><strong>整体上来看，人脉当然很重要。不过，针对某个个体来说的话，更重要的是他所拥有的资源。</strong>有些资源很难瞬间获得，比如金钱、地位、名誉，尤其在这些资源的获得更多地依赖出身和运气的现实世界里。然而有些资源却可以很容易从零开始，比如一个人的才华与学识。才华也好学识也罢，是可以通过努力必然获得的东西。一个人心智能力一旦正常开启，就会发现自己在这个信息唾手可得的世界里，只要正常地努力，并且有耐心和时间做朋友，很容易成为至少一个领域的专家。努力并不像传说中的那么艰苦，只不过是“每天至少专心学习工作六个小时”；耐心却远比大多数人想象得巨大，“要与时间相伴短则至少五年，长则二十年” 。</p><p>许多年后的今天，我又发现另外一个多年前智商平平的我不可能想明白或者预想到的事情（当然我现在也依然智商平平，只是多了些智慧）：当一个人身边都是优秀的人的时候，没有人求他帮忙——因为身边这些优秀的人几乎无一例外都以耽误别人的时间为耻，同时，这些人恰好是因为遇到问题能够解决问题才被认为是优秀的。</p><p>如果，终于有一天，你已经成为某个领域的专家，你会惊喜于真正意义上的有价值的所谓高效的人脉居然会破门而入。你所遇到的人将来自完全不同的层面，来自各种各样意想不到的不同的方向。而你自己也不再是过去一无是处的你，你不再是“索取者”，你扮演的是“乐于助人”的角色——很少有人讨厌善意的帮助，更何况你是被找来提供帮助的呢。</p><p>甚至，你会获得意外的帮助。如果你是一个优秀的人、有价值的人，那么就会有很多另外优秀的人、有价值的人为你提供帮助。这样的时候，这样的帮助往往确实是“无私”的。正如没有哪个医生做到救死扶伤之后仅仅因为酬劳太少而恼羞成怒的一样，那些品质优秀到一定地步，境界豁达到一定层次的人，往往真的可以做到“施恩不图报”。因为对他们来讲，能够有机会“验证自己的想法”本身就已经比什么都重要，并且可以令他们身心愉悦。然而真正有趣的现象是，被帮助的你也正因为并非寻常之辈，所以一定懂得“滴水之恩，当以涌泉相报”的道理。最终皆大欢喜，只因为“沟通成本几近于零”，同时的效果自然是“交流收益相对无穷放大”。良性循环。</p><p>生活的智慧就在于，集中精力改变那些能够改变的，而把那些不能改变的暂时忽略掉。<strong>专心打造自己，把自己打造成一个优秀的人，一个有用的人，一个独立的人，比什么都重要。打造自己，就等于打造人脉</strong>——如果人脉真的像他们说的那么重要的话。事实上，我总觉得关于人脉导致成功的传说其实非常虚幻，只不过是不明真相的人只好臆造出来的幻象罢了。</p><p>我并不是说，从此就不用关心自己身边的任何人了，或者说从此就无需与任何人打交道了。善于与人交往也是一种需要学习，并且也需要耗费大量时间实践的技能。我只是提醒你，别高估自己，误以为自己有那么多足够的时间可以妥善地处理好你与你身边所有人的关系。浏览一下你的手机通讯簿里的名字吧，有多少已经很久没有联系过了？这么多年，我只见过两三个人回答我说，“最长时间没联系的，也不超过两个星期。”其中一个还是特别固执而特殊的人，他的手机通讯簿里，总计才有22个名字。</p><p>事实上，真正的关心最终只有一个表现：为之心甘情愿地花费时间，哪怕“浪费”时间。这也很容易理解。因为，当你把时间花费到一个人身上的时候，相当于在他的身上倾注了你生命的一段——哪管最终的结果如何，反正，那个人那件事都成了你生命中的一部分，不管最后你喜欢还是不喜欢。每个人的时间都是有限的。所以最终，“真正的好朋友”谁都只有几个而已。</p><p>这实在是一个大到写两本书都可以的话题。以下是我的几个简单的，但实践起来并不是那么容易的建议：</p><ul><li>专心做可以提升自己的事情；学习并拥有更多更好的技能；成为一个值得交往的人； </li><li>学会独善其身，以不给他人制造麻烦为美德；用你的独立赢得尊重； 除非有特殊原因，应该尽量回避那些连在物质生活上都不能独善其身的人；那些精神生活上都不能独善其身的，就更应该回避了——尽管甄别起来比较困难； </li><li>真正关心一个朋友的意思是说，你情愿在他身上花费甚至浪费更多的时间； </li><li>记住，一个人的幸福程度，往往取决于他多大程度上可以脱离对外部世界的依附。<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2></li><li><a href="http://blog.renren.com/GetEntry.do?id=801122240&amp;owner=297819131">你说学习重要，还是经营人脉重要</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 60分加油站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 工作 </tag>
            
            <tag> 人脉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>效率极低人群之七大习惯</title>
      <link href="/%E6%95%88%E7%8E%87%E6%9E%81%E4%BD%8E%E4%BA%BA%E7%BE%A4%E4%B9%8B%E4%B8%83%E5%A4%A7%E4%B9%A0%E6%83%AF/"/>
      <url>/%E6%95%88%E7%8E%87%E6%9E%81%E4%BD%8E%E4%BA%BA%E7%BE%A4%E4%B9%8B%E4%B8%83%E5%A4%A7%E4%B9%A0%E6%83%AF/</url>
      
        <content type="html"><![CDATA[<p>与通常所列举的应该培养的有益习惯不同，本文在此举出的是我们最好避免的7种习惯。</p><p>　　就像寻找对你有益的习惯一样，寻找妨碍你的习惯同样重要。这7种习惯中大多数都可能会轻易成为你日常生活的一部分，使你难以察觉它的存在（或者它如何影响到你）。我曾经略微尝试了这些习惯，结果毫无疑问，那些重要的事情没有几个可以完成。同时我也要添加说明的是，这只是在生活中你可能形成的影响效率的主要的7个习惯，我很确定绝不仅仅是这些。</p><h2 id="缺席"><a href="#缺席" class="headerlink" title="缺席"></a>缺席</h2><p>也许你曾经听过伍迪·艾伦所说的这句话：</p><p>“百分之八十的成功来自于出席。”</p><p>更多的出席——这是在生活中你可以保证更多成功所做的最大也是最简单的事情之一，无论是在你的社交生活中，你的事业上还是你的健康方面。如果你想要改善你的健康状况，一个最重要也是最有效的事情就是在每次你该出席时出现在健身房里。</p><p>也许天气会不好，也许你会不想出门，也许你有一大堆其他必须要做的事情。但是，如果即使你在积极性不高时仍然继续出现在健身房里，那将比你呆在家里的沙发上放松要有效的多。</p><p>我想这个也可以推及到生活的其他领域。如果你每天都坚持写作或绘画，你就会快速的得到提高。如果你更多的出门你就可以遇到更多的新朋友。如果你参加更多的约会，你遇到心上人的机会就会大大提高。仅仅只是更多出席就会使你的生活大大不同。而缺席却会使你毫无收获。</p><h2 id="拖拖拉拉"><a href="#拖拖拉拉" class="headerlink" title="拖拖拉拉"></a>拖拖拉拉</h2><p>为了简化，我将最喜欢的3种摆脱拖拉情况的方法列举如下：</p><p>吞食青蛙。也就是说在一天的最开始就完成那些最艰难最重要的工作。早上良好的开始会让你一天都保持高昂的情绪和积极的动力。这通常会使你这一天都十分高效。</p><p>-你如何吃掉一头大象呢？不要打算一口吃成胖子，这会使你感到过多负担以至于产生拖延的念头。把一项工作分为若干可付诸于行动的小步骤，然后仅仅关注第一步直到把它完成，接下来再继续下一步。</p><p>-说服自己。我发现这种向导型调整十分有效。就在我花了20分钟躺在床上反复默念在这几天里我都十分高效之后，我就不再会陷入拖拉的情况或者浏览1至5个我喜爱的网站寻找更新信息的必要。</p><h2 id="做一些无关紧要的事情"><a href="#做一些无关紧要的事情" class="headerlink" title="做一些无关紧要的事情"></a>做一些无关紧要的事情</h2><p>除了拖拖拉拉以外，你最容易陷入的不良习惯之一就是忙于一些无关紧要的事情之中。</p><p>为了提高效率你也许需要某种时间管理方法。它可能会是一件极为简单的事情，比如在一天的开始使用80/20法则。80/20法则,也就是我们通常所熟悉的帕累托法则认为， 80%的收获源自20%的努力。所以为求高效你应该将你精力的大部分集中在那些极少数重要的事情上。</p><p>当使用这个法则时你只需按优先顺序写下这一天你需要做的3件最重要的事情，然后从头做起。即使你只能完成其中的一件事，你仍然完成了今天最重要的事情。也许你也会偏爱其他诸如GTD等方法。但是无论你如何组织工作，最关键的还是寻找那些最重要的工作，这样你就不必花费几天，几个星期甚至几个月的时间去忙于那些并不是很重要的事情。如果这些事情无关紧要，那么即使你快速的完成它们也是没有多大用处的。</p><h2 id="多虑。"><a href="#多虑。" class="headerlink" title="多虑。"></a>多虑。</h2><p>因为多虑而很少采取行动。陷于无穷的分析之中只会使你虚度光阴。行动之前加以思考是没有错的。做一些调查研究，制定一个计划，探究可能存在的积极以及不利因素。</p><p>但是强制性的反复思考就会成为另外一种浪费时间的做法了。在尝试之前你没有必要去从每一个角度检查每一件事情。而且你也不可以等到一个最完美的时间再去做事，因为这样的时间从来不会出现。如果你继续这样思考就只会使自己陷的越来越深，从而使采取行动变得越来越难。相反，虽然思考在一定程度上对你有所帮助，但你现在需要做的就只是停止思考，然后去做那些你应该做的事情。</p><h2 id="凡事过于消极"><a href="#凡事过于消极" class="headerlink" title="凡事过于消极"></a>凡事过于消极</h2><p>当你凡事都从消极方面考虑时，你的积极性就会被大大打击。你会发现到处都是问题和错误，而这些问题是本不存在的。你抓住细节不放。如果你想要寻找一个不做某事的理由，这当然没有问题。而当你从一个消极角度看问题时，每次你都可能找出十个借口。</p><p>因此你几乎一事无成。你向任何愿意倾听的人诉苦（也许很多人并不想听），抱怨你的工作，生活和领导有多么的差劲。你的生活取决于你如何看待这个世界，这已经成为一个能够自我实现的预测。</p><p>对此的一个解决方法就是了解消极方面的限度，认识到你的消极思考并不是这个世界的真实写照。然后不妨尝试一些其他的角度。举例来说，你可以尝试着培养一下凡事从更为积极和乐观的角度思考的习惯，这会对你大有帮助。通过这种方式，你也许就会开始尝试这种积极性的挑战。这并不容易，然而如果你接受了这种挑战，连续7天都只从积极方面思考，你就会突然意识到你看问题的角度和想法是如此深刻地影响着你对世界的理解和你所得到的成果。</p><h2 id="固执己见，与世隔绝"><a href="#固执己见，与世隔绝" class="headerlink" title="固执己见，与世隔绝"></a>固执己见，与世隔绝</h2><p>人们很难去承认自己的想法不是最佳选择，因此你越来越执着于自己的想法，变得闭目塞听。这会让你很难取得进步，比如说效率就会很难提高。在这种情况下，即使认真思考改变人生的可能性都会变得很难。</p><p>显然，解决方法之一就是打开心胸。开阔视野，从他人和自己的错误中汲取教训，从书籍等资源中获取知识。与任何事一样，这事说起来容易做起来难。正如前面所说，对此我的建议就是认识到你的知识领域毕竟是有限的，而你做事的方式也会存在不足。那么不妨就尝试一下新事物吧。</p><p>而我的另一条建议就是，阅读一下埃克哈特·托利的《新天地》，特别是有关Ego的章节。正如托利所建议的，如果你不再像Ego那样思考，你就会更加容易接受新思想，抛弃那些已经无用的旧思想。另外我想要补充说明的就是：不要迷信书本，也不要盲目追求新的信息，否则你就会成为一个沉迷于自我帮助的人。在行动中运用那些新信息和你学到的事情，然后加以尝试。</p><h2 id="持续信息过剩"><a href="#持续信息过剩" class="headerlink" title="持续信息过剩"></a>持续信息过剩</h2><p>信息过剩并不是说你过多的阅读，我所指的是所有输入信息的过剩。如果你让所有的信息都涌进大脑，这当然会导致难于清晰思考，因为刺激源太多了。以下就是这种习惯可能会存在的弊端：</p><ul><li><p>你所接受的一些信息也许会是消极的。媒体和周围环境会因种种原因提供一种消极的信息。如果你没有根据需要对信息加以选择，也许你就会陷入消极之中，从而影响到你的所思，所感，所为。</p></li><li><p>这会使你急于追赶当今发生的事情，然而每时每刻都有十几件事同时发生，想要追赶上它们几乎是不可能的事情。你的生活会因此充满压力。</p></li><li><p>如果你持续被信息轰炸，并且还试图将所有信息分类，那么你将很难做出决定并采取行动。就我个人而言，如果我得到过多的信息，就会造成某种形式上的瘫痪，一事无成。或者你会被这种习惯所困，终日急于忙碌在一些非重要的事情上。</p></li></ul><p>为了可以集中精力，清晰思考并付诸行动，你就需要在吸取信息时更有选择性。当你工作时尽可能的避免那些分散注意力的事物。关掉电话，断开网络，关上大门。你就会不可思议的发现，当你没有每隔五分钟就被打扰一次，没有机会因浏览RSS-feeds或喜爱的网站而拖延时，居然可以完成这么多的事情。</p><p>现在并不是说我建议你们停止阅读所有的博客或报纸。但是一定要清楚哪些是你真正想要阅读的，哪些只是用来打发时间的。同时你也可以查看其他开阔性信息的领域。</p><p>比如说，你没有必要陷入所有来自周围环境的消极情绪。如果周围的所有人都在拖延或者焦急的忙于各种非重要的事情时，你会很容易被这种情绪所影响。如果你有一扇心灵之门，关上它而去关注更为重要的事情，这会是个不错的主意。</p><h2 id="Habits-of-Highly-Ineffective-People"><a href="#Habits-of-Highly-Ineffective-People" class="headerlink" title="Habits of Highly Ineffective People"></a>Habits of Highly Ineffective People</h2><p>By Henrik Edberg</p><p>With a twist to the common list of habits that are useful to establish, here are 7 habits that you do best to avoid.</p><p>Just like finding habits that can be useful for you it’s important to find habits that are holding you back. Most of these 7 habits can easily become such a normal, everyday part of life that you hardly notice it (or how it’s affecting you). I’ve dabbled with all of them quite a bit. Not surprisingly I didn’t get much of the important stuff done. I´d also like to add that these are just 7 broad habits you can establish to become highly ineffective in most parts of your life. I pretty sure there are several more.</p><h2 id="Not-showing-up"><a href="#Not-showing-up" class="headerlink" title="Not showing up"></a>Not showing up</h2><p>Maybe you’ve heard this quote by Woody Allen:</p><p>“Eighty percent of success is showing up”</p><p>One of the biggest and simplest thing you can do to ensure more success in your life – whether it be in your social life, your career or with your health – is simply to show up more. If you want to improve your health then one of the most important and effective things you can do is just to show up at the gym every time you should be there.</p><p>The weather might be bad, you might not feel like going and you find yourself having all these other things you just must do. If you still go, if you show up at the gym when motivation is low you will improve a whole lot faster than if you just stayed at home relaxing on the sofa.</p><p>I think this applies to most areas of life. If you write or paint more, each day perhaps, you will improve quickly. If you get out more you can meet more new friends. If you go on more dates you chances of meeting someone special increases. Just showing up more can really make a big difference. Not showing up will not get you anywhere.</p><h2 id="Procrastinating-half-the-day"><a href="#Procrastinating-half-the-day" class="headerlink" title="Procrastinating half the day"></a>Procrastinating half the day</h2><p>To keep it short, my 3 favourite ways to get out of a procrastinating state are:</p><ul><li><p>Swallow that frog. What´s this means is simply to do the hardest and most important task of the day first thing in the morning. A good start in the morning lifts your spirits and creates a positive momentum for the rest of the day. That often creates a pretty productive day.</p></li><li><p>How do you eat an elephant? Don´t try to take it all in one big bite. It becomes overwhelming which leads to procrastination. Split a task into small actionable steps. Then just focus on the first step and nothing else. Just do that one until it’s done. Then move on to the next step.</p></li><li><p>The Get around to It Paraliminal. I find this guided mediation to be very useful. After 20 minutes of mostly just lying on my bed and listening I’m far more productive for a few days. I don´t feel the urge to sink into that procrastinating state or the need to find out what’s new over at one or five of my favourite websites.</p></li></ul><h2 id="When-actually-doing-something-doing-something-that-isn’t-the-most-important-thing-right-now"><a href="#When-actually-doing-something-doing-something-that-isn’t-the-most-important-thing-right-now" class="headerlink" title="When actually doing something, doing something that isn’t the most important thing right now"></a>When actually doing something, doing something that isn’t the most important thing right now</h2><p>One of the easiest habits to get stuck in, besides procrastinating, is to keep yourself busy with unimportant tasks.</p><p>To be effective you probably need some kind of time management-system. It might be something really simple, like using the 80/20-rule at the beginning of each day. The 80/20 rule, or the Pareto Principle as it´s also known, says that you´ll get 80 percent of your results from only 20 percent of your tasks and activities. So you need to focus most of your energy on those few important tasks to be effective.</p><p>When you have prioritized using this rule just write down the top 3 most important things you need to do that day. Then, from the top, start doing them. Even if you just get one of the things done, you have still done the most important thing you could do today. You may perhaps prefer some other system, such as GTD. But however you organise your work it’s still of highest priority to find the most important tasks so you don’t spend days, weeks or months doing busywork that isn’t that essential anyway. Just getting things done faster isn’t that useful if the things you get done are unimportant to you.</p><h2 id="Thinking-too-much"><a href="#Thinking-too-much" class="headerlink" title="Thinking too much"></a>Thinking too much</h2><p>And thereby seldom taking action. Paralysis by analysis can waste years of your life. There is nothing wrong with thinking before you do something. Do some research, make a plan, explore potential upsides and problems.</p><p>But compulsively thinking and thinking and thinking is just another way to waste your time. You don’t have to examine everything from every angle before you try it. And you can’t wait for the perfect time to do something. That time never comes. And if you keep thinking you’ll just dig yourself down deeper and deeper and taking action will become more and more difficult. Instead you just need to stop thinking. Shut of your mind – it just helps you up to a point – and go do whatever you need to do.</p><h2 id="Seeing-the-negative-and-downsides-in-just-about-anything"><a href="#Seeing-the-negative-and-downsides-in-just-about-anything" class="headerlink" title="Seeing the negative and downsides in just about anything"></a>Seeing the negative and downsides in just about anything</h2><p>When you see everything from a negative perspective you quickly punch a hole in your own motivation. You find faults everywhere and problems where there are really none. You cling to details. If you want to find a reason to not do something then that’s no problem. From a negative viewpoint you can find ten reasons every time.</p><p>And so very little gets done, you whine to anyone who wants to hear – and many who don’t – about how crappy your job, life and boss is. Which becomes a self-fulfilling prophecy as you create the life that is appropriate considering how think and see your world.</p><p>A solution is to realise the limits of a negative perspective. And that your perspective isn’t some kind of 100% true picture of the world. Then try other perspectives. For instance, trying to establish a habit of seeing things in a more positive and optimistic light can be quite useful. In that vein, you may want to try the Positivity Challenge. It´s not easy, but if you do the challenge and try to only think positive thoughts for 7 days it can give you an insight in how much your perspective and beliefs changes how you interpret your world. And what results you get.</p><h2 id="Clinging-to-your-own-thoughts-and-being-closed-to-outside-influences"><a href="#Clinging-to-your-own-thoughts-and-being-closed-to-outside-influences" class="headerlink" title="Clinging to your own thoughts and being closed to outside influences"></a>Clinging to your own thoughts and being closed to outside influences</h2><p>It can be hard to admit that what you thought or believed was not the best alternative. So you cling to your thoughts harder and harder and keep your mind closed. This makes it hard to improve and for instance to become more effective. Even really considering the possibility that you can change your life can be difficult in this position.</p><p>One solution, obviously, is to open up more. To open up and learn from the mistakes of others, from your own mistakes and from other sources like books. This is easy to say though. It can, as almost anything, be harder to do. One suggestion I have is to, like I said about the previous habit, realise the limits of what you know and the way you going about things. And then just try something new.</p><p>Another tip is to read A New Earth by Eckhart Tolle and especially look at the chapters about the Ego. If you stop identifying so much with your thoughts and your Ego, as Tolle prescribes, it becomes a whole a lot easier to let new ideas and thoughts come into your life. And to let go of old thoughts that aren’t useful to you anymore. On the other hand I’d like to add and counter-balance with these tips: don’t get stuck in reading, in just taking in new information either or you might become a self-help junkie. Use the new information, put what you have learned in to action and try it out.</p><h2 id="Constantly-on-information-overload"><a href="#Constantly-on-information-overload" class="headerlink" title="Constantly on information overload"></a>Constantly on information overload</h2><p>With information overload I don’t just mean that you read a lot. I pretty much mean an overload in all input. If you just let all information flow into your mind it will be hard to think clearly. It’s just too much stimulation. A few more potential downsides to this habit are:</p><ul><li><p>Some of the input you receive will be negative. The media and your surroundings often put a negative spin on things for various reasons. If you aren´t selective in what input you want in your life then you’ll be dragged into this negativity too. This affects how you think, feel and act.</p></li><li><p>It creates an urge to keep up with what’s happening but there are always ten more things happening so you can’t keep up. This makes life stressful.</p></li><li><p>It becomes hard to make decisions and take action if your mind is constantly bombarded with information or trying to sort through it all. Personally I find that if I get too much information it leads to a sort of paralysis. Not much get´s done. Or you get stuck in habit #3 and keep busy, busy, busy at high speed with low priority activities.</p></li></ul><p>To be able to focus, think more clearly and take action it´s useful to be more selective in what you let into your mind. When you work shut out as much distractions as possible. Shut off the phone, internet and shut the door. It is strange how much you can get done when you aren´t interrupted every fifth minute or have the opportunity to procrastinate by checking your RSS-feeds or favourite websites.</p><p>Now I´m not suggesting that you should stop reading all blogs or newspapers. But think about what you really want to read and what you read just read to fill your time. And have a look at other areas of input where the doors are wide-open.</p><p>For instance, you don´t have to let in all the negative emotions from your surroundings. If everyone else are procrastinating or are anxiously keeping themselves busy by doing low-priority tasks at warp speed it´s easy to be influenced by that mood. If you have a door, then it might be good idea to shut it and focus on doing more important things.</p>]]></content>
      
      
      <categories>
          
          <category> 60分加油站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那爱情,经不起等待</title>
      <link href="/%E9%82%A3%E7%88%B1%E6%83%85%E7%BB%8F%E4%B8%8D%E8%B5%B7%E7%AD%89%E5%BE%85/"/>
      <url>/%E9%82%A3%E7%88%B1%E6%83%85%E7%BB%8F%E4%B8%8D%E8%B5%B7%E7%AD%89%E5%BE%85/</url>
      
        <content type="html"><![CDATA[<p>从古至今，爱情一直是人类的永恒不变的讨论话题之一。在中国的神话里，就连拥有至高无上的权力的玉帝也得有一个贤内助——王母娘娘。他们可以日夜厮守在一起，但是古语又说：“两情若是久长时，又岂在朝朝暮暮。”于是就有每年的七夕鹊桥相会的忠贞的爱情故事。  </p><p>很可惜，我们都是普通人，每年只见面一次的爱情我们承受不起(地上一年，天上一日，织女可是天天看见牛郎)。即使不是普通人，比如说《仙剑奇侠传三》里面的的水碧答应等待溪风500年，可是500年过后，溪风并没有回来，他被魔尊重楼困住了。还好他们不是人，可以在经历了漫长的岁月之后体会到苍白的爱情滋味之后然后同生共死。能力超出我们很多的他们都不能决定自己的爱情之路，我们对未来的预测又是何其的脆弱。纵使“君当作磐石，妾当作蒲苇，蒲苇韧如丝，磐石无转移”的情比金坚，有时也免不了“君不见，满林红叶，尽是离人眼中血”的离别之苦。  </p><p>有分离就有了等待，在那些不可以查证的世界里，总有一些爱情经受了时间的考验。杨过在忘情谷苦苦守候了十六年，日思夜盼，白了黑发，终与小龙女相见。却不知道在这漫长的岁月里，另一个女子却为之付出了青春，该女子姓郭，单名一个襄字。试问一下，我们一生又有多少十六年？扪心自问，我们都比不过杨过，他可以一心一意地等待小龙女的出现。我们有自己的梦想，有自己的事业，有时候要有那么一个他（她）陪在自己的身旁。身处两地的爱人，可以电话，可以视频。但是这些往往敌不过劳累时他（她）一杯热乎乎的茶，悲观时他（她）肯定的眼神，孤单时一个温暖的拥抱，这些都是身处异地的他（她）所不能给予的。  </p><p>需要等待的爱情，彼此相遇不是太早，便是太晚。谁会让你的青春虚位以待？人生数十年的短暂光阴，本来就是苦的，为何还要平添几年相思之苦？分开的原因可能是因为对方的贫穷，他要外出打拼几年；可能是因为对方的梦想要出国深造。回来之时，手里牵着另外一个人的手，甚至孩子都有了。你能怪谁，怪他的信誓旦旦，口是心非？还是怪第三者闯入你们的生活？还是怪自己当时头昏脑胀，相信了他的海誓山盟？即便悔恨当初，你的青春早就不在了。  </p><p>可以说：等待是爱情里面最大的谎言！你不一定是他最合适的，当他遇到了他最合适的，他为什么还要选择你？他可以在伤害你之后，轻声的对你说一声对不起，然后若无其事的转身离开，因为他并不在乎你的那声没关系。可是说等待就是给他一个选择的机会。“鱼与熊掌不可兼得，舍鱼而取熊掌者也”假如你做了鱼，那就是你的可悲了。还是早点找到一个适合自己的熊掌不放手吧！  </p><p>爱就在一起，有福同享有难同当。可以小别胜新婚，但是不要给别人一个空位。加入早就知道不能够在一起，就不要在别人的心上添加一道伤痕，可以在别人的失败中吸取经验，何必自己亲身实验？  </p><p>最后说一句：愿有情人终成眷属！</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爱情 </tag>
            
            <tag> 等待 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎么学习C++</title>
      <link href="/%E6%80%8E%E4%B9%88%E5%AD%A6%E4%B9%A0C/"/>
      <url>/%E6%80%8E%E4%B9%88%E5%AD%A6%E4%B9%A0C/</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>该文章转自网上，个人感觉适用于多种编程语言,未知原作者是谁。未经允许转载,向原作者表示抱歉。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>1.把C++当成一门新的语言学习（和C没啥关系！真的。）；</p><p>2.看《Thinking In C++》，不要看《C++变成死相》；</p><p>3.看《The C++ Programming Language》和《Inside The C++ Object Model》,不要因为他们很难而我们自己是初学者所以就不看；</p><p>4.不要被VC、BCB、BC、MC、TC等词汇所迷惑——他们都是集成开发环境，而我们要学的是一门语言；</p><p>5.不要放过任何一个看上去很简单的小编程问题——他们往往并不那么简单，或者可以引伸出很多知识点；</p><p>6.会用Visual C++，并不说明你会C++；</p><p>7.学class并不难，template、STL、generic programming也不过如此——难的是长期坚持实践和不遗余力的博览群书；</p><p>8.如果不是天才的话，想学编程就不要想玩游戏——你以为你做到了，其实你的C++水平并没有和你通关的能力一起变高——其实可以时刻记住：学C++是为了编游戏的；</p><p>9.看Visual C++的书，是学不了C++语言的；</p><p>10.浮躁的人容易说：XX语言不行了，应该学YY；——是你自己不行了吧！？</p><p>11.浮躁的人容易问：我到底该学什么；——别问，学就对了；</p><p>12.浮躁的人容易问：XX有钱途吗；——建议你去抢银行；</p><p>13.浮躁的人容易说：我要中文版！我英文不行！——不行？学呀！</p><p>14.浮躁的人容易问：XX和YY哪个好；——告诉你吧，都好——只要你学就行；</p><p>15.浮躁的人分两种：a)只观望而不学的人；b)只学而不坚持的人；</p><p>16.把时髦的技术挂在嘴边，还不如把过时的技术记在心里；</p><p>17.C++不仅仅是支持面向对象的程序设计语言；</p><p>18.学习编程最好的方法之一就是阅读源代码；</p><p>19.在任何时刻都不要认为自己手中的书已经足够了；</p><p>20.请阅读《The Standard C++ Bible》(中文版：标准C++宝典)，掌握C++标准；</p><p>21.看得懂的书，请仔细看；看不懂的书，请硬着头皮看；</p><p>22.别指望看第一遍书就能记住和掌握什么——请看第二遍、第三遍；</p><p>23.请看《Effective C++》和《More Effective C++》以及《Exceptional C++》；</p><p>24.不要停留在集成开发环境的摇篮上，要学会控制集成开发环境，还要学会用命令行方式处理程序；</p><p>25.和别人一起讨论有意义的C++知识点，而不是争吵XX行不行或者YY与ZZ哪个好；</p><p>26.请看《程序设计实践》，并严格的按照其要求去做；</p><p>27.不要因为C和C++中有一些语法和关键字看上去相同，就认为它们的意义和作用完全一样；</p><p>28.C++绝不是所谓的C的“扩充”——如果C++一开始就起名叫Z语言，你一定不会把C和Z语言联系得那么紧密；</p><p>29.请不要认为学过XX语言再改学C++会有什么问题——你只不过又在学一门全新的语言而已；</p><p>30.读完了《Inside The C++ Object Model》以后再来认定自己是不是已经学会了C++；</p><p>31.学习编程的秘诀是：编程，编程，再编程；</p><p>32.请留意下列书籍：《C++面向对象高效编程（C++ Effective Object-Oriented Software Construction）》《面向对象软件构造(Object-Oriented Software Construction)》《设计模式（Design Patterns）》《The Art of Computer Programming》；</p><p>33.记住：面向对象技术不只是C++专有的；</p><p>34.请把书上的程序例子亲手输入到电脑上实践，即使配套光盘中有源代码；</p><p>35.把在书中看到的有意义的例子扩充；</p><p>36.请重视C++中的异常处理技术，并将其切实的运用到自己的程序中；</p><p>37.经常回顾自己以前写过的程序，并尝试重写，把自己学到的新知识运用进去；</p><p>38.不要漏掉书中任何一个练习题——请全部做完并记录下解题思路；</p><p>39.C++语言和C++的集成开发环境要同时学习和掌握；</p><p>40.既然决定了学C++,就请坚持学下去，因为学习程序设计语言的目的是掌握程序设计技术，而程序设计技术是跨语言的；</p><p>41.就让C++语言的各种平台和开发环境去激烈的竞争吧，我们要以学习C++语言本身为主；</p><p>42.当你写C++程序写到一半却发现自己用的方法很拙劣时，请不要马上停手；请尽快将余下的部分粗略的完成以保证这个设计的完整性，然后分析自己的错误并重新设计和编写（参见43）；</p><p>43.别心急，设计C++的class确实不容易；自己程序中的class和自己的class设计水平是在不断的编程实践中完善和发展的；</p><p>44.决不要因为程序“很小”就不遵循某些你不熟练的规则——好习惯是培养出来的，而不是一次记住的；</p><p>45.每学到一个C++难点的时候，尝试着对别人讲解这个知识点并让他理解——你能讲清楚才说明你真的理解了；</p><p>46.记录下在和别人交流时发现的自己忽视或不理解的知识点；</p><p>47.请不断地对自己写的程序提出更高的要求,哪怕你的程序版本号会变成Version 100.XX；</p><p>48.保存好你写过的所有的程序——那是你最好的积累之一；</p><p>49.请不要做浮躁的人；</p><p>50.请热爱C++!</p><p>补充:</p><p>对c++学习的一点感想，希望对初学者能有些帮助</p><p>1.如果你以前从来没有接触过c++，那么选择的第一本c++教程就显得尤为重要，我认为你可以参照以下的标准进行选择：</p><p>a.对标准c++进行讲解，毕竟c++比从前发生了很大的变化。</p><p>b.要求全面，但不要很深，这要有助于你对于c++有一个全面的认识，打好基础，并且易懂的教材还能加快学习的进度，让自己保持一种成就感。</p><p>c.要有完整的范例来讲解每一个知识点如何运用，请注意这里所说的完整，并不是一个个代码片断。因为由于你以前从未接触过用c++进行编程，完整的代码可以使你有一个整体的概念，并且能够很快去进行大量的实践，因为变编程是从模仿开始，完整的代码恰恰告诉你了一个完整的步骤。不必自己去揣测。</p><p>d.推荐：《c++ primer plus》</p><p>2.当你有了一定的基础以后，就要选择一些书来迅速提高自己。这类书的特点是不仅仅教你如何去运用，而且要叫你如何去思考，并且你读起来也不是那么轻松。它意味深远，并不是你读一遍就能掌握的。</p><p>推荐：《thinking in c++》《effective c++》《more effective c++》《c++ programming language》…《c++ 沉思录》</p><p>3.接下来就是对第二步所介绍的书籍进行反复的阅读，并且进行实践。由于这些书一位深远，每个人基于自己的基础都会有不同的收获，例如如果你的基础还没有达到某一高度，那么你就对一些精深的技术视而不见，不信？你可以试试，看看当自己有了一定提高之后再来读从前的一本书，你会发现许多新的东西。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>除去部分推荐的书籍,其中很多部分思想都适用于其余编程语言或技能的学习。</p>]]></content>
      
      
      <categories>
          
          <category> IT经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我们工作到底为了什么</title>
      <link href="/%E6%88%91%E4%BB%AC%E5%B7%A5%E4%BD%9C%E5%88%B0%E5%BA%95%E4%B8%BA%E4%BA%86%E4%BB%80%E4%B9%88/"/>
      <url>/%E6%88%91%E4%BB%AC%E5%B7%A5%E4%BD%9C%E5%88%B0%E5%BA%95%E4%B8%BA%E4%BA%86%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<p>HP大中华区总裁孙振耀退休感言<br>如果这篇文章没有分享给你，那是我的错。<br>如果这篇文章分享给你了，你却没有读，继续走弯路的你不要怪我。<br>如果你看了这篇文章，只读了一半你就说没时间了，说明你已经是个“茫”人了。<br>如果你看完了，你觉得这篇文章只是讲讲大道理，说明你的人生阅历还不够，需要你把这篇文章珍藏，走出去碰几年壁，头破血流后再回来，再读，你就会感叹自己的年少无知。<br>如果你看完了，觉得很有道理，然后束之高阁，继续走进拥挤的地铁，依然用着自己昨日的观念来思考自己的未来，你的人生也将继续重复着昨日的状况。<br>如果你看完了，觉得那是一个过来人，对你的人生忠告，并你也愿意用他告诉你的思想去指导自己今后的生活，对你来讲成功不是很难，难的是你是否可以用这篇文章里的思想一直鞭策自己。<br>如果你看完了，觉得那是一个长辈用他的一生的时间来写的一篇对你忠告的文章，说明你已经有了和他相似的人生阅历，只要你继续努力，成就伟业并不难，难的是你是否可以把自己的人生经验和他人分享呢？<br>体验决定深度，知识决定广度。你的人生是什么呢？ </p><h2 id="关于工作与生活"><a href="#关于工作与生活" class="headerlink" title="关于工作与生活"></a>关于工作与生活</h2><p>　　<br>　　我有个有趣的观察，外企公司多的是25-35岁的白领，40岁以上的员工很少，二三十岁的外企员工是意气风发的，但外企公司40岁附近的经理人是很尴尬的。我见过的40岁附近的外企经理人大多在一直跳槽，最后大多跳到民企，比方说，唐骏。外企员工的成功很大程度上是公司的成功，并非个人的成功，西门子的确比国美大，但并不代表西门子中国经理比国美的老板强，甚至可以说差得很远。而进外企的人往往并不能很早理解这一点，把自己的成功90％归功于自己的能力，实际上，外企公司随便换个中国区总经理并不会给业绩带来什么了不起的影响。好了问题来了，当这些经理人40多岁了，他们的薪资要求变得很高，而他们的才能其实又不是那么出众，作为外企公司的老板，你会怎么选择？有的是只要不高薪水的，要出位的精明强干精力充沛的年轻人，有的是，为什么还要用你？<br>　　<br>　　从上面这个例子，其实可以看到我们的工作轨迹，二三十岁的时候，生活的压力还比较小，身体还比较好，上面的父母身体还好，下面又没有孩子，不用还房贷，也没有孩子要上大学，当个外企小白领还是很光鲜的，挣得不多也够花了。但是人终归要结婚生子，终归会老，到了40岁，父母老了，要看病要吃药，要有人看护，自己要还房贷，要过基本体面的生活，要养小孩……那个时候需要挣多少钱才够花才重要。所以，看待工作，眼光要放远一点，一时的谁高谁低并不能说明什么。<br>　　<br>　　从这个角度上来说，我不太赞成过于关注第一份工作的薪水，更没有必要攀比第一份工作的薪水，这在刚刚出校园的学生中间是很常见的。正常人大概要工作 35年，这好比是一场马拉松比赛，和真正的马拉松比赛不同的是，这次比赛没有职业选手，每个人都只有一次机会。要知到，有很多人甚至坚持不到终点，大多数人最后是走到终点的，只有少数人是跑过终点的，因此在刚开始的时候，去抢领先的位置并没有太大的意义。刚进社会的时候如果进500强公司，大概能拿到3k -6k/月的工资，有些特别技术的人才可能可以到8k/月，可问题是，5年以后拿多少？估计5k-10k了不起了。起点虽然高，但增幅有限，而且，后面的年轻人追赶的压力越来越大。<br>　　<br>　　我前两天问我的一个销售，你会的这些东西一个新人2年就都学会了，但新人所要求的薪水却只是你的一半，到时候，你怎么办？<br>　　职业生涯就像一场体育比赛，有初赛、复赛、决赛。初赛的时候大家都刚刚进社会，大多数都是实力一般的人，这时候努力一点认真一点很快就能让人脱颖而出，于是有的人二十多岁做了经理，有的人迟些也终于赢得了初赛，三十多岁成了经理。然后是复赛，能参加复赛的都是赢得初赛的，每个人都有些能耐，在聪明才智上都不成问题，这个时候再想要胜出就不那么容易了，单靠一点点努力和认真还不够，要有很强的坚忍精神，要懂得靠团队的力量，要懂得收服人心，要有长远的眼光……<br>　　<br>　　看上去赢得复赛并不容易，但，还不是那么难。因为这个世界的规律就是给人一点成功的同时让人骄傲自满，刚刚赢得初赛的人往往不知道自己赢得的仅仅是初赛，有了一点小小的成绩大多数人都会骄傲自满起来，认为自己已经懂得了全部，不需要再努力再学习了，他们会认为之所以不能再进一步已经不是自己的原因了。虽然他们仍然不好对付，但是他们没有耐性，没有容人的度量，更没有清晰长远的目光。就像一只愤怒的斗牛，虽然猛烈，最终是会败的，而赢得复赛的人则象斗牛士一样，不急不躁，跟随着自己的节拍，慢慢耗尽对手的耐心和体力。赢得了复赛以后，大约已经是一位很了不起的职业经理人了，当上了中小公司的总经理，大公司的副总经理，主管着每年几千万乃至几亿的生意。<br>　　<br>　　最终的决赛来了，说实话我自己都还没有赢得决赛，因此对于决赛的决胜因素也只能凭自己的猜测而已，这个时候的输赢或许就像武侠小说里写得那样，大家都是高手，只能等待对方犯错了，要想轻易击败对手是不可能的，除了使上浑身解数，还需要一点运气和时间。世界的规律依然发挥着作用，赢得复赛的人已经不只是骄傲自满了，他们往往刚愎自用，听不进去别人的话，有些人的脾气变得暴躁，心情变得浮躁，身体变得糟糕，他们最大的敌人就是他们自己，在决赛中要做的只是不被自己击败，等着别人被自己击败。这和体育比赛是一样的，最后高手之间的比赛，就看谁失误少谁就赢得了决赛。 　　 </p><h2 id="根源"><a href="#根源" class="headerlink" title="根源"></a>根源</h2><p>　　<br>　　你工作快乐么？你的工作好么？<br>　　<br>　　有没有觉得干了一段时间以后工作很不开心？有没有觉得自己入错了行？有没有觉得自己没有得到应有的待遇？有没有觉得工作像一团乱麻每天上班都是一种痛苦？有没有很想换个工作？有没有觉得其实现在的公司并没有当初想象得那么好？有没有觉得这份工作是当初因为生存压力而找的，实在不适合自己？你从工作中得到你想要得到的了么？你每天开心么？<br>　　<br>　　天涯上愤怒的人很多，你有没有想过，你为什么不快乐？你为什么愤怒？<br>　　<br>　　其实，你不快乐的根源，是因为你不知道要什么！你不知道要什么，所以你不知道去追求什么，你不知道追求什么，所以你什么也得不到。<br>　　<br>　　我总觉得，职业生涯首先要关注的是自己，自己想要什么？大多数人大概没想过这个问题，唯一的想法只是——我想要一份工作，我想要一份不错的薪水，我知道所有人对于薪水的渴望，可是，你想每隔几年重来一次找工作的过程么？你想每年都在这种对于工作和薪水的焦急不安中度过么？不想的话，就好好想清楚。饮鸩止渴，不能因为口渴就拼命喝毒药。越是焦急，越是觉得自己需要一份工作，越饥不择食，越想不清楚，越容易失败，你的经历越来越差，下一份工作的人看着你的简历就皱眉头。于是你越喝越渴，越渴越喝，陷入恶性循环。最终只能哀叹世事不公或者生不逢时，只能到天涯上来发泄一把，在失败者的共鸣当中寻求一点心理平衡罢了。大多数人都有生存压力，我也是，有生存压力就会有很多焦虑，积极的人会从焦虑中得到动力，而消极的人则会因为焦虑而迷失方向。所有人都必须在压力下做出选择，这就是世道，你喜欢也罢不喜欢也罢。<br>　　<br>　　一般我们处理的事情分为重要的事情和紧急的事情，如果不做重要的事情就会常常去做紧急的事情。比如锻炼身体保持健康是重要的事情，而看病则是紧急的事情。如果不锻炼身体保持健康，就会常常为了病痛烦恼。又比如防火是重要的事情，而救火是紧急的事情，如果不注意防火，就要常常救火。找工作也是如此，想好自己究竟要什么是重要的事情，找工作是紧急的事情，如果不想好，就会常常要找工作。往往紧急的事情给人的压力比较大，迫使人们去赶紧做，相对来说重要的事情反而没有那么大的压力，大多数人做事情都是以压力为导向的，压力之下，总觉得非要先做紧急的事情，结果就是永远到处救火，永远没有停歇的时候。（很多人的工作也像是救火队一样忙碌痛苦，也是因为工作中没有做好重要的事情。）那些说自己活在水深火热为了生存顾不上那么多的朋友，今天找工作困难是当初你们没有做重要的事情，是结果不是原因。如果今天你们还是因为急于要找一份工作而不去思考，那么或许将来要继续承受痛苦找工作的结果。<br>　　<br>　　我始终觉得我要说的话题，沉重了点，需要很多思考，远比唐笑打武警的话题来的枯燥乏味，但是，天下没有轻松的成功，成功，要付代价。请先忘记一切的生存压力，想想这辈子你最想要的是什么？所以，最要紧的事情，先想好自己想要什么。 　　 </p><h2 id="什么是好工作"><a href="#什么是好工作" class="headerlink" title="什么是好工作"></a>什么是好工作</h2><p>　　<br>　　当初微软有个唐骏，很多大学里的年轻人觉得这才是他们向往的职业生涯，我在清华bbs里发的帖子被这些学子们所不屑，那个时候学生们只想出国或者去外企，不过如今看来，我还是对的，唐骏去了盛大，陈天桥创立的盛大，一家民营公司。一个高学历的海归在500强的公司里拿高薪水，这大约是很多年轻人的梦想，问题是，每年毕业的大学生都在做这个梦，好的职位却只有500个。<br>　　<br>　　人都是要面子的，也是喜欢攀比的，即使在工作上也喜欢攀比，不管那是不是自己想要的。大家认为外企公司很好，可是好在哪里呢？好吧，他们在比较好的写字楼，这是你想要的么？他们出差住比较好的酒店，这是你想要的么？别人会羡慕一份外企公司的工作，这是你想要的么？那一切都是给别人看的，你干吗要活得那么辛苦给别人看？另一方面，他们薪水福利一般，并没有特别了不起，他们的晋升机会比较少，很难做到很高阶的主管，他们虽然厌恶常常加班，却不敢不加班，因为“你不干有得是人干”，大部分情况下会找个台湾人香港人新加坡人来管你，而这些人又往往有些莫名其妙的优越感。你想清楚了么？500强一定好么？找工作究竟是考虑你想要什么，还是考虑别人想看什么？<br>　　<br>　　我的大学同学们大多数都到美国了，甚至毕业这么多年了，还有人最近到国外去了。出国真的有那么好么？我的大学同学们，大多数还是在博士、博士后、访问学者地挣扎着，至今只有一个正经在一个美国大学里拿到个正式的教职。国内的教授很难当么？我有几个表亲也去了国外了，他们的父母独自在国内，没有人照顾，有好几次人在家里昏倒都没人知道，出国，真的这么光彩么？就像有人说的“很多事情就像看A片，看的人觉得很爽，做的人未必。”<br>　　<br>　　人总想找到那个最好的，可是，什么是最好的？你觉得是最好的那个，是因为你的确了解，还是因为别人说他是最好的？即使他对于别人是最好的，对于你也一定是最好的么？<br>　　<br>　　对于自己想要什么，自己要最清楚，别人的意见并不是那么重要。很多人总是常常被别人的意见所影响，亲戚的意见，朋友的意见，同事的意见……问题是，你究竟是要过谁的一生？人的一生不是父母一生的续集，也不是儿女一生的前传，更不是朋友一生的外篇，只有你自己对自己的一生负责，别人无法也负不起这个责任。自己做的决定，至少到最后，自己没什么可后悔。对于大多数正常智力的人来说，所做的决定没有大的对错，无论怎么样的选择，都是可以尝试的。比如你没有考自己上的那个学校，没有入现在这个行业，这辈子就过不下去了？就会很失败？不见得。<br>　　<br>　　我想，好工作，应该是适合你的工作，具体点说，应该是能给你带来你想要的东西的工作，你或许应该以此来衡量你的工作究竟好不好，而不是拿公司的大小，规模，外企还是国企，是不是有名，是不是上市公司来衡量。小公司，未必不是好公司，赚钱多的工作，也未必是好工作。你还是要先弄清楚你想要什么，如果你不清楚你想要什么，你就永远也不会找到好工作，因为你永远只看到你得不到的东西，你得到的，都是你不想要的。<br>　　可能，最好的，已经在你的身边，只是，你还没有学会珍惜。人们总是盯着得不到的东西，而忽视了那些已经得到的东西。 　　 </p><h2 id="普通人"><a href="#普通人" class="headerlink" title="普通人"></a>普通人</h2><p>　　<br>　　我发现中国人的励志和国外的励志存在非常大的不同，中国的励志比较鼓励人立下大志愿，卧薪尝胆，有朝一日成富成贵。而国外的励志比较鼓励人勇敢面对现实生活，面对普通人的困境，虽然结果也是成富成贵，但起点不一样，相对来说，我觉得后者在操作上更现实，而前者则需要用999个失败者来堆砌一个成功者的故事。<br>　　<br>　　我们都是普通人，普通人的意思就是，概率这件事是很准的。因此，我们不会买彩票中500万，我们不会成为比尔盖茨或者李嘉诚，我们不会坐飞机掉下来，我们当中很少的人会创业成功，我们之中有30％的人会离婚，我们之中大部分人会活过65岁……<br>　　<br>　　所以请你在想自己要什么的时候，要得“现实”一点，你说我想要做李嘉诚，抱歉，我帮不上你。成为比尔盖茨或者李嘉诚这种人，是靠命的，看我写的这篇文章绝对不会让你成为他们，即使你成为了他们，也绝对不是我这篇文章的功劳。“王侯将相宁有种乎”但真正当皇帝的只有一个人，王侯将相，人也不多。目标定得高些对于喜欢挑战的人来说有好处，但对于大多数普通人来说，反而比较容易灰心沮丧，很容易就放弃了。<br>　　<br>　　回过头来说，李嘉诚比你有钱大致50万倍，他比你更快乐么？或许。有没有比你快乐50万倍，一定没有。他比你最多也就快乐一两倍，甚至有可能还不如你快乐。寻找自己想要的东西不是和别人比赛，比谁要得更多更高，比谁的目标更远大。虽然成为李嘉诚这个目标很宏大，但你并不见得会从这个目标以及追求目标的过程当中获得快乐，而且基本上你也做不到。你必须听听你内心的声音，寻找真正能够使你获得快乐的东西，那才是你想要的东西。<br>　　你想要的东西，或者我们把它称之为目标，目标其实并没有高低之分，你不需要因为自己的目标没有别人远大而不好意思，达到自己的目标其实就是成功，成功有大有小，快乐却是一样的。我们追逐成功，其实追逐的是成功带来的快乐，而非成功本身。职业生涯的道路上，我们常常会被攀比的心态蒙住眼睛，忘记了追求的究竟是什么，忘记了是什么能使我们更快乐。<br>　　<br>　　社会上一夜暴富的新闻很多，这些消息，总会在我们的心里面掀起很多涟漪，涟漪多了就变成惊涛骇浪，心里的惊涛骇浪除了打翻承载你目标的小船，并不会使得你也一夜暴富。“只见贼吃肉，不见贼挨揍。”我们这些普通人既没有当贼的勇气，又缺乏当贼的狠辣绝决，虽然羡慕吃肉，却更害怕挨揍，偶尔看到几个没挨揍的贼就按奈不住，或者心思活动，或者大感不公，真要叫去做贼，却也不敢。<br>　　<br>我还是过普通人的日子，要普通人的快乐，至少，晚上睡得着觉。</p><h2 id="跳槽与积累"><a href="#跳槽与积累" class="headerlink" title="跳槽与积累"></a>跳槽与积累</h2><p>首先要说明，工作是一件需要理智的事情，所以不要在工作上耍个性，天涯上或许会有人觉得你很有个性而叫好，煤气公司电话公司不会因为觉得你很有个性而免了你的帐单。当你很帅地炒掉了你的老板，当你很酷地挖苦了一番招聘的HR，账单还是要照付，只是你赚钱的时间更少了，除了你自己，没人受损失。 </p><p>我并不反对跳槽，但跳槽决不是解决问题的办法，而且频繁跳槽的后果是让人觉得没有忠诚度可言，而且不能安心工作。现在很多人从网上找工作，很多找工作的网站常常给人出些馊主意，要知道他们是盈利性企业，当然要从自身盈利的角度来考虑，大家越是频繁跳槽频繁找工作他们越是生意兴隆，所以鼓动人们跳槽是他们的工作。所以他们会常常告诉你，你拿的薪水少了，你享受的福利待遇差了，又是“薪情快报”又是“赞叹自由奔放的灵魂”。至于是否会因此让你不能安心，你跳了槽是否解决问题，是否更加开心，那个，他们管不着。 </p><p>要跳槽肯定是有问题，一般来说问题发生了，躲是躲不开的，很多人跳槽是因为这样或者那样的不开心，如果这种不开心，在现在这个公司不能解决，那么在下一个公司多半也解决不掉。你必须相信，90%的情况下，你所在的公司并没有那么烂，你认为不错的公司也没有那么好。就像围城里说的，“城里的人拼命想冲出来，而城外的人拼命想冲进去。”每个公司都有每个公司的问题，没有问题的公司是不存在的。换个环境你都不知道会碰到什么问题，与其如此，不如就在当下把问题解决掉。很多问题当你真的想要去解决的时候，或许并没有那么难。有的时候你觉得问题无法解决，事实上，那只是“你觉得”。 </p><p>人生的曲线应该是曲折向上的，偶尔会遇到低谷但大趋势总归是曲折向上的，而不是象脉冲波一样每每回到起点，我见过不少面试者，30多岁了，四五份工作经历，每次多则3年，少则1年，30多岁的时候回到起点从一个初级职位开始干起，拿基本初级的薪水，和20多岁的年轻人一起竞争，不觉得有点辛苦么？这种日子好过么？ </p><p>我非常不赞成在一个行业超过3年以后换行业，基本上，35岁以前我们的生存资本靠打拼，35岁以生存的资本靠的就是积累，这种积累包括人际关系，经验，人脉，口碑……如果常常更换行业，代表几年的积累付之东流，一切从头开始，如果换了两次行业，35岁的时候大概只有5年以下的积累，而一个没有换过行业的人至少有了10年的积累，谁会占优势？工作到2-3年的时候，很多人觉得工作不顺利，好像到了一个瓶颈，心情烦闷，就想辞职，乃至换一个行业，觉得这样所有一切烦恼都可以抛开，会好很多。其实这样做只是让你从头开始，到了时候还是会发生和原来行业一样的困难，熬过去就向上跨了一大步，要知道每个人都会经历这个过程，每个人的职业生涯中都会碰到几个瓶颈，你熬过去了而别人没有熬过去你就领先了。跑长跑的人会知道，开始的时候很轻松，但是很快会有第一次的难受，但过了这一段又能跑很长一段，接下来会碰到第二次的难受，坚持过了以后又能跑一段，如此往复，难受一次比一次厉害，直到坚持不下去了。大多数人第一次就坚持不了了，一些人能坚持到第二次，第三次虽然大家都坚持不住了，可是跑到这里的人也没几个了，这点资本足够你安稳活这一辈子了。 </p><p>一份工作到两三年的时候，大部分人都会变成熟手，这个时候往往会陷入不断的重复，有很多人会觉得厌倦，有些人会觉得自己已经搞懂了一切，从而懒得去寻求进步了。很多时候的跳槽是因为觉得失去兴趣了，觉得自己已经完成比赛了。其实这个时候比赛才刚刚开始，工作两三年的人，无论是客户关系，人脉，手下，和领导的关系，在业内的名气……还都是远远不够的，但稍有成绩的人总是会自我感觉良好的，每个人都觉得自己跟客户关系铁得要命，觉得自己在业界的口碑好得很。其实可以肯定地说，一定不是，这个时候，还是要拿出前两年的干劲来，稳扎稳打，积累才刚刚开始。<br>你足够了解你的客户吗？你知道他最大的烦恼是什么吗？你足够了解你的老板么？你知道他最大的烦恼是什么吗？你足够了解你的手下么？你知道他最大的烦恼是什么吗？如果你不知道，你凭什么觉得自己已经积累够了？如果你都不了解，你怎么能让他们帮你的忙，做你想让他们做的事情？如果他们不做你想让他们做的事情，你又何来的成功？ </p><h2 id="等待"><a href="#等待" class="headerlink" title="等待"></a>等待</h2><p>这是个浮躁的人们最不喜欢的话题，本来不想说这个话题，因为会引起太多的争论，而我又无意和人争论这些，但是考虑到对于职业生涯的长久规划，这是一个躲避不了的话题，还是决定写一写，不爱看的请离开吧。 </p><p>并不是每次穿红灯都会被汽车撞，并不是每个罪犯都会被抓到，并不是每个错误都会被惩罚，并不是每个贪官都会被枪毙，并不是你的每一份努力都会得到回报，并不是你的每一次坚持都会有人看到，并不是你每一点付出都能得到公正的回报，并不是你的每一个善意都能被理解……这个，就是世道。好吧，世道不够好，可是，你有推翻世道的勇气么？如果没有，你有更好的解决办法么？有很多时候，人需要一点耐心，一点信心。每个人总会轮到几次不公平的事情，而通常，安心等待是最好的办法。 </p><p>有很多时候我们需要等待，需要耐得住寂寞，等待属于你的那一刻。周润发等待过，刘德华等待过，周星驰等待过，王菲等待过，张艺谋也等待过……看到了他们如今的功成名就的人，你可曾看到当初他们的等待和耐心？你可曾看到金马奖影帝在街边摆地摊？你可曾看到德云社一群人在剧场里给一位观众说相声？你可曾看到周星驰的角色甚至连一句台词都没有？每一个成功者都有一段低沉苦闷的日子，我几乎能想象得出来他们借酒浇愁的样子，我也能想象得出他们为了生存而挣扎的窘迫。在他们一生最中灿烂美好的日子里，他们渴望成功，但却两手空空，一如现在的你。没有人保证他们将来一定会成功，而他们的选择是耐住寂寞。如果当时的他们总念叨着“成功只是属于特权阶级的”，你觉得他们今天会怎样？ </p><p>曾经我也不明白有些人为什么并不比我有能力却要坐在我的头上，年纪比我大就一定要当我的领导么？为什么有些烂人不需要努力就能赚钱？为什么刚刚改革开放的时候的人能那么容易赚钱，而轮到我们的时候，什么事情都要正规化了？有一天我突然想，我还在上学的时候他们就在社会里挣扎奋斗了，他们在社会上奋斗积累了十几二十年，我们新人来了，他们有的我都想要，我这不是在要公平，我这是在要抢劫。因为我要得太急，因为我忍不住寂寞。二十多岁的男人，没有钱，没有事业，却有蓬勃的欲望。 </p><p>人总是会遇到挫折的，人总是会有低潮的，人总是会有不被人理解的时候的，人总是有要低声下气的时候，这些时候恰恰是人生最关键的时候，因为大家都会碰到挫折，而大多数人过不了这个门槛，你能过，你就成功了。在这样的时刻，我们需要耐心等待，满怀信心地去等待，相信，生活不会放弃你，机会总会来的。至少，你还年轻，你没有坐牢，没有生治不了的病，没有欠还不起的债。比你不幸的人远远多过比你幸运的人，你还怕什么？路要一步步走，虽然到达终点的那一步很激动人心，但大部分的脚步是平凡甚至枯燥的，但没有这些脚步，或者耐不住这些平凡枯燥，你终归是无法迎来最后的那些激动人心。 </p><p>逆境，是上帝帮你淘汰竞争者的地方。要知道，你不好受，别人也不好受，你坚持不下去了，别人也一样，千万不要告诉别人你坚持不住了，那只能让别人获得坚持的信心，让竞争者看着你微笑的面孔，失去信心，退出比赛。胜利属于那些有耐心的人。 </p><p>在最绝望的时候，我会去看电影《The Pursuit of Happyness》《JerryMaguire》，让自己重新鼓起勇气，因为，无论什么时候，我们总还是有希望。当所有的人离开的时候，我不失去希望，我不放弃。每天下班坐在车里，我喜欢哼着《隐形的翅膀》看着窗外，我知道，我在静静等待，等待属于我的那一刻。 </p><p>原贴里伊吉网友的话我很喜欢，抄录在这里： </p><p>每个人都希望，自己是独一无二的特殊者<br>含着金匙出生、投胎到好家庭、工作安排到电力局拿1w月薪这样的小概率事件，当然最好轮到自己<br>红军长征两万五、打成右派反革命、胼手胝足牺牲尊严去奋斗，最好留给祖辈父辈和别人<br>自然，不是每个吃过苦的人都会得到回报<br>但是，任何时代，每一个既得利益者身后，都有他的祖辈父辈奋斗挣扎乃至流血付出生命的身影<br>羡慕别人有个好爸爸，没什么不可以<br>问题是，你的下一代，会有一个好爸爸吗？<br>至于问到为什么不能有同样的赢面概率？我只能问：为什么物种竞争中，人和猴子不能有同样的赢面概率？<br>物竞天择。猴子的灵魂不一定比你卑微，但你身后有几十万年的类人猿进化积淀。 </p><h2 id="入对行跟对人"><a href="#入对行跟对人" class="headerlink" title="入对行跟对人"></a>入对行跟对人</h2><p>在中国，大概很少有人是一份职业做到底的，虽然如此，第一份工作还是有些需要注意的地方，有两件事情格外重要，第一件是入行，第二件事情是跟人。第一份工作对人最大的影响就是入行，现代的职业分工已经很细，我们基本上只能在一个行业里成为专家，不可能在多个行业里成为专家。很多案例也证明即使一个人在一个行业非常成功，到另外一个行业，往往完全不是那么回事情，“你想改变世界，还是想卖一辈子汽水？”是乔布斯邀请百事可乐总裁约翰·斯考利加盟苹果时所说的话，结果这位在百事非常成功的约翰，到了苹果表现平平。其实没有哪个行业特别好，也没有哪个行业特别差，或许有报道说哪个行业的平均薪资比较高，但是他们没说的是，那个行业的平均压力也比较大。看上去很美的行业一旦进入才发现很多地方其实并不那么完美，只是外人看不见。 </p><p>说实话，我自己都没有发大财，所以我的建议只是让人快乐工作的建议，不是如何发大财的建议，我们只讨论一般普通打工者的情况。我认为选择什么行业并没有太大关系，看问题不能只看眼前。比如，从前年开始，国家开始整顿医疗行业，很多医药公司开不下去，很多医药行业的销售开始转行。其实医药行业的不景气是针对所有公司的，并非针对一家公司，大家的日子都不好过，这个时候跑掉是非常不划算的，大多数正规的医药公司即使不做新生意撑个两三年总是能撑的，大多数医药销售靠工资撑个两三年也是可以撑的，国家不可能永远捏着医药行业不放的，两三年以后光景总归还会好起来的，那个时候别人都跑了而你没跑，那时的日子应该会好过很多。有的时候觉得自己这个行业不行了，问题是，再不行的行业，做得人少了也变成了好行业，当大家都觉得不好的时候，往往却是最好的时候。大家都觉得金融行业好，金融行业门槛高不说，有多少人削尖脑袋要钻进去，竞争激励，进去以后还要时时提防，一个疏忽，就被后来的人给挤掉了，压力巨大，又如何谈得上快乐？也就未必是“好”工作了。 </p><p>太阳能这个东西至今还不能进入实际应用的阶段，但是中国已经有7家和太阳能有关的公司在纽交所上市了，国美苏宁永乐其实是贸易型企业，也能上市，鲁泰纺织连续10年利润增长超过50%，卖茶的一茶一座，卖衣服的海澜之家都能上市……其实选什么行业真的不重要，关键是怎么做。事情都是人做出来的，关键是人。 </p><p>有一点是需要记住的，这个世界上，有史以来直到我们能够预见得到的未来，成功的人总是少数，有钱的人总是少数，大多数人是一般的，普通的，不太成功的。因此，大多数人的做法和看法，往往都不是距离成功最近的做法和看法。因此大多数人说好的东西不见得好，大多数人说不好的东西不见得不好。大多数人都去炒股的时候说明跌只是时间问题，大家越是热情高涨的时候，跌的日子越近。大多数人买房子的时候，房价不会涨，而房价涨的差不多的时候，大多数人才开始买房子。不会有这样一件事情让大家都变成功，发了财，历史上不曾有过，将来也不会发生。有些东西即使一时运气好得到了，还是会在别的时候别的地方失去的。 </p><p>年轻人在职业生涯的刚开始，尤其要注意的是，要做对的事情，不要让自己今后几十年的人生总是提心吊胆，更不值得为了一份工作赔上自己的青春年华。我的公司是个不行贿的公司，以前很多人不理解，甚至自己的员工也不理解，不过如今，我们是同行中最大的企业，客户乐意和我们打交道，尤其是在国家打击腐败的时候，每个人都知道我们做生意不给钱的名声，都敢于和我们做生意。而勇于给钱的公司，不是倒了，就是跑了，要不就是每天睡不好觉，人还是要看长远一点。很多时候，看起来最近的路，其实是最远的路，看起来最远的路，其实是最近的路。 </p><p>跟对人是说，入行后要跟个好领导好老师，刚进社会的人做事情往往没有经验，需要有人言传身教。对于一个人的发展来说，一个好领导是非常重要的。所谓“好”的标准，不是他让你少干活多拿钱，而是以下三个。 </p><p>首先，好领导要有宽广的心胸，如果一个领导每天都会发脾气，那几乎可以肯定他不是个心胸宽广的人，能发脾气的时候却不发脾气的领导，多半是非常厉害的领导。中国人当领导最大的毛病是容忍不了能力比自己强的人，所以常常可以看到的一个现象是，领导很有能力，手下一群庸才或者手下一群闲人。如果看到这样的环境，还是不要去的好。 </p><p>其次，领导要愿意从下属的角度来思考问题，这一点其实是从面试的时候就能发现的，如果这位领导总是从自己的角度来考虑问题，几乎不听你说什么，这就危险了。从下属的角度来考虑问题并不代表同意下属的说法，但他必须了解下属的立场，下属为什么要这么想，然后他才有办法说服你，只关心自己怎么想的领导往往难以获得下属的信服。 </p><p>第三，领导敢于承担责任，如果出了问题就把责任往下推，有了功劳就往自己身上揽，这样的领导不跟也罢。选择领导，要选择关键时刻能抗得住的领导，能够为下属的错误买单的领导，因为这是他作为领导的责任。 </p><p>有可能，你碰不到好领导，因为，中国的领导往往是屁股决定脑袋的领导，因为他坐领导的位置，所以他的话就比较有道理，这是传统观念官本位的误区，可能有大量的这种无知无能的领导，只是，这对于你其实是好事，如果将来有一天你要超过他，你希望他比较聪明还是比较笨？相对来说这样的领导其实不难搞定，只是你要把自己的身段放下来而已。多认识一些人，多和比自己强的人打交道，同样能找到好的老师，不要和一群同样郁闷的人一起控诉社会，控诉老板，这帮不上你，只会让你更消极。和那些比你强的人打交道，看他们是怎么想的，怎么做的，学习他们，然后跟更强的人打交道。 </p><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><p>我们每天做的最多的事情，其实是选择，因此在谈职业生涯的时候不得不提到这个话题。 </p><p>我始终认为，在很大的范围内，我们究竟会成为一个什么样的人，决定权在我们自己，每天我们都在做各种各样的选择，我可以不去写这篇文章，去别人的帖子拍拍砖头，也可以写下这些文字，帮助别人的同时也整理自己的思路，我可以多注意下格式让别人易于阅读，也可以写成一堆，我可以就这样发上来，也可以在发以前再看几遍，你可以选择不刮胡子就去面试，也可以选择出门前照照镜子……每天，每一刻我们都在做这样那样的决定，我们可以漫不经心，也可以多花些心思，成千上万的小选择累计起来，就决定了最终我们是个什么样的人。 </p><p>从某种意义上来说我们的未来不是别人给的，是我们自己选择的，很多人会说我命苦啊，没得选择阿，如果你认为“去微软还是去IBM”“上清华还是上北大”“当销售副总还是当厂长”这种才叫选择的话，的确你没有什么选择，大多数人都没有什么选择。但每天你都可以选择是否为客户服务更周到一些，是否对同事更耐心一些，是否把工作做得更细致一些，是否把情况了解得更清楚一些，是否把不清楚的问题再弄清楚一些……你也可以选择在是否在痛苦中继续坚持，是否抛弃掉自己的那些负面的想法，是否原谅一个人的错误，是否相信我在这里写下的这些话，是否不要再犯同样的错误……生活每天都在给你选择的机会，每天都在给你改变自己人生的机会，你可以选择赖在地上撒泼打滚，也可以选择咬牙站起来。你永远都有选择。有些选择不是立杆见影的，需要累积，比如农民可以选择自己常常去浇地，也可以选择让老天去浇地，诚然你今天浇水下去苗不见得今天马上就长出来，但常常浇水，大部分苗终究会长出来的，如果你不浇，收成一定很糟糕。 </p><p>每天生活都在给你机会，他不会给你一叠现金也不会拱手送你个好工作，但实际上，他还是在给你机会。我的家庭是一个普通的家庭，没有任何了不起的社会关系，我的父亲在大学毕业以后就被分配到了边疆，那个小县城只有一条马路，他们那一代人其实比我们更有理由抱怨，他们什么也没得到，年轻的时候文化大革命，书都没得读，支援边疆插队落户，等到老了，却要给年轻人机会了。他有足够的理由象成千上万那样的青年一样坐在那里抱怨生不逢时，怨气冲天。然而在分配到边疆的十年之后，国家恢复招研究生，他考回了原来的学校。研究生毕业，他被分配到了安徽一家小单位里，又是3年以后，国家第一届招收博士生，他又考回了原来的学校，成为中国第一代博士，那时的他比现在的我年纪还大。生活并没有放弃他，他也没有放弃生活。10年的等待，他做了他自己的选择，他没有放弃，他没有破罐子破摔，所以时机到来的时候，他改变了自己的人生。你最终会成为什么样的人，就决定在你的每个小小的选择之间。 </p><p>你选择相信什么？你选择和谁交朋友？你选择做什么？你选择怎么做？……我们面临太多的选择，而这些选择当中，意识形态层面的选择又远比客观条件的选择来得重要得多，比如选择做什么产品其实并不那么重要，而选择怎么做才重要。选择用什么人并不重要，而选择怎么带这些人才重要。大多数时候选择客观条件并不要紧，大多数关于客观条件的选择并没有对错之分，要紧的是选择怎么做。一个大学生毕业了，他要去微软也好，他要卖猪肉也好，他要创业也好，他要做游戏代练也好，只要不犯法，不害人，都没有什么关系，要紧的是，选择了以后，怎么把事情做好。 </p><p>除了这些，你还可以选择时间和环境，比如，你可以选择把这辈子最大的困难放在最有体力最有精力的时候，也可以走一步看一步，等到了40岁再说，只是到了40多岁，那正是一辈子最脆弱的时候，上有老下有小，如果在那个时候碰上了职业危机，实在是一件很苦恼的事情。与其如此不如在20多岁30多岁的时候吃点苦，好让自己脆弱的时候活得从容一些。你可以选择在温室里成长，也可以选择到野外磨砺，你可以选择在办公室吹冷气的工作，也可以选择40度的酷热下，去见你的客户，只是，这一切最终会累积起来，引导你到你应得的未来。 </p><p>我不敢说所有的事情你都有得选择，但是绝大部分事情你有选择，只是往往你不把这当作一种选择。认真对待每一次选择，才会有比较好的未来。 </p><h2 id="选择职业"><a href="#选择职业" class="headerlink" title="选择职业"></a>选择职业</h2><p>职业的选择，总的来说，无非就是销售、市场、客服、物流、行政、人事、财务、技术、管理几个大类，有个有趣的现象就是，500强的CEO当中最多的是销售出身，第二多的人是财务出身，这两者加起来大概超过95％。现代IT行业也有技术出身成为老板的，但实际上，后来他们还是从事了很多销售和市场的工作，并且表现出色，公司才获得了成功，完全靠技术能力成为公司老板的，几乎没有。这是有原因的，因为销售就是一门跟人打交道的学问，而管理其实也是跟人打交道的学问，这两者之中有很多相通的东西，他们的共同目标就是“让别人去做某件特定的事情。”而财务则是从数字的层面了解生意的本质，从宏观上看待生意的本质，对于一个生意是否挣钱，是否可以正常运作有着最深刻的认识。 </p><p>公司小的时候是销售主导公司，而公司大的时候是财务主导公司，销售的局限性在于只看人情不看数字，财务的局限性在于只看数字不看人情。公司初期，运营成本低，有订单就活得下去，跟客户也没有什么谈判的条件，别人肯给生意做已经谢天谢地了，这个时候订单压倒一切，客户的要求压倒一切，所以当然要顾人情。公司大了以后，一切都要规范化，免得因为不规范引起一些不必要的风险，同时运营成本也变高，必须提高利润率，把有限的资金放到最有产出的地方。对于上市公司来说，股东才不管你客户是不是最近出国，最近是不是那个省又在搞严打，到了时候就要把业绩拿出来，拿不出来就抛股票，这个时候就是数字压倒一切。 </p><p>前两天听到有人说一句话觉得很有道理，开始的时候我们想“能做什么？”，等到公司做大了有规模了，我们想“不能做什么。”很多人在工作中觉得为什么领导这么保守，这也不行那也不行，错过很多机会。很多时候是因为，你还年轻，你想的是“能做什么”，而作为公司领导要考虑的方面很多，他比较关心“不能做什么”。 </p><p>我并非鼓吹大家都去做销售或者财务，究竟选择什么样的职业，和你究竟要选择什么样的人生有关系，有些人就喜欢下班按时回家，看看书听听音乐，那也挺好，但就不适合找个销售的工作了，否则会是折磨自己。有些人就喜欢出风头，喜欢成为一群人的中心，如果选择做财务工作，大概也干不久，因为一般老板不喜欢财务太积极，也不喜欢财务话太多。先想好自己要过怎样的人生，再决定要找什么样的职业。有很多的不快乐，其实是源自不满足，而不满足，很多时候是源自于心不定，而心不定则是因为不清楚究竟自己要什么，不清楚要什么的结果就是什么都想要，结果什么都没得到。<br>我想，我们还是因为生活而工作，不是因为工作而生活，生活是最要紧的，工作只是生活中的一部分。我总是觉得生活的各方方面都是相互影响的，如果生活本身一团乱麻，工作也不会顺利。所以要有娱乐、要有社交、要锻炼身体，要有和睦的家庭……最要紧的，要开心，我的两个销售找我聊天，一肚子苦水，我问他们， 2年以前，你什么都没有，工资不高，没有客户关系，没有业绩，处于被开的边缘，现在的你比那时条件好了很多，为什么现在却更加不开心了？如果你做得越好越不开心，那你为什么还要工作？首先的首先，人还是要让自己高兴起来，让自己心态好起来，这种发自内心的改变会让你更有耐心，更有信心，更有气质，更能包容……否则，看看镜子里的你，你满意么？ </p><p>有人会说，你说得容易，我每天加班，不加班老板就会把我炒掉，每天累得要死，哪有时间娱乐、社交、锻炼？那是人们把目标设定太高的缘故，如果你还在动不动就会被老板炒掉的边缘，那么你当然不能设立太高的目标，难道你还想每天去打高尔夫？你没时间去健身房锻炼身体，但是上下班的时候多走几步可以吧，有楼梯的时候走走楼梯不走电梯可以吧？办公的间隙扭扭脖子拉拉肩膀做做俯卧撑可以吧？谁规定锻炼就一定要拿出每天2个小时去健身房？你没时间社交，每月参加郊游一次可以吧，周末去参加个什么音乐班，绘画班之类的可以吧，去尝试认识一些同行，和他们找机会交流交流可以吧？开始的时候总是有些难的，但迈出这一步就会向良性循环的方向发展。而每天工作得很苦闷，剩下的时间用来咀嚼苦闷，只会陷入恶性循环，让生活更加糟糕。 </p><p>虽然离开惠普仅有十五天，但感觉上惠普已经离我很远。我的心思更多放在规划自己第二阶段的人生，这并非代表我对惠普没有任何眷恋，主要还是想以此驱动自己往前走。 </p><p>万科王石登珠穆朗玛峰的体验给我很多启发，虽然在出发时携带大量的物资，但是登顶的过程中，必须不断减轻负荷，最终只有一个氧气瓶和他登上峰顶。登山如此，漫长的人生又何尝不是。<br>我宣布退休后，接到同事朋友同学的祝贺。大部分人都认为我能够在这样的职位上及年龄选择退休，是一种勇气，也是一种福气。<br>还有一部分人怀疑我只是借此机会换个工作，当然还有一些人说我在HP做不下去了，趁此机会离开。<br>我多年来已经习惯别人对我的说三道四，但对于好友，我还是挺关心大家是否真正理解我的想法，这也是写这篇文章的目的。<br>由于受我父亲早逝的影响，我很早就下定决心，要在有生之年实现自己的愿望，我不要像我父亲一样，为家庭生活忙碌一辈子，临终前感伤，懊恼自己有很多没有实现的理想。<br>一本杂志的文章提到我们在生前就应该思考自己的墓志铭，因为那代表你自己对完美人生的定义，我们应该尽可能在有生之年去实现它。<br>我希望我的墓志铭上除了与家人及好友有关的内容外，是这样写着： </p><ul><li>这个人曾经服务于一家全球最大的IT公司（HP）25年，和她一起经历过数次重大的变革，看着她从以电子仪表为主要的业务变革成全球最大的IT公司。 </li><li>这个人曾经在全球发展最快的国家（中国）工作16年，并担任HP中国区总裁7年，见证及经历过中国改革开放的关键最新突破阶段，与中国一起成长。 </li><li>这个人热爱飞行，曾经是一个有执照的飞行员，累积飞行时数超过X小时，曾经在X个机场起降过。 </li><li>这个人曾经获得管理硕士学位，在领导管理上特别关注中国企业的组织行为及绩效，并且在这个领域上获得中国企业界的认可。<br>我费时25年才总结1和2两项成果，我不知还要费时多久才能达成3和4的愿望，特别是第4个愿望需要经历学术的训练，才能将我的经验总结成知识。<br>否则我的经验将无法有效影响及传授他人。因此重新进入学校学习，拿一个管理学位是有必要的，更何况这是我一个非常重要的愿望。<br>另一方面，我25年的时间都花在运营(operation)的领域，兢兢业业的做好职业人士的工作，它是一份好工作，特别是在HP，这份工作也帮助我建立财务的基础，支持家庭的发展。<br>但是我不想终其一生，都陷入在运营的领域，我想象企业家一样，有机会靠一些点子(ideas)赚钱，虽然风险很高，但是值得一试，即使失败，也不枉走一回，这也是第4个愿望其中的一部份。<br>Carly Fiorina曾经对我说过“这个世界上有好想法的人很多，但有能力去实现的人很少”，2007年5月21日在北大演讲时，有人问起那些书对我影响较大，我想对我人生观有影响的其中一本书叫“TriggerPoint”，它的主要观点是：人生最需要的不是规划，而是在适当的时机掌握机会，采取行动。<br>我这些愿望在我心中已经酝酿一段很长的时间，开始的时候，也许一年想个一两次，过了也就忘掉，但逐渐的，这个心中的声音，愈来愈大，出现的频率也愈来愈高，当它几乎每一个星期都会来与我对话时，我知道时机已经成熟。<br>但和任何人一样，要丢掉自己现在所拥有的，所熟悉的环境及稳定的收入，转到一条自己未曾经历过，存在未知风险的道路，需要绝大的勇气，家人的支持和好友的鼓励。有舍才有得，真是知易行难，我很高兴自己终于跨出了第一步。<br>我要感谢HP的EER提前退休优惠政策，它是其中一个关键的TriggerPoints,另一个关键因素是在去年五六月发生的事。<br>当时我家老大从大学毕业，老二从高中毕业，在他们继续工作及求学前，这是一个黄金时段，让我们全家可以相聚一段较长的时间，我为此很早就计划休一个长假，带着他们到各地游玩。<br>但这个计划因为工作上一件重要的事情（Mark Hurd访华）不得不取消。这个事件刺激了我必须严肃的去对待那心中的声音，我会不会继续不断的错失很多关键的机会?<br>我已经年过50，我会不会走向和我父亲一样的道路？人事部老总Charles跟我说，很多人在所有对他有利的星星都排成一列时，还是错失时机。<br>我知道原因，因为割舍及改变对人是多么的困难，我相信大部分的人都有自己人生的理想，但我也相信很多人最终只是把这些理想当成是幻想，然后不断的为自己寻找不能实现的藉口，南非前总统曼德拉曾经说过，“与改变世界相比，改变自己更困难”，真是一针见血。<br>什么是快乐及有意义的人生？我相信每一个人的定义都不一样，对我来说，能实现我墓志铭上的内容就是我的定义。<br>在中国惠普总裁的位置上固然可以吸引很多的关注及眼球，但是我太太及较亲近的好友，都知道那不是我追求的，那只是为扮演好这个角色必须尽力做好的地方。<br>做一个没有名片的人士，虽然只有十多天的时间，但我发现我的脑袋里已经空出很多空间及能量，让我可以静心的为我ChapterII的新生活做细致的调研及规划。<br>我预订以两年的时间来完成转轨的准备工作，并且花多点时间与家人共处。这两年的时间我希望拿到飞行执照，拿到管理有关的硕士学位，提升英文的水平，建立新的网络，多认识不同行业的人，保持与大陆的联系。希望两年后，我可以顺利回到大陆去实现我第四个愿望。<br>毫不意外，在生活上，我发现很多需要调整的地方。<br>二十多年来，我生活的步调及节奏，几乎完全被公司及工作所左右，不断涌出的deadline及任务驱动我每天的安排，一旦离开这样的环境，第一个需要调整的就是要依靠自己的自律及意志力来驱动每天的活动，睡觉睡到自然醒的态度绝对不正确，放松自己，不给事情设定目标及时间表，或者对错失时间目标无所谓，也不正确，没有年度，季度，月及周计划也不正确。<br>担任高层经理多年，已经养成交待事情的习惯，自己的时间主要花在思考，决策及追踪项目的进展情况，更多是依靠一个庞大的团队来执行具体的事项及秘书来处理很多协调及繁琐的事情。<br>到美国后，很多事情需要打800号电话联系，但这些电话很忙，常让你在waitingline上等待很长的时间，当我在等待时，我可以体会以前秘书工作辛苦的地方，但同时也提醒我自己，在这个阶段要改变态度，培养更大的耐性及自己动手做的能力。<br>生活的内容也要做出很大的调整，多出时间锻炼身体，多出时间关注家人，多出时间关注朋友，多出时间体验不同的休闲活动及飞行，一步步的，希望生活逐步调整到我所期望的轨道上，期待这两年的生活既充实又充满乐趣及意义。<br>第一个快乐的体验就是准备及参加大儿子的订婚礼，那种全心投入，不需担忧工作数字的感觉真好。同时我也租好了公寓，买好了家具及车子，陪家人在周末的时候到Reno及Lake Tahoe玩了一趟，LakeTahoe我去了多次，但这次的体验有所不同，我从心里欣赏到它的美丽。<br>但同时我也在加紧调研的工作，为申请大学及飞行学校做准备，这段时间也和在硅谷的朋友及一些风险投资公司见面，了解不同的产业。<br>我的人生观是“完美的演出来自充分的准备”，“勇于改变自己，适应不断变化的环境，机会将不断出现”，“快乐及有意义的人生来自于实现自己心中的愿望，而非外在的掌声”。<br>我离开时，有两位好朋友送给我两个不同的祝语，Baron的是“多年功过化烟尘”，杨华的是“莫春者，风乎舞雩，咏而归”，它们分别代表了我离开惠普及走向未来的心情。<br>我总结人生有三个阶段，一个阶段是为现实找一份工作，一个阶段是为现实，但可以选择一份自己愿意投入的工作，一个阶段是为理想去做一些事情。<br>我珍惜我的福气，感激HP及同事、好朋友给我的支持，鼓励及协助，这篇文字化我心声的文章与好友分享。</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://user.qzone.qq.com/173579900/blog/1259155684">我们工作到底为了什么</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 60分加油站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>放过犀利哥，别拿乞丐不当人</title>
      <link href="/%E6%94%BE%E8%BF%87%E7%8A%80%E5%88%A9%E5%93%A5%EF%BC%8C%E5%88%AB%E6%8B%BF%E4%B9%9E%E4%B8%90%E4%B8%8D%E5%BD%93%E4%BA%BA/"/>
      <url>/%E6%94%BE%E8%BF%87%E7%8A%80%E5%88%A9%E5%93%A5%EF%BC%8C%E5%88%AB%E6%8B%BF%E4%B9%9E%E4%B8%90%E4%B8%8D%E5%BD%93%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<p><img src="http://b25.photo.store.qq.com/http_imgload.cgi?/rurl4_b=0611ae55b90652ebf67919cd9b472609f4ed6f684a2a831852c73d65f523e7daf39d1046944efaeb941b42c8637e606bdd6551a96d927b016238172c84715e05e3a51a599219e4645b9124e2f6c4a97106aa3144&amp;a=35&amp;b=25" alt="犀利哥"><br>文：孟婆­</p><p>　　当犀利哥走红网络时，我有些疑惑，他只是个乞丐，纵然穿衣服有型，那也不该是他走红网络的理由啊！难道那些明星绯闻不够娱乐大众吗？作为看客，你热衷于追求政治新闻或者娱乐大事都说得过去，但当你把鼠标点向犀利哥以获取廉价欢乐时，你是否想过，他也是个人，他有自己权利按照自己的想法去生活，你们，凭什么以点击别人来获得短暂的娱乐？甚至有人围观犀利哥吓哭他。­</p><p>犀利哥走红缘于天涯上的一个帖子，发帖者称犀利哥造型惊人，发动网友人肉搜索。人肉搜索是否违法？这是两会代表们应该关注的话题。我只想说，假如今天被搜索的不是犀利哥，而是一个正常人，一个普通如你的人，当你被网友们如此恶搞成名时，你会乐意吗？就算你乐意，你怎知道犀利哥也乐意？那些恶搞的人，有没有试着尊重过别人，是否知道不尊重别人也会让别人贬低你。以这种变态的方式来获取快乐，无异于将自己的快乐建立在别人的痛苦之上。­<br>　　<br>在一段关于犀利哥的视频采访中，记者貌似关心地说，我们围着犀利哥，只因为想真心关怀他。一名记者甚至理直气壮地说：“他需要别人的帮助和同情！”犀利哥在听到这句话后仰天长吼。我想，他不是没有感觉，不是一个完全意义上的乞丐。因为他拒绝同情。而与记者的行为相仿，相关救助部门在犀利哥出名之后，急于带走犀利哥，却遭到犀利哥本人的拒绝。宁波市救助站发动两批人找了两天，而宁波市副秘书长、新闻发言人张松义正严词地说“政府有责任让每一个生命得到关注，也有责任让每个人感受到这座城市的温暖。”。不能不说，这是某些部门的形象工程。在他出名之前，你们怎么不帮助呢？满大街那么多乞丐，你们既然觉得有责任帮助每一个人，怎么不去关心他们呢？况且，倘若当初就关心犀利哥，他至于在流浪七年之后才受到你们的“热情关心”吗？他们或许以为，救助了犀利哥，某些部门在人民心目中的形象就会变得高大神圣。但，这样急功近利正让我们反感。正所谓欲盖弥彰，宁波市是想证明救助部门很负责还是宁波市没有乞丐人民生活很幸福？­­</p><p>而一些网友由最初的好奇心理到同情，渐渐产生了想要帮助犀利哥的愿望。愿望是好的，只是能不能接受在本人。别拿人不当人，别拿人当猴子耍。那些想要帮助他的人，有几个是出于真心呢？只是在看到一个弱者之后，油然而生一种优越感及自豪感，并且觉得能帮助他很幸福吧。别说我小人之心，试问，倘若众多所谓的善良网友们真善良，又何必非要帮助一个远在千里之外的乞丐呢？谁生活的城市中没有乞丐呢，难道他们会拒绝你的帮助吗？说是帮助，到底是为了作秀还是成名也未可知。­　­</p><p>著名的古希腊哲学家第欧根尼身上曾有这样一个故事：有一天第欧根尼吃饱饭躺在墙角下晒太阳，富甲天下的国王亚历山大看到第欧根尼身穿破烂，想要帮助他，便问第欧根尼需要什么帮助。而第欧根尼只是伸了个懒腰说，有，请你站开别挡住我的阳光就是在帮助我了。­<br>　　­<br>很多时候，我们自以为能帮助别人，殊不知当你同情的目光看着别人时，你已经在伤害他而不是帮助；很多时候我们以为对方需要帮助，而他其实并不稀罕。如果你们想做一个善良的人，就请帮助身边每一个需要帮助的人，假如真正做到让社会上老有所养幼有所依，街边没有卖艺的小孩也没有跪着乞讨的老人，那时才是我们真正感到骄傲的时候。而现在，请别为了满足你个人的同情心和幸福感就贸然打扰别人的生活，别把你阴暗的猎奇心理伸向弱势群体，别为你枯燥的生活寻找这样的兴奋剂。­</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://user.qzone.qq.com/342667730/blog/1267628660">放过犀利哥，别拿乞丐不当人</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 60分加油站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 尊重 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于爱的选择题</title>
      <link href="/%E5%85%B3%E4%BA%8E%E7%88%B1%E7%9A%84%E9%80%89%E6%8B%A9%E9%A2%98/"/>
      <url>/%E5%85%B3%E4%BA%8E%E7%88%B1%E7%9A%84%E9%80%89%E6%8B%A9%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>上课了。老教授面带微笑，走进教室，对同学们说：“我受一家机构委托，来做一项问卷调查，请同学们帮个忙。”一听这话，教室里轻微的一阵议论：问卷？比上课有趣多了。<br>问卷表发下来，同学们一看，只有两道题。<br>1、他很爱她。她细细的瓜子脸，弯弯的娥眉，面色白皙，美丽动人。可是有一天，她不幸遇上了车祸，痊愈后，脸上留下几道大大的丑陋疤痕。你觉得，他会一如既往地爱她吗？<br>A、他一定会 B、他一定不会 C、他可能会  </p><p>2、她很爱他。他是商界的精英，儒雅沉稳，敢打敢拼。忽然有一天，他破产了。你觉得，她还会像以前一样爱他吗？<br>A、她一定会 B、她一定不会 C、她可能会</p><p>一会儿，同学们就做好了。问卷收上来，教授一统计，发现：第一题有10%的同学选A，10%的同学选B，80%的同学选C。第二题呢，30%的同学选了A，30%的同学选B，40%的同学选C。<br>“看来，美女毁容比男人破产，更让人不能容忍啊。”教授笑了，“做这两题时，潜意识里，你们是不是把他和她当成了恋人关系？”<br>“是啊。”同学们答得很整齐。<br>“可是，题目本身并没有说他和她是恋人关系啊？”教授似有深意地看着大家，“现在，我们来假设一下，如果，第一题中的‘他’是‘她’的父亲，第二题中的‘她’是‘他’的母亲。让你把这两道题重新做一遍，你还会坚持原来的选择吗？”<br>问卷再次发到同学们的手中，教室里忽然变得非常宁静，一张张年青的面庞变得凝重而深沉。几分钟后，问卷收了上来，教授再一统计，两道题，同学们都100%地选了A。<br>教授的语调深沉而动情：“<strong>这个世界上，有一种爱，亘古绵长，无私无求；不因季节更替。不因名利浮沉，这就是父母的爱啊！</strong>”<br>看了，想了，懂了，别忘了世上最爱我们的人就是家里的父母。想家了给家里打个电话，过节了给父母发条短信，父母其实很容易满足的，我们一个小小的举动就能给父母带来无限的感动。</p>]]></content>
      
      
      <categories>
          
          <category> 60分加油站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
            <tag> 爱情 </tag>
            
            <tag> 亲情 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
